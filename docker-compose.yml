version: "2.1"
volumes:
  resin-data: {}
services:
  # postgres:
  #   build:
  #     context: ./host-images/postgres
  #   volumes:
  #     - "resin-data:/data"
  #   restart: always
  #   network_mode: host
  #   environment:
  #     POSTGRES_USER: skyscraper
  #     POSTGRES_PASSWORD: sdr
  #     PGDATA: /data/postgres
  #     POSTGRES_DB: radio
  # prisma:
  #   image: prismagraphql/prisma
  #   restart: always
  #   ports:
  #     - "4466:4466"
  #   environment:
  #     PRISMA_CONFIG: |
  #       managementApiSecret: scrapingskies
  #       port: 4466
  #       databases:
  #         default:
  #           connector: postgres
  #           migrations: true
  #           host: postgres
  #           port: 5432
  #           user: skyscraper
  #           password: sdr
  prometheus:
    cpu_shares: 40
    build:
      context: ./host-images/prometheus
    privileged: true
    pid: host
    restart: always
    ports:
      - 8080:8080
  manager:
    build:
      context: ./host-images/manager
    privileged: true
    pid: host
    restart: always
    environment:
      - "NODE_ENV=production"
    volumes:
      - "resin-data:/data"
    ports:
      - 3000:3000
  trunk-recorder:
    cpu_shares: 1000
    build:
      context: ./host-images/trunk-recorder
    privileged: true
    restart: unless-stopped
    depends_on:
      - "config"
    network_mode: host
    mem_swappiness: 10
    cap_add:
      - SYS_RAWIO
    volumes:
      - "resin-data:/data"
    environment:
      - RECORDER_CONF
  config:
    cpu_shares: 40
    build:
      context: ./host-images/config
    network_mode: host
    restart: "on-failure"
    volumes:
      - "resin-data:/data"
  # mqtt:
  #   image: panuwitp/mosquitto-arm
  #   ports:
  #     - "1883:1883"
  # node-red:
  #   build:
  #     context: ./host-images/node-red
  #   volumes:
  #     - "resin-data:/data"
  #   ports:
  #     - "1880:1880"
  #   depends_on:
  #     - mqtt
  #   restart: always
  nginx:
    cpu_shares: 40
    build:
      context: ./host-images/nginx
    privileged: true
    depends_on:
      - manager
      - prometheus
    ports:
      - "80:80"
      - "443:443"
    restart: always
  debugger:
    cpu_shares: 40
    build:
      context: ./host-images/debugger
    command: "exit 0"
    restart: "no"
    privileged: true
    volumes:
      - "resin-data:/data"
  # wifi-connect:
  #   build:
  #     context: ./host-images/wifi-connect
  #   restart: no
  #   privileged: true
  #   network_mode: "host"
  #   labels:
  #     io.resin.features.dbus: "1"
