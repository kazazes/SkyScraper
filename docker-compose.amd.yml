version: "2"
volumes:
  resin-data: {}
services:
  wifi-connect:
    privileged: true
    pid: host
    network_mode: host
    labels:
      io.balena.features.dbus: "1"
    build:
        dockerfile: Dockerfile
        context: edge-images/wifi-connect
    ports:
      - "8888:80"
  sysdig-agent:
    restart: always
    privileged: true
    network_mode: host
    pid: host
    environment:
      - ACCESS_KEY=9b98a2e6-f13c-4b72-9fc9-997fb4cd02b3
      - SECURE=true
      - TAGS=ss1:node
    shm_size: 512m
    image: sysdig/agent
    labels:
      io.balena.features.balena-socket: "1"
      io.balena.features.kernel-modules: "1"
  mqtt:
    build:
        dockerfile: Dockerfile
        context: edge-images/mqtt
    container_name: mqtt
    user: root
    ports:
      - "1883:1883"
    volumes:
      - "./data:/data"
  config:
    build:
        dockerfile: Dockerfile
        context: edge-images/config
    container_name: config
    network_mode: host
    restart: "on-failure"
    volumes:
      - "./data:/data"
  backend:
    build:
        dockerfile: Dockerfile
        context: edge-images/backend
    volumes:
      - "./data:/data"
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - ENABLE_UPLOAD=true
      - GCP_PROJECT_ID=methodical-tea-237508
      - GCP_REGION=us-central1
      - ENGINE_API_KEY=service:skyscraper:vzyaqidtNPEdZasGdbPdaA
      - GOOGLE_APPLICATION_CREDENTIALS=/data/certs/gcp.json
      - GRAPHQL_PORT=4000
      - MQTT_HOST=mqtt
      - MQTT_PASSWORD=Ur6yANnx@ZD
      - MQTT_PORT=1883
      - MQTT_USERNAME=edge
      - MQTT_UPSTREAM_HOST=mqtt://skyscraper.ai
      - PRISMA_ENDPOINT=https://us1.prisma.sh/peter-k/skyscraper/dev
      - PRISMA_SECRET=scrapingskies
      - SENTRY_URI=https://4ac277bd085b4acbbaa74de8c33202b2@sentry.io/1441821
      - REDIS_HOST=redis
    depends_on:
      - redis
  netdata:
    image: skyscraperai/netdata
    container_name: netdata
    hostname: edge.sibyl.vision
    ports:
      - 19999:19999
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    privileged: true
    restart: always
    labels:
      io.balena.features.dbus: "1"
      io.balena.features.balena-socket: "1"
  nginx:
    build:
        dockerfile: Dockerfile
        context: edge-images/nginx
    container_name: nginx
    depends_on:
      - frontend
      - nodered
      - netdata
      - backend
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - "./data:/data"
  nodered:
    build:
        dockerfile: Dockerfile
        context: edge-images/node-red
    container_name: nodered
    volumes:
      - "./data:/data"
    ports:
      - "1880:1880"
    environment:
      - NODE_ENV=production
    restart: always
  ngrok:
    build:
        dockerfile: Dockerfile
        context: edge-images/ngrok
    links:
      - nginx:https
    container_name: ngrok
    privileged: false
    depends_on:
      - nginx
    command: ngrok tls -region=us -authtoken=iiX4RYrrdFWgU9pdDEnR_4qRcocGF5v9E3SjGmys7L -hostname=edge.sibyl.vision nginx:443
  frontend:
    build:
        dockerfile: Dockerfile
        context: edge-images/frontend
    volumes:
      - "./data:/data"
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - HOST=0.0.0.0
      - NODE_ENV=production
      - NETDATA_HTTP=https://edge.sibyl.vision/netdata/
      - GRAPHQL_HTTP=https://edge.sibyl.vision/graphql/
      - GRAPHQL_WS=wss://edge.sibyl.vision/graphql/
      - GOOGLE_APPLICATION_CREDENTIALS=/data/config/certs/gcp.json
    restart: always
  redis:
    build:
        dockerfile: Dockerfile
        context: edge-images/redis
    container_name: redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    restart: always
  trunk-recorder:
    build:
        dockerfile: Dockerfile
        context: edge-images/trunk-recorder
    privileged: true
    depends_on:
      - "config"
    volumes:
      - "./data:/data"
    environment:
      - RECORDER_CONF=sites/SF-PK/config.json
      - SHORTNAME=SFPD
      - MQTT_PASSWORD=1
      - MQTT_PORT=1883
      - MQTT_USERNAME=edge
      - MQTT_HOST=mqtt
  ftp:
    image: stilliard/pure-ftpd:hardened
    environment:
      - PUBLICHOST=localhost
      - ADDED_FLAGS=-d -d
      - FTP_USER_NAME=skyscraper
      - FTP_USER_PASS=$craping$kies
      - FTP_USER_HOME=/data
    ports:
      - "21:21"
      - "30000-30009:30000-30009"
    restart: on-failure
