// Code generated by Prisma (prisma@1.31.1). DO NOT EDIT.
// Please don't change this file manually but run `prisma generate` to update it.
// For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

import { DocumentNode } from "graphql";
import {
  makePrismaClientClass,
  BaseClientOptions,
  Model
} from "prisma-client-lib";
import { typeDefs } from "./prisma-schema";

export type AtLeastOne<T, U = { [K in keyof T]: Pick<T, K> }> = Partial<T> &
  U[keyof U];

export interface Exists {
  dump1090Aircraft: (where?: Dump1090AircraftWhereInput) => Promise<boolean>;
  dump1090Message: (where?: Dump1090MessageWhereInput) => Promise<boolean>;
  trunkedCall: (where?: TrunkedCallWhereInput) => Promise<boolean>;
  trunkedCallFrequencyTime: (
    where?: TrunkedCallFrequencyTimeWhereInput
  ) => Promise<boolean>;
  trunkedCallSource: (where?: TrunkedCallSourceWhereInput) => Promise<boolean>;
  trunkedConfig: (where?: TrunkedConfigWhereInput) => Promise<boolean>;
  trunkedSource: (where?: TrunkedSourceWhereInput) => Promise<boolean>;
  trunkedSystem: (where?: TrunkedSystemWhereInput) => Promise<boolean>;
  trunkedTalkgroup: (where?: TrunkedTalkgroupWhereInput) => Promise<boolean>;
}

export interface Node {}

export type FragmentableArray<T> = Promise<Array<T>> & Fragmentable;

export interface Fragmentable {
  $fragment<T>(fragment: string | DocumentNode): Promise<T>;
}

export interface Prisma {
  $exists: Exists;
  $graphql: <T = any>(
    query: string,
    variables?: { [key: string]: any }
  ) => Promise<T>;

  /**
   * Queries
   */

  dump1090Aircraft: (
    where: Dump1090AircraftWhereUniqueInput
  ) => Dump1090AircraftPromise;
  dump1090Aircrafts: (args?: {
    where?: Dump1090AircraftWhereInput;
    orderBy?: Dump1090AircraftOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<Dump1090Aircraft>;
  dump1090AircraftsConnection: (args?: {
    where?: Dump1090AircraftWhereInput;
    orderBy?: Dump1090AircraftOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => Dump1090AircraftConnectionPromise;
  dump1090Message: (
    where: Dump1090MessageWhereUniqueInput
  ) => Dump1090MessagePromise;
  dump1090Messages: (args?: {
    where?: Dump1090MessageWhereInput;
    orderBy?: Dump1090MessageOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<Dump1090Message>;
  dump1090MessagesConnection: (args?: {
    where?: Dump1090MessageWhereInput;
    orderBy?: Dump1090MessageOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => Dump1090MessageConnectionPromise;
  trunkedCall: (where: TrunkedCallWhereUniqueInput) => TrunkedCallPromise;
  trunkedCalls: (args?: {
    where?: TrunkedCallWhereInput;
    orderBy?: TrunkedCallOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<TrunkedCall>;
  trunkedCallsConnection: (args?: {
    where?: TrunkedCallWhereInput;
    orderBy?: TrunkedCallOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => TrunkedCallConnectionPromise;
  trunkedCallFrequencyTime: (
    where: TrunkedCallFrequencyTimeWhereUniqueInput
  ) => TrunkedCallFrequencyTimePromise;
  trunkedCallFrequencyTimes: (args?: {
    where?: TrunkedCallFrequencyTimeWhereInput;
    orderBy?: TrunkedCallFrequencyTimeOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<TrunkedCallFrequencyTime>;
  trunkedCallFrequencyTimesConnection: (args?: {
    where?: TrunkedCallFrequencyTimeWhereInput;
    orderBy?: TrunkedCallFrequencyTimeOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => TrunkedCallFrequencyTimeConnectionPromise;
  trunkedCallSource: (
    where: TrunkedCallSourceWhereUniqueInput
  ) => TrunkedCallSourcePromise;
  trunkedCallSources: (args?: {
    where?: TrunkedCallSourceWhereInput;
    orderBy?: TrunkedCallSourceOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<TrunkedCallSource>;
  trunkedCallSourcesConnection: (args?: {
    where?: TrunkedCallSourceWhereInput;
    orderBy?: TrunkedCallSourceOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => TrunkedCallSourceConnectionPromise;
  trunkedConfig: (where: TrunkedConfigWhereUniqueInput) => TrunkedConfigPromise;
  trunkedConfigs: (args?: {
    where?: TrunkedConfigWhereInput;
    orderBy?: TrunkedConfigOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<TrunkedConfig>;
  trunkedConfigsConnection: (args?: {
    where?: TrunkedConfigWhereInput;
    orderBy?: TrunkedConfigOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => TrunkedConfigConnectionPromise;
  trunkedSource: (where: TrunkedSourceWhereUniqueInput) => TrunkedSourcePromise;
  trunkedSources: (args?: {
    where?: TrunkedSourceWhereInput;
    orderBy?: TrunkedSourceOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<TrunkedSource>;
  trunkedSourcesConnection: (args?: {
    where?: TrunkedSourceWhereInput;
    orderBy?: TrunkedSourceOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => TrunkedSourceConnectionPromise;
  trunkedSystem: (where: TrunkedSystemWhereUniqueInput) => TrunkedSystemPromise;
  trunkedSystems: (args?: {
    where?: TrunkedSystemWhereInput;
    orderBy?: TrunkedSystemOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<TrunkedSystem>;
  trunkedSystemsConnection: (args?: {
    where?: TrunkedSystemWhereInput;
    orderBy?: TrunkedSystemOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => TrunkedSystemConnectionPromise;
  trunkedTalkgroup: (
    where: TrunkedTalkgroupWhereUniqueInput
  ) => TrunkedTalkgroupPromise;
  trunkedTalkgroups: (args?: {
    where?: TrunkedTalkgroupWhereInput;
    orderBy?: TrunkedTalkgroupOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<TrunkedTalkgroup>;
  trunkedTalkgroupsConnection: (args?: {
    where?: TrunkedTalkgroupWhereInput;
    orderBy?: TrunkedTalkgroupOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => TrunkedTalkgroupConnectionPromise;
  node: (args: { id: ID_Output }) => Node;

  /**
   * Mutations
   */

  createDump1090Aircraft: (
    data: Dump1090AircraftCreateInput
  ) => Dump1090AircraftPromise;
  updateDump1090Aircraft: (args: {
    data: Dump1090AircraftUpdateInput;
    where: Dump1090AircraftWhereUniqueInput;
  }) => Dump1090AircraftPromise;
  updateManyDump1090Aircrafts: (args: {
    data: Dump1090AircraftUpdateManyMutationInput;
    where?: Dump1090AircraftWhereInput;
  }) => BatchPayloadPromise;
  upsertDump1090Aircraft: (args: {
    where: Dump1090AircraftWhereUniqueInput;
    create: Dump1090AircraftCreateInput;
    update: Dump1090AircraftUpdateInput;
  }) => Dump1090AircraftPromise;
  deleteDump1090Aircraft: (
    where: Dump1090AircraftWhereUniqueInput
  ) => Dump1090AircraftPromise;
  deleteManyDump1090Aircrafts: (
    where?: Dump1090AircraftWhereInput
  ) => BatchPayloadPromise;
  createDump1090Message: (
    data: Dump1090MessageCreateInput
  ) => Dump1090MessagePromise;
  updateDump1090Message: (args: {
    data: Dump1090MessageUpdateInput;
    where: Dump1090MessageWhereUniqueInput;
  }) => Dump1090MessagePromise;
  updateManyDump1090Messages: (args: {
    data: Dump1090MessageUpdateManyMutationInput;
    where?: Dump1090MessageWhereInput;
  }) => BatchPayloadPromise;
  upsertDump1090Message: (args: {
    where: Dump1090MessageWhereUniqueInput;
    create: Dump1090MessageCreateInput;
    update: Dump1090MessageUpdateInput;
  }) => Dump1090MessagePromise;
  deleteDump1090Message: (
    where: Dump1090MessageWhereUniqueInput
  ) => Dump1090MessagePromise;
  deleteManyDump1090Messages: (
    where?: Dump1090MessageWhereInput
  ) => BatchPayloadPromise;
  createTrunkedCall: (data: TrunkedCallCreateInput) => TrunkedCallPromise;
  updateTrunkedCall: (args: {
    data: TrunkedCallUpdateInput;
    where: TrunkedCallWhereUniqueInput;
  }) => TrunkedCallPromise;
  updateManyTrunkedCalls: (args: {
    data: TrunkedCallUpdateManyMutationInput;
    where?: TrunkedCallWhereInput;
  }) => BatchPayloadPromise;
  upsertTrunkedCall: (args: {
    where: TrunkedCallWhereUniqueInput;
    create: TrunkedCallCreateInput;
    update: TrunkedCallUpdateInput;
  }) => TrunkedCallPromise;
  deleteTrunkedCall: (where: TrunkedCallWhereUniqueInput) => TrunkedCallPromise;
  deleteManyTrunkedCalls: (
    where?: TrunkedCallWhereInput
  ) => BatchPayloadPromise;
  createTrunkedCallFrequencyTime: (
    data: TrunkedCallFrequencyTimeCreateInput
  ) => TrunkedCallFrequencyTimePromise;
  updateTrunkedCallFrequencyTime: (args: {
    data: TrunkedCallFrequencyTimeUpdateInput;
    where: TrunkedCallFrequencyTimeWhereUniqueInput;
  }) => TrunkedCallFrequencyTimePromise;
  updateManyTrunkedCallFrequencyTimes: (args: {
    data: TrunkedCallFrequencyTimeUpdateManyMutationInput;
    where?: TrunkedCallFrequencyTimeWhereInput;
  }) => BatchPayloadPromise;
  upsertTrunkedCallFrequencyTime: (args: {
    where: TrunkedCallFrequencyTimeWhereUniqueInput;
    create: TrunkedCallFrequencyTimeCreateInput;
    update: TrunkedCallFrequencyTimeUpdateInput;
  }) => TrunkedCallFrequencyTimePromise;
  deleteTrunkedCallFrequencyTime: (
    where: TrunkedCallFrequencyTimeWhereUniqueInput
  ) => TrunkedCallFrequencyTimePromise;
  deleteManyTrunkedCallFrequencyTimes: (
    where?: TrunkedCallFrequencyTimeWhereInput
  ) => BatchPayloadPromise;
  createTrunkedCallSource: (
    data: TrunkedCallSourceCreateInput
  ) => TrunkedCallSourcePromise;
  updateTrunkedCallSource: (args: {
    data: TrunkedCallSourceUpdateInput;
    where: TrunkedCallSourceWhereUniqueInput;
  }) => TrunkedCallSourcePromise;
  updateManyTrunkedCallSources: (args: {
    data: TrunkedCallSourceUpdateManyMutationInput;
    where?: TrunkedCallSourceWhereInput;
  }) => BatchPayloadPromise;
  upsertTrunkedCallSource: (args: {
    where: TrunkedCallSourceWhereUniqueInput;
    create: TrunkedCallSourceCreateInput;
    update: TrunkedCallSourceUpdateInput;
  }) => TrunkedCallSourcePromise;
  deleteTrunkedCallSource: (
    where: TrunkedCallSourceWhereUniqueInput
  ) => TrunkedCallSourcePromise;
  deleteManyTrunkedCallSources: (
    where?: TrunkedCallSourceWhereInput
  ) => BatchPayloadPromise;
  createTrunkedConfig: (data: TrunkedConfigCreateInput) => TrunkedConfigPromise;
  updateTrunkedConfig: (args: {
    data: TrunkedConfigUpdateInput;
    where: TrunkedConfigWhereUniqueInput;
  }) => TrunkedConfigPromise;
  updateManyTrunkedConfigs: (args: {
    data: TrunkedConfigUpdateManyMutationInput;
    where?: TrunkedConfigWhereInput;
  }) => BatchPayloadPromise;
  upsertTrunkedConfig: (args: {
    where: TrunkedConfigWhereUniqueInput;
    create: TrunkedConfigCreateInput;
    update: TrunkedConfigUpdateInput;
  }) => TrunkedConfigPromise;
  deleteTrunkedConfig: (
    where: TrunkedConfigWhereUniqueInput
  ) => TrunkedConfigPromise;
  deleteManyTrunkedConfigs: (
    where?: TrunkedConfigWhereInput
  ) => BatchPayloadPromise;
  createTrunkedSource: (data: TrunkedSourceCreateInput) => TrunkedSourcePromise;
  updateTrunkedSource: (args: {
    data: TrunkedSourceUpdateInput;
    where: TrunkedSourceWhereUniqueInput;
  }) => TrunkedSourcePromise;
  updateManyTrunkedSources: (args: {
    data: TrunkedSourceUpdateManyMutationInput;
    where?: TrunkedSourceWhereInput;
  }) => BatchPayloadPromise;
  upsertTrunkedSource: (args: {
    where: TrunkedSourceWhereUniqueInput;
    create: TrunkedSourceCreateInput;
    update: TrunkedSourceUpdateInput;
  }) => TrunkedSourcePromise;
  deleteTrunkedSource: (
    where: TrunkedSourceWhereUniqueInput
  ) => TrunkedSourcePromise;
  deleteManyTrunkedSources: (
    where?: TrunkedSourceWhereInput
  ) => BatchPayloadPromise;
  createTrunkedSystem: (data: TrunkedSystemCreateInput) => TrunkedSystemPromise;
  updateTrunkedSystem: (args: {
    data: TrunkedSystemUpdateInput;
    where: TrunkedSystemWhereUniqueInput;
  }) => TrunkedSystemPromise;
  updateManyTrunkedSystems: (args: {
    data: TrunkedSystemUpdateManyMutationInput;
    where?: TrunkedSystemWhereInput;
  }) => BatchPayloadPromise;
  upsertTrunkedSystem: (args: {
    where: TrunkedSystemWhereUniqueInput;
    create: TrunkedSystemCreateInput;
    update: TrunkedSystemUpdateInput;
  }) => TrunkedSystemPromise;
  deleteTrunkedSystem: (
    where: TrunkedSystemWhereUniqueInput
  ) => TrunkedSystemPromise;
  deleteManyTrunkedSystems: (
    where?: TrunkedSystemWhereInput
  ) => BatchPayloadPromise;
  createTrunkedTalkgroup: (
    data: TrunkedTalkgroupCreateInput
  ) => TrunkedTalkgroupPromise;
  updateTrunkedTalkgroup: (args: {
    data: TrunkedTalkgroupUpdateInput;
    where: TrunkedTalkgroupWhereUniqueInput;
  }) => TrunkedTalkgroupPromise;
  updateManyTrunkedTalkgroups: (args: {
    data: TrunkedTalkgroupUpdateManyMutationInput;
    where?: TrunkedTalkgroupWhereInput;
  }) => BatchPayloadPromise;
  upsertTrunkedTalkgroup: (args: {
    where: TrunkedTalkgroupWhereUniqueInput;
    create: TrunkedTalkgroupCreateInput;
    update: TrunkedTalkgroupUpdateInput;
  }) => TrunkedTalkgroupPromise;
  deleteTrunkedTalkgroup: (
    where: TrunkedTalkgroupWhereUniqueInput
  ) => TrunkedTalkgroupPromise;
  deleteManyTrunkedTalkgroups: (
    where?: TrunkedTalkgroupWhereInput
  ) => BatchPayloadPromise;

  /**
   * Subscriptions
   */

  $subscribe: Subscription;
}

export interface Subscription {
  dump1090Aircraft: (
    where?: Dump1090AircraftSubscriptionWhereInput
  ) => Dump1090AircraftSubscriptionPayloadSubscription;
  dump1090Message: (
    where?: Dump1090MessageSubscriptionWhereInput
  ) => Dump1090MessageSubscriptionPayloadSubscription;
  trunkedCall: (
    where?: TrunkedCallSubscriptionWhereInput
  ) => TrunkedCallSubscriptionPayloadSubscription;
  trunkedCallFrequencyTime: (
    where?: TrunkedCallFrequencyTimeSubscriptionWhereInput
  ) => TrunkedCallFrequencyTimeSubscriptionPayloadSubscription;
  trunkedCallSource: (
    where?: TrunkedCallSourceSubscriptionWhereInput
  ) => TrunkedCallSourceSubscriptionPayloadSubscription;
  trunkedConfig: (
    where?: TrunkedConfigSubscriptionWhereInput
  ) => TrunkedConfigSubscriptionPayloadSubscription;
  trunkedSource: (
    where?: TrunkedSourceSubscriptionWhereInput
  ) => TrunkedSourceSubscriptionPayloadSubscription;
  trunkedSystem: (
    where?: TrunkedSystemSubscriptionWhereInput
  ) => TrunkedSystemSubscriptionPayloadSubscription;
  trunkedTalkgroup: (
    where?: TrunkedTalkgroupSubscriptionWhereInput
  ) => TrunkedTalkgroupSubscriptionPayloadSubscription;
}

export interface ClientConstructor<T> {
  new (options?: BaseClientOptions): T;
}

/**
 * Types
 */

export type TrunkedCallFrequencyTimeOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "frequency_ASC"
  | "frequency_DESC"
  | "time_ASC"
  | "time_DESC"
  | "position_ASC"
  | "position_DESC"
  | "length_ASC"
  | "length_DESC"
  | "errors_ASC"
  | "errors_DESC"
  | "spikes_ASC"
  | "spikes_DESC";

export type Dump1090MessageOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "messageType_ASC"
  | "messageType_DESC"
  | "transmissionType_ASC"
  | "transmissionType_DESC"
  | "generated_ASC"
  | "generated_DESC"
  | "logged_ASC"
  | "logged_DESC"
  | "flightId_ASC"
  | "flightId_DESC"
  | "squawk_ASC"
  | "squawk_DESC"
  | "alert_ASC"
  | "alert_DESC"
  | "emergency_ASC"
  | "emergency_DESC"
  | "isOnGround_ASC"
  | "isOnGround_DESC"
  | "latitude_ASC"
  | "latitude_DESC"
  | "longitude_ASC"
  | "longitude_DESC"
  | "verticalRate_ASC"
  | "verticalRate_DESC"
  | "track_ASC"
  | "track_DESC"
  | "groupSpeed_ASC"
  | "groupSpeed_DESC"
  | "callsign_ASC"
  | "callsign_DESC"
  | "altitude_ASC"
  | "altitude_DESC";

export type TrunkedCallSourceOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "sourceId_ASC"
  | "sourceId_DESC"
  | "time_ASC"
  | "time_DESC"
  | "position_ASC"
  | "position_DESC";

export type TrunkedConfigOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "name_ASC"
  | "name_DESC"
  | "defaultMode_ASC"
  | "defaultMode_DESC"
  | "captureDir_ASC"
  | "captureDir_DESC"
  | "callTimeout_ASC"
  | "callTimeout_DESC"
  | "logFile_ASC"
  | "logFile_DESC"
  | "frequencyFormat_ASC"
  | "frequencyFormat_DESC"
  | "controlWarnRate_ASC"
  | "controlWarnRate_DESC"
  | "statusAsString_ASC"
  | "statusAsString_DESC";

export type TrunkedCallOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "frequency_ASC"
  | "frequency_DESC"
  | "startTime_ASC"
  | "startTime_DESC"
  | "endTime_ASC"
  | "endTime_DESC"
  | "emergency_ASC"
  | "emergency_DESC"
  | "duration_ASC"
  | "duration_DESC"
  | "source_ASC"
  | "source_DESC"
  | "audioPath_ASC"
  | "audioPath_DESC"
  | "callHash_ASC"
  | "callHash_DESC"
  | "wavPath_ASC"
  | "wavPath_DESC";

export type Dump1090AircraftOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "IcaoID_ASC"
  | "IcaoID_DESC";

export type TrunkedTalkgroupOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "decimal_ASC"
  | "decimal_DESC"
  | "mode_ASC"
  | "mode_DESC"
  | "alphaTag_ASC"
  | "alphaTag_DESC"
  | "description_ASC"
  | "description_DESC"
  | "tag_ASC"
  | "tag_DESC"
  | "group_ASC"
  | "group_DESC"
  | "priority_ASC"
  | "priority_DESC"
  | "hash_ASC"
  | "hash_DESC";

export type TrunkedSystemOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "type_ASC"
  | "type_DESC"
  | "recordUnknown_ASC"
  | "recordUnknown_DESC"
  | "shortName_ASC"
  | "shortName_DESC"
  | "uploadScript_ASC"
  | "uploadScript_DESC"
  | "audioArchive_ASC"
  | "audioArchive_DESC"
  | "callLog_ASC"
  | "callLog_DESC"
  | "bandplan_ASC"
  | "bandplan_DESC"
  | "bandplanBase_ASC"
  | "bandplanBase_DESC"
  | "bandplanHigh_ASC"
  | "bandplanHigh_DESC"
  | "bandplanSpacing_ASC"
  | "bandplanSpacing_DESC"
  | "bandplanOffset_ASC"
  | "bandplanOffset_DESC"
  | "talkgroupDisplayFormat_ASC"
  | "talkgroupDisplayFormat_DESC"
  | "delayCreateOutput_ASC"
  | "delayCreateOutput_DESC"
  | "hideEncrypted_ASC"
  | "hideEncrypted_DESC"
  | "hideUnknownTalkgroups_ASC"
  | "hideUnknownTalkgroups_DESC";

export type Dump1090MessageType =
  | "SELECTION_CHANGE"
  | "NEW_ID"
  | "NEW_AIRCRAFT"
  | "STATUS_AIRCRAFT"
  | "CLICK"
  | "TRANSMISSION";

export type TrunkedModulation = "QPSK" | "FSK4";

export type TrunkedSystemType =
  | "SMARTNET"
  | "P25"
  | "CONVENTIONAL"
  | "CONVENTIONAL_P25"
  | "UNKNOWN";

export type TrunkedSmartnetBandplan =
  | "STANDARD_800"
  | "REBAND_800"
  | "SPLINTER_800"
  | "CUSTOM_400";

export type TrunkedTalkgroupDisplayFormat = "ID" | "ID_TAG" | "TAG_ID";

export type Dump1090TransmissionType =
  | "ES_IDENT_AND_CATEGORY"
  | "ES_SURFACE_POS"
  | "ES_AIRBORNE_POS"
  | "ES_AIRBORNE_VEL"
  | "SURVEILLANCE_ALT"
  | "SURVEILLANCE_ID"
  | "AIR_TO_AIR"
  | "ALL_CALL_REPLY";

export type MutationType = "CREATED" | "UPDATED" | "DELETED";

export type TrunkedSourceOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "center_ASC"
  | "center_DESC"
  | "rate_ASC"
  | "rate_DESC"
  | "squelch_ASC"
  | "squelch_DESC"
  | "error_ASC"
  | "error_DESC"
  | "gain_ASC"
  | "gain_DESC"
  | "digitalRecorders_ASC"
  | "digitalRecorders_DESC"
  | "digitalLevels_ASC"
  | "digitalLevels_DESC"
  | "analogRecorders_ASC"
  | "analogRecorders_DESC"
  | "analogLevels_ASC"
  | "analogLevels_DESC"
  | "device_ASC"
  | "device_DESC"
  | "modulation_ASC"
  | "modulation_DESC";

export type TrunkedDefaultMode = "ANALOG" | "DIGITAL";

export type TrunkedFrequencyFormat = "EXP" | "MHZ" | "HZ";

export interface TrunkedTalkgroupCreateWithoutSystemInput {
  id?: ID_Input;
  decimal: Int;
  mode?: String;
  alphaTag?: String;
  description?: String;
  tag?: String;
  group?: String;
  priority?: Int;
  calls?: TrunkedCallCreateManyWithoutTalkgroupInput;
  hash: String;
}

export type Dump1090AircraftWhereUniqueInput = AtLeastOne<{
  id: ID_Input;
  IcaoID?: String;
}>;

export interface Dump1090AircraftUpdateDataInput {
  IcaoID?: String;
}

export interface TrunkedTalkgroupUpdateManyDataInput {
  decimal?: Int;
  mode?: String;
  alphaTag?: String;
  description?: String;
  tag?: String;
  group?: String;
  priority?: Int;
  hash?: String;
}

export interface Dump1090AircraftUpsertNestedInput {
  update: Dump1090AircraftUpdateDataInput;
  create: Dump1090AircraftCreateInput;
}

export interface TrunkedSystemUpdatealphatagsInput {
  set?: String[] | String;
}

export interface Dump1090MessageUpdateManyMutationInput {
  messageType?: Dump1090MessageType;
  transmissionType?: Dump1090TransmissionType;
  generated?: DateTimeInput;
  logged?: DateTimeInput;
  flightId?: String;
  squawk?: String;
  alert?: Boolean;
  emergency?: Boolean;
  isOnGround?: Boolean;
  latitude?: Float;
  longitude?: Float;
  verticalRate?: Int;
  track?: Int;
  groupSpeed?: Int;
  callsign?: String;
  altitude?: Int;
}

export type TrunkedCallWhereUniqueInput = AtLeastOne<{
  id: ID_Input;
  callHash?: String;
}>;

export interface TrunkedCallCreateInput {
  id?: ID_Input;
  frequency: Int;
  startTime: DateTimeInput;
  endTime: DateTimeInput;
  emergency?: Boolean;
  talkgroup?: TrunkedTalkgroupCreateOneWithoutCallsInput;
  system?: TrunkedSystemCreateOneWithoutCallsInput;
  sources?: TrunkedCallSourceCreateManyInput;
  duration?: Float;
  source?: Int;
  audioPath?: String;
  frequencyList?: TrunkedCallFrequencyTimeCreateManyInput;
  callHash?: String;
  wavPath?: String;
}

export interface TrunkedSourceSubscriptionWhereInput {
  mutation_in?: MutationType[] | MutationType;
  updatedFields_contains?: String;
  updatedFields_contains_every?: String[] | String;
  updatedFields_contains_some?: String[] | String;
  node?: TrunkedSourceWhereInput;
  AND?:
    | TrunkedSourceSubscriptionWhereInput[]
    | TrunkedSourceSubscriptionWhereInput;
  OR?:
    | TrunkedSourceSubscriptionWhereInput[]
    | TrunkedSourceSubscriptionWhereInput;
  NOT?:
    | TrunkedSourceSubscriptionWhereInput[]
    | TrunkedSourceSubscriptionWhereInput;
}

export interface TrunkedTalkgroupCreateOneWithoutCallsInput {
  create?: TrunkedTalkgroupCreateWithoutCallsInput;
  connect?: TrunkedTalkgroupWhereUniqueInput;
}

export interface Dump1090MessageWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  messageType?: Dump1090MessageType;
  messageType_not?: Dump1090MessageType;
  messageType_in?: Dump1090MessageType[] | Dump1090MessageType;
  messageType_not_in?: Dump1090MessageType[] | Dump1090MessageType;
  transmissionType?: Dump1090TransmissionType;
  transmissionType_not?: Dump1090TransmissionType;
  transmissionType_in?: Dump1090TransmissionType[] | Dump1090TransmissionType;
  transmissionType_not_in?:
    | Dump1090TransmissionType[]
    | Dump1090TransmissionType;
  aircraft?: Dump1090AircraftWhereInput;
  generated?: DateTimeInput;
  generated_not?: DateTimeInput;
  generated_in?: DateTimeInput[] | DateTimeInput;
  generated_not_in?: DateTimeInput[] | DateTimeInput;
  generated_lt?: DateTimeInput;
  generated_lte?: DateTimeInput;
  generated_gt?: DateTimeInput;
  generated_gte?: DateTimeInput;
  logged?: DateTimeInput;
  logged_not?: DateTimeInput;
  logged_in?: DateTimeInput[] | DateTimeInput;
  logged_not_in?: DateTimeInput[] | DateTimeInput;
  logged_lt?: DateTimeInput;
  logged_lte?: DateTimeInput;
  logged_gt?: DateTimeInput;
  logged_gte?: DateTimeInput;
  flightId?: String;
  flightId_not?: String;
  flightId_in?: String[] | String;
  flightId_not_in?: String[] | String;
  flightId_lt?: String;
  flightId_lte?: String;
  flightId_gt?: String;
  flightId_gte?: String;
  flightId_contains?: String;
  flightId_not_contains?: String;
  flightId_starts_with?: String;
  flightId_not_starts_with?: String;
  flightId_ends_with?: String;
  flightId_not_ends_with?: String;
  squawk?: String;
  squawk_not?: String;
  squawk_in?: String[] | String;
  squawk_not_in?: String[] | String;
  squawk_lt?: String;
  squawk_lte?: String;
  squawk_gt?: String;
  squawk_gte?: String;
  squawk_contains?: String;
  squawk_not_contains?: String;
  squawk_starts_with?: String;
  squawk_not_starts_with?: String;
  squawk_ends_with?: String;
  squawk_not_ends_with?: String;
  alert?: Boolean;
  alert_not?: Boolean;
  emergency?: Boolean;
  emergency_not?: Boolean;
  isOnGround?: Boolean;
  isOnGround_not?: Boolean;
  latitude?: Float;
  latitude_not?: Float;
  latitude_in?: Float[] | Float;
  latitude_not_in?: Float[] | Float;
  latitude_lt?: Float;
  latitude_lte?: Float;
  latitude_gt?: Float;
  latitude_gte?: Float;
  longitude?: Float;
  longitude_not?: Float;
  longitude_in?: Float[] | Float;
  longitude_not_in?: Float[] | Float;
  longitude_lt?: Float;
  longitude_lte?: Float;
  longitude_gt?: Float;
  longitude_gte?: Float;
  verticalRate?: Int;
  verticalRate_not?: Int;
  verticalRate_in?: Int[] | Int;
  verticalRate_not_in?: Int[] | Int;
  verticalRate_lt?: Int;
  verticalRate_lte?: Int;
  verticalRate_gt?: Int;
  verticalRate_gte?: Int;
  track?: Int;
  track_not?: Int;
  track_in?: Int[] | Int;
  track_not_in?: Int[] | Int;
  track_lt?: Int;
  track_lte?: Int;
  track_gt?: Int;
  track_gte?: Int;
  groupSpeed?: Int;
  groupSpeed_not?: Int;
  groupSpeed_in?: Int[] | Int;
  groupSpeed_not_in?: Int[] | Int;
  groupSpeed_lt?: Int;
  groupSpeed_lte?: Int;
  groupSpeed_gt?: Int;
  groupSpeed_gte?: Int;
  callsign?: String;
  callsign_not?: String;
  callsign_in?: String[] | String;
  callsign_not_in?: String[] | String;
  callsign_lt?: String;
  callsign_lte?: String;
  callsign_gt?: String;
  callsign_gte?: String;
  callsign_contains?: String;
  callsign_not_contains?: String;
  callsign_starts_with?: String;
  callsign_not_starts_with?: String;
  callsign_ends_with?: String;
  callsign_not_ends_with?: String;
  altitude?: Int;
  altitude_not?: Int;
  altitude_in?: Int[] | Int;
  altitude_not_in?: Int[] | Int;
  altitude_lt?: Int;
  altitude_lte?: Int;
  altitude_gt?: Int;
  altitude_gte?: Int;
  AND?: Dump1090MessageWhereInput[] | Dump1090MessageWhereInput;
  OR?: Dump1090MessageWhereInput[] | Dump1090MessageWhereInput;
  NOT?: Dump1090MessageWhereInput[] | Dump1090MessageWhereInput;
}

export interface TrunkedTalkgroupCreateWithoutCallsInput {
  id?: ID_Input;
  decimal: Int;
  mode?: String;
  alphaTag?: String;
  description?: String;
  tag?: String;
  group?: String;
  priority?: Int;
  system?: TrunkedSystemCreateOneWithoutTalkgroupsInput;
  hash: String;
}

export interface TrunkedSystemWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  updatedAt?: DateTimeInput;
  updatedAt_not?: DateTimeInput;
  updatedAt_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_not_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_lt?: DateTimeInput;
  updatedAt_lte?: DateTimeInput;
  updatedAt_gt?: DateTimeInput;
  updatedAt_gte?: DateTimeInput;
  createdAt?: DateTimeInput;
  createdAt_not?: DateTimeInput;
  createdAt_in?: DateTimeInput[] | DateTimeInput;
  createdAt_not_in?: DateTimeInput[] | DateTimeInput;
  createdAt_lt?: DateTimeInput;
  createdAt_lte?: DateTimeInput;
  createdAt_gt?: DateTimeInput;
  createdAt_gte?: DateTimeInput;
  type?: TrunkedSystemType;
  type_not?: TrunkedSystemType;
  type_in?: TrunkedSystemType[] | TrunkedSystemType;
  type_not_in?: TrunkedSystemType[] | TrunkedSystemType;
  talkgroups_every?: TrunkedTalkgroupWhereInput;
  talkgroups_some?: TrunkedTalkgroupWhereInput;
  talkgroups_none?: TrunkedTalkgroupWhereInput;
  recordUnknown?: Boolean;
  recordUnknown_not?: Boolean;
  shortName?: String;
  shortName_not?: String;
  shortName_in?: String[] | String;
  shortName_not_in?: String[] | String;
  shortName_lt?: String;
  shortName_lte?: String;
  shortName_gt?: String;
  shortName_gte?: String;
  shortName_contains?: String;
  shortName_not_contains?: String;
  shortName_starts_with?: String;
  shortName_not_starts_with?: String;
  shortName_ends_with?: String;
  shortName_not_ends_with?: String;
  uploadScript?: String;
  uploadScript_not?: String;
  uploadScript_in?: String[] | String;
  uploadScript_not_in?: String[] | String;
  uploadScript_lt?: String;
  uploadScript_lte?: String;
  uploadScript_gt?: String;
  uploadScript_gte?: String;
  uploadScript_contains?: String;
  uploadScript_not_contains?: String;
  uploadScript_starts_with?: String;
  uploadScript_not_starts_with?: String;
  uploadScript_ends_with?: String;
  uploadScript_not_ends_with?: String;
  audioArchive?: Boolean;
  audioArchive_not?: Boolean;
  callLog?: Boolean;
  callLog_not?: Boolean;
  bandplan?: TrunkedSmartnetBandplan;
  bandplan_not?: TrunkedSmartnetBandplan;
  bandplan_in?: TrunkedSmartnetBandplan[] | TrunkedSmartnetBandplan;
  bandplan_not_in?: TrunkedSmartnetBandplan[] | TrunkedSmartnetBandplan;
  bandplanBase?: Float;
  bandplanBase_not?: Float;
  bandplanBase_in?: Float[] | Float;
  bandplanBase_not_in?: Float[] | Float;
  bandplanBase_lt?: Float;
  bandplanBase_lte?: Float;
  bandplanBase_gt?: Float;
  bandplanBase_gte?: Float;
  bandplanHigh?: Float;
  bandplanHigh_not?: Float;
  bandplanHigh_in?: Float[] | Float;
  bandplanHigh_not_in?: Float[] | Float;
  bandplanHigh_lt?: Float;
  bandplanHigh_lte?: Float;
  bandplanHigh_gt?: Float;
  bandplanHigh_gte?: Float;
  bandplanSpacing?: Float;
  bandplanSpacing_not?: Float;
  bandplanSpacing_in?: Float[] | Float;
  bandplanSpacing_not_in?: Float[] | Float;
  bandplanSpacing_lt?: Float;
  bandplanSpacing_lte?: Float;
  bandplanSpacing_gt?: Float;
  bandplanSpacing_gte?: Float;
  bandplanOffset?: Float;
  bandplanOffset_not?: Float;
  bandplanOffset_in?: Float[] | Float;
  bandplanOffset_not_in?: Float[] | Float;
  bandplanOffset_lt?: Float;
  bandplanOffset_lte?: Float;
  bandplanOffset_gt?: Float;
  bandplanOffset_gte?: Float;
  talkgroupDisplayFormat?: TrunkedTalkgroupDisplayFormat;
  talkgroupDisplayFormat_not?: TrunkedTalkgroupDisplayFormat;
  talkgroupDisplayFormat_in?:
    | TrunkedTalkgroupDisplayFormat[]
    | TrunkedTalkgroupDisplayFormat;
  talkgroupDisplayFormat_not_in?:
    | TrunkedTalkgroupDisplayFormat[]
    | TrunkedTalkgroupDisplayFormat;
  delayCreateOutput?: Boolean;
  delayCreateOutput_not?: Boolean;
  hideEncrypted?: Boolean;
  hideEncrypted_not?: Boolean;
  hideUnknownTalkgroups?: Boolean;
  hideUnknownTalkgroups_not?: Boolean;
  calls_every?: TrunkedCallWhereInput;
  calls_some?: TrunkedCallWhereInput;
  calls_none?: TrunkedCallWhereInput;
  AND?: TrunkedSystemWhereInput[] | TrunkedSystemWhereInput;
  OR?: TrunkedSystemWhereInput[] | TrunkedSystemWhereInput;
  NOT?: TrunkedSystemWhereInput[] | TrunkedSystemWhereInput;
}

export interface TrunkedSystemCreateOneWithoutTalkgroupsInput {
  create?: TrunkedSystemCreateWithoutTalkgroupsInput;
  connect?: TrunkedSystemWhereUniqueInput;
}

export interface TrunkedCallFrequencyTimeSubscriptionWhereInput {
  mutation_in?: MutationType[] | MutationType;
  updatedFields_contains?: String;
  updatedFields_contains_every?: String[] | String;
  updatedFields_contains_some?: String[] | String;
  node?: TrunkedCallFrequencyTimeWhereInput;
  AND?:
    | TrunkedCallFrequencyTimeSubscriptionWhereInput[]
    | TrunkedCallFrequencyTimeSubscriptionWhereInput;
  OR?:
    | TrunkedCallFrequencyTimeSubscriptionWhereInput[]
    | TrunkedCallFrequencyTimeSubscriptionWhereInput;
  NOT?:
    | TrunkedCallFrequencyTimeSubscriptionWhereInput[]
    | TrunkedCallFrequencyTimeSubscriptionWhereInput;
}

export interface TrunkedSystemCreateWithoutTalkgroupsInput {
  id?: ID_Input;
  controlChannels?: TrunkedSystemCreatecontrolChannelsInput;
  channels?: TrunkedSystemCreatechannelsInput;
  type: TrunkedSystemType;
  alphatags?: TrunkedSystemCreatealphatagsInput;
  recordUnknown?: Boolean;
  shortName?: String;
  uploadScript?: String;
  audioArchive?: Boolean;
  callLog?: Boolean;
  bandplan?: TrunkedSmartnetBandplan;
  bandplanBase?: Float;
  bandplanHigh?: Float;
  bandplanSpacing?: Float;
  bandplanOffset?: Float;
  talkgroupDisplayFormat?: TrunkedTalkgroupDisplayFormat;
  delayCreateOutput?: Boolean;
  hideEncrypted?: Boolean;
  hideUnknownTalkgroups?: Boolean;
  calls?: TrunkedCallCreateManyWithoutSystemInput;
}

export interface TrunkedCallSourceWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  updatedAt?: DateTimeInput;
  updatedAt_not?: DateTimeInput;
  updatedAt_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_not_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_lt?: DateTimeInput;
  updatedAt_lte?: DateTimeInput;
  updatedAt_gt?: DateTimeInput;
  updatedAt_gte?: DateTimeInput;
  createdAt?: DateTimeInput;
  createdAt_not?: DateTimeInput;
  createdAt_in?: DateTimeInput[] | DateTimeInput;
  createdAt_not_in?: DateTimeInput[] | DateTimeInput;
  createdAt_lt?: DateTimeInput;
  createdAt_lte?: DateTimeInput;
  createdAt_gt?: DateTimeInput;
  createdAt_gte?: DateTimeInput;
  sourceId?: Int;
  sourceId_not?: Int;
  sourceId_in?: Int[] | Int;
  sourceId_not_in?: Int[] | Int;
  sourceId_lt?: Int;
  sourceId_lte?: Int;
  sourceId_gt?: Int;
  sourceId_gte?: Int;
  time?: DateTimeInput;
  time_not?: DateTimeInput;
  time_in?: DateTimeInput[] | DateTimeInput;
  time_not_in?: DateTimeInput[] | DateTimeInput;
  time_lt?: DateTimeInput;
  time_lte?: DateTimeInput;
  time_gt?: DateTimeInput;
  time_gte?: DateTimeInput;
  position?: Float;
  position_not?: Float;
  position_in?: Float[] | Float;
  position_not_in?: Float[] | Float;
  position_lt?: Float;
  position_lte?: Float;
  position_gt?: Float;
  position_gte?: Float;
  AND?: TrunkedCallSourceWhereInput[] | TrunkedCallSourceWhereInput;
  OR?: TrunkedCallSourceWhereInput[] | TrunkedCallSourceWhereInput;
  NOT?: TrunkedCallSourceWhereInput[] | TrunkedCallSourceWhereInput;
}

export interface TrunkedSystemCreatecontrolChannelsInput {
  set?: Float[] | Float;
}

export interface TrunkedCallSubscriptionWhereInput {
  mutation_in?: MutationType[] | MutationType;
  updatedFields_contains?: String;
  updatedFields_contains_every?: String[] | String;
  updatedFields_contains_some?: String[] | String;
  node?: TrunkedCallWhereInput;
  AND?: TrunkedCallSubscriptionWhereInput[] | TrunkedCallSubscriptionWhereInput;
  OR?: TrunkedCallSubscriptionWhereInput[] | TrunkedCallSubscriptionWhereInput;
  NOT?: TrunkedCallSubscriptionWhereInput[] | TrunkedCallSubscriptionWhereInput;
}

export interface TrunkedSystemCreatechannelsInput {
  set?: Float[] | Float;
}

export interface Dump1090MessageSubscriptionWhereInput {
  mutation_in?: MutationType[] | MutationType;
  updatedFields_contains?: String;
  updatedFields_contains_every?: String[] | String;
  updatedFields_contains_some?: String[] | String;
  node?: Dump1090MessageWhereInput;
  AND?:
    | Dump1090MessageSubscriptionWhereInput[]
    | Dump1090MessageSubscriptionWhereInput;
  OR?:
    | Dump1090MessageSubscriptionWhereInput[]
    | Dump1090MessageSubscriptionWhereInput;
  NOT?:
    | Dump1090MessageSubscriptionWhereInput[]
    | Dump1090MessageSubscriptionWhereInput;
}

export interface TrunkedSystemCreatealphatagsInput {
  set?: String[] | String;
}

export interface TrunkedTalkgroupUpdateManyMutationInput {
  decimal?: Int;
  mode?: String;
  alphaTag?: String;
  description?: String;
  tag?: String;
  group?: String;
  priority?: Int;
  hash?: String;
}

export interface TrunkedCallCreateManyWithoutSystemInput {
  create?:
    | TrunkedCallCreateWithoutSystemInput[]
    | TrunkedCallCreateWithoutSystemInput;
  connect?: TrunkedCallWhereUniqueInput[] | TrunkedCallWhereUniqueInput;
}

export interface TrunkedTalkgroupCreateInput {
  id?: ID_Input;
  decimal: Int;
  mode?: String;
  alphaTag?: String;
  description?: String;
  tag?: String;
  group?: String;
  priority?: Int;
  system?: TrunkedSystemCreateOneWithoutTalkgroupsInput;
  calls?: TrunkedCallCreateManyWithoutTalkgroupInput;
  hash: String;
}

export interface TrunkedCallCreateWithoutSystemInput {
  id?: ID_Input;
  frequency: Int;
  startTime: DateTimeInput;
  endTime: DateTimeInput;
  emergency?: Boolean;
  talkgroup?: TrunkedTalkgroupCreateOneWithoutCallsInput;
  sources?: TrunkedCallSourceCreateManyInput;
  duration?: Float;
  source?: Int;
  audioPath?: String;
  frequencyList?: TrunkedCallFrequencyTimeCreateManyInput;
  callHash?: String;
  wavPath?: String;
}

export interface TrunkedSystemUpdateInput {
  controlChannels?: TrunkedSystemUpdatecontrolChannelsInput;
  channels?: TrunkedSystemUpdatechannelsInput;
  type?: TrunkedSystemType;
  alphatags?: TrunkedSystemUpdatealphatagsInput;
  talkgroups?: TrunkedTalkgroupUpdateManyWithoutSystemInput;
  recordUnknown?: Boolean;
  shortName?: String;
  uploadScript?: String;
  audioArchive?: Boolean;
  callLog?: Boolean;
  bandplan?: TrunkedSmartnetBandplan;
  bandplanBase?: Float;
  bandplanHigh?: Float;
  bandplanSpacing?: Float;
  bandplanOffset?: Float;
  talkgroupDisplayFormat?: TrunkedTalkgroupDisplayFormat;
  delayCreateOutput?: Boolean;
  hideEncrypted?: Boolean;
  hideUnknownTalkgroups?: Boolean;
  calls?: TrunkedCallUpdateManyWithoutSystemInput;
}

export interface TrunkedCallSourceCreateManyInput {
  create?: TrunkedCallSourceCreateInput[] | TrunkedCallSourceCreateInput;
  connect?:
    | TrunkedCallSourceWhereUniqueInput[]
    | TrunkedCallSourceWhereUniqueInput;
}

export interface TrunkedSourceUpdateManyMutationInput {
  center?: Float;
  rate?: Float;
  squelch?: Float;
  error?: Float;
  gain?: Float;
  digitalRecorders?: Float;
  digitalLevels?: Float;
  analogRecorders?: Float;
  analogLevels?: Float;
  device?: String;
  modulation?: TrunkedModulation;
}

export interface TrunkedCallSourceCreateInput {
  id?: ID_Input;
  sourceId?: Int;
  time?: DateTimeInput;
  position?: Float;
}

export interface TrunkedConfigUpdateManyMutationInput {
  name?: String;
  defaultMode?: TrunkedDefaultMode;
  captureDir?: String;
  callTimeout?: Int;
  logFile?: Boolean;
  frequencyFormat?: TrunkedFrequencyFormat;
  controlWarnRate?: Int;
  statusAsString?: Boolean;
}

export interface TrunkedCallFrequencyTimeCreateManyInput {
  create?:
    | TrunkedCallFrequencyTimeCreateInput[]
    | TrunkedCallFrequencyTimeCreateInput;
  connect?:
    | TrunkedCallFrequencyTimeWhereUniqueInput[]
    | TrunkedCallFrequencyTimeWhereUniqueInput;
}

export interface TrunkedSystemUpdateManyDataInput {
  controlChannels?: TrunkedSystemUpdatecontrolChannelsInput;
  channels?: TrunkedSystemUpdatechannelsInput;
  type?: TrunkedSystemType;
  alphatags?: TrunkedSystemUpdatealphatagsInput;
  recordUnknown?: Boolean;
  shortName?: String;
  uploadScript?: String;
  audioArchive?: Boolean;
  callLog?: Boolean;
  bandplan?: TrunkedSmartnetBandplan;
  bandplanBase?: Float;
  bandplanHigh?: Float;
  bandplanSpacing?: Float;
  bandplanOffset?: Float;
  talkgroupDisplayFormat?: TrunkedTalkgroupDisplayFormat;
  delayCreateOutput?: Boolean;
  hideEncrypted?: Boolean;
  hideUnknownTalkgroups?: Boolean;
}

export interface TrunkedCallFrequencyTimeCreateInput {
  id?: ID_Input;
  frequency: Int;
  time: Int;
  position: Float;
  length: Int;
  errors: Int;
  spikes: Int;
}

export interface TrunkedSystemScalarWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  updatedAt?: DateTimeInput;
  updatedAt_not?: DateTimeInput;
  updatedAt_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_not_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_lt?: DateTimeInput;
  updatedAt_lte?: DateTimeInput;
  updatedAt_gt?: DateTimeInput;
  updatedAt_gte?: DateTimeInput;
  createdAt?: DateTimeInput;
  createdAt_not?: DateTimeInput;
  createdAt_in?: DateTimeInput[] | DateTimeInput;
  createdAt_not_in?: DateTimeInput[] | DateTimeInput;
  createdAt_lt?: DateTimeInput;
  createdAt_lte?: DateTimeInput;
  createdAt_gt?: DateTimeInput;
  createdAt_gte?: DateTimeInput;
  type?: TrunkedSystemType;
  type_not?: TrunkedSystemType;
  type_in?: TrunkedSystemType[] | TrunkedSystemType;
  type_not_in?: TrunkedSystemType[] | TrunkedSystemType;
  recordUnknown?: Boolean;
  recordUnknown_not?: Boolean;
  shortName?: String;
  shortName_not?: String;
  shortName_in?: String[] | String;
  shortName_not_in?: String[] | String;
  shortName_lt?: String;
  shortName_lte?: String;
  shortName_gt?: String;
  shortName_gte?: String;
  shortName_contains?: String;
  shortName_not_contains?: String;
  shortName_starts_with?: String;
  shortName_not_starts_with?: String;
  shortName_ends_with?: String;
  shortName_not_ends_with?: String;
  uploadScript?: String;
  uploadScript_not?: String;
  uploadScript_in?: String[] | String;
  uploadScript_not_in?: String[] | String;
  uploadScript_lt?: String;
  uploadScript_lte?: String;
  uploadScript_gt?: String;
  uploadScript_gte?: String;
  uploadScript_contains?: String;
  uploadScript_not_contains?: String;
  uploadScript_starts_with?: String;
  uploadScript_not_starts_with?: String;
  uploadScript_ends_with?: String;
  uploadScript_not_ends_with?: String;
  audioArchive?: Boolean;
  audioArchive_not?: Boolean;
  callLog?: Boolean;
  callLog_not?: Boolean;
  bandplan?: TrunkedSmartnetBandplan;
  bandplan_not?: TrunkedSmartnetBandplan;
  bandplan_in?: TrunkedSmartnetBandplan[] | TrunkedSmartnetBandplan;
  bandplan_not_in?: TrunkedSmartnetBandplan[] | TrunkedSmartnetBandplan;
  bandplanBase?: Float;
  bandplanBase_not?: Float;
  bandplanBase_in?: Float[] | Float;
  bandplanBase_not_in?: Float[] | Float;
  bandplanBase_lt?: Float;
  bandplanBase_lte?: Float;
  bandplanBase_gt?: Float;
  bandplanBase_gte?: Float;
  bandplanHigh?: Float;
  bandplanHigh_not?: Float;
  bandplanHigh_in?: Float[] | Float;
  bandplanHigh_not_in?: Float[] | Float;
  bandplanHigh_lt?: Float;
  bandplanHigh_lte?: Float;
  bandplanHigh_gt?: Float;
  bandplanHigh_gte?: Float;
  bandplanSpacing?: Float;
  bandplanSpacing_not?: Float;
  bandplanSpacing_in?: Float[] | Float;
  bandplanSpacing_not_in?: Float[] | Float;
  bandplanSpacing_lt?: Float;
  bandplanSpacing_lte?: Float;
  bandplanSpacing_gt?: Float;
  bandplanSpacing_gte?: Float;
  bandplanOffset?: Float;
  bandplanOffset_not?: Float;
  bandplanOffset_in?: Float[] | Float;
  bandplanOffset_not_in?: Float[] | Float;
  bandplanOffset_lt?: Float;
  bandplanOffset_lte?: Float;
  bandplanOffset_gt?: Float;
  bandplanOffset_gte?: Float;
  talkgroupDisplayFormat?: TrunkedTalkgroupDisplayFormat;
  talkgroupDisplayFormat_not?: TrunkedTalkgroupDisplayFormat;
  talkgroupDisplayFormat_in?:
    | TrunkedTalkgroupDisplayFormat[]
    | TrunkedTalkgroupDisplayFormat;
  talkgroupDisplayFormat_not_in?:
    | TrunkedTalkgroupDisplayFormat[]
    | TrunkedTalkgroupDisplayFormat;
  delayCreateOutput?: Boolean;
  delayCreateOutput_not?: Boolean;
  hideEncrypted?: Boolean;
  hideEncrypted_not?: Boolean;
  hideUnknownTalkgroups?: Boolean;
  hideUnknownTalkgroups_not?: Boolean;
  AND?: TrunkedSystemScalarWhereInput[] | TrunkedSystemScalarWhereInput;
  OR?: TrunkedSystemScalarWhereInput[] | TrunkedSystemScalarWhereInput;
  NOT?: TrunkedSystemScalarWhereInput[] | TrunkedSystemScalarWhereInput;
}

export interface TrunkedSystemCreateOneWithoutCallsInput {
  create?: TrunkedSystemCreateWithoutCallsInput;
  connect?: TrunkedSystemWhereUniqueInput;
}

export interface TrunkedSystemUpsertWithWhereUniqueNestedInput {
  where: TrunkedSystemWhereUniqueInput;
  update: TrunkedSystemUpdateDataInput;
  create: TrunkedSystemCreateInput;
}

export interface TrunkedSystemCreateWithoutCallsInput {
  id?: ID_Input;
  controlChannels?: TrunkedSystemCreatecontrolChannelsInput;
  channels?: TrunkedSystemCreatechannelsInput;
  type: TrunkedSystemType;
  alphatags?: TrunkedSystemCreatealphatagsInput;
  talkgroups?: TrunkedTalkgroupCreateManyWithoutSystemInput;
  recordUnknown?: Boolean;
  shortName?: String;
  uploadScript?: String;
  audioArchive?: Boolean;
  callLog?: Boolean;
  bandplan?: TrunkedSmartnetBandplan;
  bandplanBase?: Float;
  bandplanHigh?: Float;
  bandplanSpacing?: Float;
  bandplanOffset?: Float;
  talkgroupDisplayFormat?: TrunkedTalkgroupDisplayFormat;
  delayCreateOutput?: Boolean;
  hideEncrypted?: Boolean;
  hideUnknownTalkgroups?: Boolean;
}

export interface TrunkedSystemUpdateDataInput {
  controlChannels?: TrunkedSystemUpdatecontrolChannelsInput;
  channels?: TrunkedSystemUpdatechannelsInput;
  type?: TrunkedSystemType;
  alphatags?: TrunkedSystemUpdatealphatagsInput;
  talkgroups?: TrunkedTalkgroupUpdateManyWithoutSystemInput;
  recordUnknown?: Boolean;
  shortName?: String;
  uploadScript?: String;
  audioArchive?: Boolean;
  callLog?: Boolean;
  bandplan?: TrunkedSmartnetBandplan;
  bandplanBase?: Float;
  bandplanHigh?: Float;
  bandplanSpacing?: Float;
  bandplanOffset?: Float;
  talkgroupDisplayFormat?: TrunkedTalkgroupDisplayFormat;
  delayCreateOutput?: Boolean;
  hideEncrypted?: Boolean;
  hideUnknownTalkgroups?: Boolean;
  calls?: TrunkedCallUpdateManyWithoutSystemInput;
}

export interface TrunkedTalkgroupCreateManyWithoutSystemInput {
  create?:
    | TrunkedTalkgroupCreateWithoutSystemInput[]
    | TrunkedTalkgroupCreateWithoutSystemInput;
  connect?:
    | TrunkedTalkgroupWhereUniqueInput[]
    | TrunkedTalkgroupWhereUniqueInput;
}

export interface TrunkedSystemUpdateManyInput {
  create?: TrunkedSystemCreateInput[] | TrunkedSystemCreateInput;
  update?:
    | TrunkedSystemUpdateWithWhereUniqueNestedInput[]
    | TrunkedSystemUpdateWithWhereUniqueNestedInput;
  upsert?:
    | TrunkedSystemUpsertWithWhereUniqueNestedInput[]
    | TrunkedSystemUpsertWithWhereUniqueNestedInput;
  delete?: TrunkedSystemWhereUniqueInput[] | TrunkedSystemWhereUniqueInput;
  connect?: TrunkedSystemWhereUniqueInput[] | TrunkedSystemWhereUniqueInput;
  set?: TrunkedSystemWhereUniqueInput[] | TrunkedSystemWhereUniqueInput;
  disconnect?: TrunkedSystemWhereUniqueInput[] | TrunkedSystemWhereUniqueInput;
  deleteMany?: TrunkedSystemScalarWhereInput[] | TrunkedSystemScalarWhereInput;
  updateMany?:
    | TrunkedSystemUpdateManyWithWhereNestedInput[]
    | TrunkedSystemUpdateManyWithWhereNestedInput;
}

export interface TrunkedCallUpdateManyMutationInput {
  frequency?: Int;
  startTime?: DateTimeInput;
  endTime?: DateTimeInput;
  emergency?: Boolean;
  duration?: Float;
  source?: Int;
  audioPath?: String;
  callHash?: String;
  wavPath?: String;
}

export interface TrunkedSourceUpdateManyWithWhereNestedInput {
  where: TrunkedSourceScalarWhereInput;
  data: TrunkedSourceUpdateManyDataInput;
}

export interface TrunkedCallCreateManyWithoutTalkgroupInput {
  create?:
    | TrunkedCallCreateWithoutTalkgroupInput[]
    | TrunkedCallCreateWithoutTalkgroupInput;
  connect?: TrunkedCallWhereUniqueInput[] | TrunkedCallWhereUniqueInput;
}

export interface TrunkedConfigWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  updatedAt?: DateTimeInput;
  updatedAt_not?: DateTimeInput;
  updatedAt_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_not_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_lt?: DateTimeInput;
  updatedAt_lte?: DateTimeInput;
  updatedAt_gt?: DateTimeInput;
  updatedAt_gte?: DateTimeInput;
  createdAt?: DateTimeInput;
  createdAt_not?: DateTimeInput;
  createdAt_in?: DateTimeInput[] | DateTimeInput;
  createdAt_not_in?: DateTimeInput[] | DateTimeInput;
  createdAt_lt?: DateTimeInput;
  createdAt_lte?: DateTimeInput;
  createdAt_gt?: DateTimeInput;
  createdAt_gte?: DateTimeInput;
  name?: String;
  name_not?: String;
  name_in?: String[] | String;
  name_not_in?: String[] | String;
  name_lt?: String;
  name_lte?: String;
  name_gt?: String;
  name_gte?: String;
  name_contains?: String;
  name_not_contains?: String;
  name_starts_with?: String;
  name_not_starts_with?: String;
  name_ends_with?: String;
  name_not_ends_with?: String;
  sources_every?: TrunkedSourceWhereInput;
  sources_some?: TrunkedSourceWhereInput;
  sources_none?: TrunkedSourceWhereInput;
  systems_every?: TrunkedSystemWhereInput;
  systems_some?: TrunkedSystemWhereInput;
  systems_none?: TrunkedSystemWhereInput;
  defaultMode?: TrunkedDefaultMode;
  defaultMode_not?: TrunkedDefaultMode;
  defaultMode_in?: TrunkedDefaultMode[] | TrunkedDefaultMode;
  defaultMode_not_in?: TrunkedDefaultMode[] | TrunkedDefaultMode;
  captureDir?: String;
  captureDir_not?: String;
  captureDir_in?: String[] | String;
  captureDir_not_in?: String[] | String;
  captureDir_lt?: String;
  captureDir_lte?: String;
  captureDir_gt?: String;
  captureDir_gte?: String;
  captureDir_contains?: String;
  captureDir_not_contains?: String;
  captureDir_starts_with?: String;
  captureDir_not_starts_with?: String;
  captureDir_ends_with?: String;
  captureDir_not_ends_with?: String;
  callTimeout?: Int;
  callTimeout_not?: Int;
  callTimeout_in?: Int[] | Int;
  callTimeout_not_in?: Int[] | Int;
  callTimeout_lt?: Int;
  callTimeout_lte?: Int;
  callTimeout_gt?: Int;
  callTimeout_gte?: Int;
  logFile?: Boolean;
  logFile_not?: Boolean;
  frequencyFormat?: TrunkedFrequencyFormat;
  frequencyFormat_not?: TrunkedFrequencyFormat;
  frequencyFormat_in?: TrunkedFrequencyFormat[] | TrunkedFrequencyFormat;
  frequencyFormat_not_in?: TrunkedFrequencyFormat[] | TrunkedFrequencyFormat;
  controlWarnRate?: Int;
  controlWarnRate_not?: Int;
  controlWarnRate_in?: Int[] | Int;
  controlWarnRate_not_in?: Int[] | Int;
  controlWarnRate_lt?: Int;
  controlWarnRate_lte?: Int;
  controlWarnRate_gt?: Int;
  controlWarnRate_gte?: Int;
  statusAsString?: Boolean;
  statusAsString_not?: Boolean;
  AND?: TrunkedConfigWhereInput[] | TrunkedConfigWhereInput;
  OR?: TrunkedConfigWhereInput[] | TrunkedConfigWhereInput;
  NOT?: TrunkedConfigWhereInput[] | TrunkedConfigWhereInput;
}

export interface TrunkedCallCreateWithoutTalkgroupInput {
  id?: ID_Input;
  frequency: Int;
  startTime: DateTimeInput;
  endTime: DateTimeInput;
  emergency?: Boolean;
  system?: TrunkedSystemCreateOneWithoutCallsInput;
  sources?: TrunkedCallSourceCreateManyInput;
  duration?: Float;
  source?: Int;
  audioPath?: String;
  frequencyList?: TrunkedCallFrequencyTimeCreateManyInput;
  callHash?: String;
  wavPath?: String;
}

export interface TrunkedSourceUpsertWithWhereUniqueNestedInput {
  where: TrunkedSourceWhereUniqueInput;
  update: TrunkedSourceUpdateDataInput;
  create: TrunkedSourceCreateInput;
}

export interface TrunkedCallUpdateInput {
  frequency?: Int;
  startTime?: DateTimeInput;
  endTime?: DateTimeInput;
  emergency?: Boolean;
  talkgroup?: TrunkedTalkgroupUpdateOneWithoutCallsInput;
  system?: TrunkedSystemUpdateOneWithoutCallsInput;
  sources?: TrunkedCallSourceUpdateManyInput;
  duration?: Float;
  source?: Int;
  audioPath?: String;
  frequencyList?: TrunkedCallFrequencyTimeUpdateManyInput;
  callHash?: String;
  wavPath?: String;
}

export interface TrunkedSourceUpdateWithWhereUniqueNestedInput {
  where: TrunkedSourceWhereUniqueInput;
  data: TrunkedSourceUpdateDataInput;
}

export interface TrunkedTalkgroupUpdateOneWithoutCallsInput {
  create?: TrunkedTalkgroupCreateWithoutCallsInput;
  update?: TrunkedTalkgroupUpdateWithoutCallsDataInput;
  upsert?: TrunkedTalkgroupUpsertWithoutCallsInput;
  delete?: Boolean;
  disconnect?: Boolean;
  connect?: TrunkedTalkgroupWhereUniqueInput;
}

export interface TrunkedSourceUpdateManyInput {
  create?: TrunkedSourceCreateInput[] | TrunkedSourceCreateInput;
  update?:
    | TrunkedSourceUpdateWithWhereUniqueNestedInput[]
    | TrunkedSourceUpdateWithWhereUniqueNestedInput;
  upsert?:
    | TrunkedSourceUpsertWithWhereUniqueNestedInput[]
    | TrunkedSourceUpsertWithWhereUniqueNestedInput;
  delete?: TrunkedSourceWhereUniqueInput[] | TrunkedSourceWhereUniqueInput;
  connect?: TrunkedSourceWhereUniqueInput[] | TrunkedSourceWhereUniqueInput;
  set?: TrunkedSourceWhereUniqueInput[] | TrunkedSourceWhereUniqueInput;
  disconnect?: TrunkedSourceWhereUniqueInput[] | TrunkedSourceWhereUniqueInput;
  deleteMany?: TrunkedSourceScalarWhereInput[] | TrunkedSourceScalarWhereInput;
  updateMany?:
    | TrunkedSourceUpdateManyWithWhereNestedInput[]
    | TrunkedSourceUpdateManyWithWhereNestedInput;
}

export interface TrunkedTalkgroupUpdateWithoutCallsDataInput {
  decimal?: Int;
  mode?: String;
  alphaTag?: String;
  description?: String;
  tag?: String;
  group?: String;
  priority?: Int;
  system?: TrunkedSystemUpdateOneWithoutTalkgroupsInput;
  hash?: String;
}

export interface TrunkedSystemCreateInput {
  id?: ID_Input;
  controlChannels?: TrunkedSystemCreatecontrolChannelsInput;
  channels?: TrunkedSystemCreatechannelsInput;
  type: TrunkedSystemType;
  alphatags?: TrunkedSystemCreatealphatagsInput;
  talkgroups?: TrunkedTalkgroupCreateManyWithoutSystemInput;
  recordUnknown?: Boolean;
  shortName?: String;
  uploadScript?: String;
  audioArchive?: Boolean;
  callLog?: Boolean;
  bandplan?: TrunkedSmartnetBandplan;
  bandplanBase?: Float;
  bandplanHigh?: Float;
  bandplanSpacing?: Float;
  bandplanOffset?: Float;
  talkgroupDisplayFormat?: TrunkedTalkgroupDisplayFormat;
  delayCreateOutput?: Boolean;
  hideEncrypted?: Boolean;
  hideUnknownTalkgroups?: Boolean;
  calls?: TrunkedCallCreateManyWithoutSystemInput;
}

export interface TrunkedSystemUpdateOneWithoutTalkgroupsInput {
  create?: TrunkedSystemCreateWithoutTalkgroupsInput;
  update?: TrunkedSystemUpdateWithoutTalkgroupsDataInput;
  upsert?: TrunkedSystemUpsertWithoutTalkgroupsInput;
  delete?: Boolean;
  disconnect?: Boolean;
  connect?: TrunkedSystemWhereUniqueInput;
}

export interface TrunkedSystemCreateManyInput {
  create?: TrunkedSystemCreateInput[] | TrunkedSystemCreateInput;
  connect?: TrunkedSystemWhereUniqueInput[] | TrunkedSystemWhereUniqueInput;
}

export interface TrunkedSystemUpdateWithoutTalkgroupsDataInput {
  controlChannels?: TrunkedSystemUpdatecontrolChannelsInput;
  channels?: TrunkedSystemUpdatechannelsInput;
  type?: TrunkedSystemType;
  alphatags?: TrunkedSystemUpdatealphatagsInput;
  recordUnknown?: Boolean;
  shortName?: String;
  uploadScript?: String;
  audioArchive?: Boolean;
  callLog?: Boolean;
  bandplan?: TrunkedSmartnetBandplan;
  bandplanBase?: Float;
  bandplanHigh?: Float;
  bandplanSpacing?: Float;
  bandplanOffset?: Float;
  talkgroupDisplayFormat?: TrunkedTalkgroupDisplayFormat;
  delayCreateOutput?: Boolean;
  hideEncrypted?: Boolean;
  hideUnknownTalkgroups?: Boolean;
  calls?: TrunkedCallUpdateManyWithoutSystemInput;
}

export interface TrunkedSourceCreateManyInput {
  create?: TrunkedSourceCreateInput[] | TrunkedSourceCreateInput;
  connect?: TrunkedSourceWhereUniqueInput[] | TrunkedSourceWhereUniqueInput;
}

export interface TrunkedSystemUpdatecontrolChannelsInput {
  set?: Float[] | Float;
}

export interface TrunkedConfigCreateInput {
  id?: ID_Input;
  name: String;
  sources?: TrunkedSourceCreateManyInput;
  systems?: TrunkedSystemCreateManyInput;
  defaultMode?: TrunkedDefaultMode;
  captureDir: String;
  callTimeout?: Int;
  logFile?: Boolean;
  frequencyFormat?: TrunkedFrequencyFormat;
  controlWarnRate?: Int;
  statusAsString?: Boolean;
}

export interface TrunkedSystemUpdatechannelsInput {
  set?: Float[] | Float;
}

export interface TrunkedCallSourceUpdateInput {
  sourceId?: Int;
  time?: DateTimeInput;
  position?: Float;
}

export interface TrunkedSystemUpsertWithoutCallsInput {
  update: TrunkedSystemUpdateWithoutCallsDataInput;
  create: TrunkedSystemCreateWithoutCallsInput;
}

export interface Dump1090AircraftCreateInput {
  id?: ID_Input;
  IcaoID?: String;
}

export interface TrunkedCallUpdateManyWithoutSystemInput {
  create?:
    | TrunkedCallCreateWithoutSystemInput[]
    | TrunkedCallCreateWithoutSystemInput;
  delete?: TrunkedCallWhereUniqueInput[] | TrunkedCallWhereUniqueInput;
  connect?: TrunkedCallWhereUniqueInput[] | TrunkedCallWhereUniqueInput;
  set?: TrunkedCallWhereUniqueInput[] | TrunkedCallWhereUniqueInput;
  disconnect?: TrunkedCallWhereUniqueInput[] | TrunkedCallWhereUniqueInput;
  update?:
    | TrunkedCallUpdateWithWhereUniqueWithoutSystemInput[]
    | TrunkedCallUpdateWithWhereUniqueWithoutSystemInput;
  upsert?:
    | TrunkedCallUpsertWithWhereUniqueWithoutSystemInput[]
    | TrunkedCallUpsertWithWhereUniqueWithoutSystemInput;
  deleteMany?: TrunkedCallScalarWhereInput[] | TrunkedCallScalarWhereInput;
  updateMany?:
    | TrunkedCallUpdateManyWithWhereNestedInput[]
    | TrunkedCallUpdateManyWithWhereNestedInput;
}

export interface Dump1090AircraftUpdateManyMutationInput {
  IcaoID?: String;
}

export interface TrunkedCallUpdateWithWhereUniqueWithoutSystemInput {
  where: TrunkedCallWhereUniqueInput;
  data: TrunkedCallUpdateWithoutSystemDataInput;
}

export interface TrunkedCallFrequencyTimeUpdateInput {
  frequency?: Int;
  time?: Int;
  position?: Float;
  length?: Int;
  errors?: Int;
  spikes?: Int;
}

export interface TrunkedCallUpdateWithoutSystemDataInput {
  frequency?: Int;
  startTime?: DateTimeInput;
  endTime?: DateTimeInput;
  emergency?: Boolean;
  talkgroup?: TrunkedTalkgroupUpdateOneWithoutCallsInput;
  sources?: TrunkedCallSourceUpdateManyInput;
  duration?: Float;
  source?: Int;
  audioPath?: String;
  frequencyList?: TrunkedCallFrequencyTimeUpdateManyInput;
  callHash?: String;
  wavPath?: String;
}

export interface Dump1090AircraftCreateOneInput {
  create?: Dump1090AircraftCreateInput;
  connect?: Dump1090AircraftWhereUniqueInput;
}

export interface TrunkedCallSourceUpdateManyInput {
  create?: TrunkedCallSourceCreateInput[] | TrunkedCallSourceCreateInput;
  update?:
    | TrunkedCallSourceUpdateWithWhereUniqueNestedInput[]
    | TrunkedCallSourceUpdateWithWhereUniqueNestedInput;
  upsert?:
    | TrunkedCallSourceUpsertWithWhereUniqueNestedInput[]
    | TrunkedCallSourceUpsertWithWhereUniqueNestedInput;
  delete?:
    | TrunkedCallSourceWhereUniqueInput[]
    | TrunkedCallSourceWhereUniqueInput;
  connect?:
    | TrunkedCallSourceWhereUniqueInput[]
    | TrunkedCallSourceWhereUniqueInput;
  set?: TrunkedCallSourceWhereUniqueInput[] | TrunkedCallSourceWhereUniqueInput;
  disconnect?:
    | TrunkedCallSourceWhereUniqueInput[]
    | TrunkedCallSourceWhereUniqueInput;
  deleteMany?:
    | TrunkedCallSourceScalarWhereInput[]
    | TrunkedCallSourceScalarWhereInput;
  updateMany?:
    | TrunkedCallSourceUpdateManyWithWhereNestedInput[]
    | TrunkedCallSourceUpdateManyWithWhereNestedInput;
}

export interface Dump1090AircraftUpdateOneInput {
  create?: Dump1090AircraftCreateInput;
  update?: Dump1090AircraftUpdateDataInput;
  upsert?: Dump1090AircraftUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
  connect?: Dump1090AircraftWhereUniqueInput;
}

export interface TrunkedCallSourceUpdateWithWhereUniqueNestedInput {
  where: TrunkedCallSourceWhereUniqueInput;
  data: TrunkedCallSourceUpdateDataInput;
}

export interface TrunkedSystemSubscriptionWhereInput {
  mutation_in?: MutationType[] | MutationType;
  updatedFields_contains?: String;
  updatedFields_contains_every?: String[] | String;
  updatedFields_contains_some?: String[] | String;
  node?: TrunkedSystemWhereInput;
  AND?:
    | TrunkedSystemSubscriptionWhereInput[]
    | TrunkedSystemSubscriptionWhereInput;
  OR?:
    | TrunkedSystemSubscriptionWhereInput[]
    | TrunkedSystemSubscriptionWhereInput;
  NOT?:
    | TrunkedSystemSubscriptionWhereInput[]
    | TrunkedSystemSubscriptionWhereInput;
}

export interface TrunkedCallSourceUpdateDataInput {
  sourceId?: Int;
  time?: DateTimeInput;
  position?: Float;
}

export interface TrunkedTalkgroupWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  updatedAt?: DateTimeInput;
  updatedAt_not?: DateTimeInput;
  updatedAt_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_not_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_lt?: DateTimeInput;
  updatedAt_lte?: DateTimeInput;
  updatedAt_gt?: DateTimeInput;
  updatedAt_gte?: DateTimeInput;
  createdAt?: DateTimeInput;
  createdAt_not?: DateTimeInput;
  createdAt_in?: DateTimeInput[] | DateTimeInput;
  createdAt_not_in?: DateTimeInput[] | DateTimeInput;
  createdAt_lt?: DateTimeInput;
  createdAt_lte?: DateTimeInput;
  createdAt_gt?: DateTimeInput;
  createdAt_gte?: DateTimeInput;
  decimal?: Int;
  decimal_not?: Int;
  decimal_in?: Int[] | Int;
  decimal_not_in?: Int[] | Int;
  decimal_lt?: Int;
  decimal_lte?: Int;
  decimal_gt?: Int;
  decimal_gte?: Int;
  mode?: String;
  mode_not?: String;
  mode_in?: String[] | String;
  mode_not_in?: String[] | String;
  mode_lt?: String;
  mode_lte?: String;
  mode_gt?: String;
  mode_gte?: String;
  mode_contains?: String;
  mode_not_contains?: String;
  mode_starts_with?: String;
  mode_not_starts_with?: String;
  mode_ends_with?: String;
  mode_not_ends_with?: String;
  alphaTag?: String;
  alphaTag_not?: String;
  alphaTag_in?: String[] | String;
  alphaTag_not_in?: String[] | String;
  alphaTag_lt?: String;
  alphaTag_lte?: String;
  alphaTag_gt?: String;
  alphaTag_gte?: String;
  alphaTag_contains?: String;
  alphaTag_not_contains?: String;
  alphaTag_starts_with?: String;
  alphaTag_not_starts_with?: String;
  alphaTag_ends_with?: String;
  alphaTag_not_ends_with?: String;
  description?: String;
  description_not?: String;
  description_in?: String[] | String;
  description_not_in?: String[] | String;
  description_lt?: String;
  description_lte?: String;
  description_gt?: String;
  description_gte?: String;
  description_contains?: String;
  description_not_contains?: String;
  description_starts_with?: String;
  description_not_starts_with?: String;
  description_ends_with?: String;
  description_not_ends_with?: String;
  tag?: String;
  tag_not?: String;
  tag_in?: String[] | String;
  tag_not_in?: String[] | String;
  tag_lt?: String;
  tag_lte?: String;
  tag_gt?: String;
  tag_gte?: String;
  tag_contains?: String;
  tag_not_contains?: String;
  tag_starts_with?: String;
  tag_not_starts_with?: String;
  tag_ends_with?: String;
  tag_not_ends_with?: String;
  group?: String;
  group_not?: String;
  group_in?: String[] | String;
  group_not_in?: String[] | String;
  group_lt?: String;
  group_lte?: String;
  group_gt?: String;
  group_gte?: String;
  group_contains?: String;
  group_not_contains?: String;
  group_starts_with?: String;
  group_not_starts_with?: String;
  group_ends_with?: String;
  group_not_ends_with?: String;
  priority?: Int;
  priority_not?: Int;
  priority_in?: Int[] | Int;
  priority_not_in?: Int[] | Int;
  priority_lt?: Int;
  priority_lte?: Int;
  priority_gt?: Int;
  priority_gte?: Int;
  system?: TrunkedSystemWhereInput;
  calls_every?: TrunkedCallWhereInput;
  calls_some?: TrunkedCallWhereInput;
  calls_none?: TrunkedCallWhereInput;
  hash?: String;
  hash_not?: String;
  hash_in?: String[] | String;
  hash_not_in?: String[] | String;
  hash_lt?: String;
  hash_lte?: String;
  hash_gt?: String;
  hash_gte?: String;
  hash_contains?: String;
  hash_not_contains?: String;
  hash_starts_with?: String;
  hash_not_starts_with?: String;
  hash_ends_with?: String;
  hash_not_ends_with?: String;
  AND?: TrunkedTalkgroupWhereInput[] | TrunkedTalkgroupWhereInput;
  OR?: TrunkedTalkgroupWhereInput[] | TrunkedTalkgroupWhereInput;
  NOT?: TrunkedTalkgroupWhereInput[] | TrunkedTalkgroupWhereInput;
}

export interface TrunkedCallSourceUpsertWithWhereUniqueNestedInput {
  where: TrunkedCallSourceWhereUniqueInput;
  update: TrunkedCallSourceUpdateDataInput;
  create: TrunkedCallSourceCreateInput;
}

export interface TrunkedCallWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  updatedAt?: DateTimeInput;
  updatedAt_not?: DateTimeInput;
  updatedAt_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_not_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_lt?: DateTimeInput;
  updatedAt_lte?: DateTimeInput;
  updatedAt_gt?: DateTimeInput;
  updatedAt_gte?: DateTimeInput;
  createdAt?: DateTimeInput;
  createdAt_not?: DateTimeInput;
  createdAt_in?: DateTimeInput[] | DateTimeInput;
  createdAt_not_in?: DateTimeInput[] | DateTimeInput;
  createdAt_lt?: DateTimeInput;
  createdAt_lte?: DateTimeInput;
  createdAt_gt?: DateTimeInput;
  createdAt_gte?: DateTimeInput;
  frequency?: Int;
  frequency_not?: Int;
  frequency_in?: Int[] | Int;
  frequency_not_in?: Int[] | Int;
  frequency_lt?: Int;
  frequency_lte?: Int;
  frequency_gt?: Int;
  frequency_gte?: Int;
  startTime?: DateTimeInput;
  startTime_not?: DateTimeInput;
  startTime_in?: DateTimeInput[] | DateTimeInput;
  startTime_not_in?: DateTimeInput[] | DateTimeInput;
  startTime_lt?: DateTimeInput;
  startTime_lte?: DateTimeInput;
  startTime_gt?: DateTimeInput;
  startTime_gte?: DateTimeInput;
  endTime?: DateTimeInput;
  endTime_not?: DateTimeInput;
  endTime_in?: DateTimeInput[] | DateTimeInput;
  endTime_not_in?: DateTimeInput[] | DateTimeInput;
  endTime_lt?: DateTimeInput;
  endTime_lte?: DateTimeInput;
  endTime_gt?: DateTimeInput;
  endTime_gte?: DateTimeInput;
  emergency?: Boolean;
  emergency_not?: Boolean;
  talkgroup?: TrunkedTalkgroupWhereInput;
  system?: TrunkedSystemWhereInput;
  sources_every?: TrunkedCallSourceWhereInput;
  sources_some?: TrunkedCallSourceWhereInput;
  sources_none?: TrunkedCallSourceWhereInput;
  duration?: Float;
  duration_not?: Float;
  duration_in?: Float[] | Float;
  duration_not_in?: Float[] | Float;
  duration_lt?: Float;
  duration_lte?: Float;
  duration_gt?: Float;
  duration_gte?: Float;
  source?: Int;
  source_not?: Int;
  source_in?: Int[] | Int;
  source_not_in?: Int[] | Int;
  source_lt?: Int;
  source_lte?: Int;
  source_gt?: Int;
  source_gte?: Int;
  audioPath?: String;
  audioPath_not?: String;
  audioPath_in?: String[] | String;
  audioPath_not_in?: String[] | String;
  audioPath_lt?: String;
  audioPath_lte?: String;
  audioPath_gt?: String;
  audioPath_gte?: String;
  audioPath_contains?: String;
  audioPath_not_contains?: String;
  audioPath_starts_with?: String;
  audioPath_not_starts_with?: String;
  audioPath_ends_with?: String;
  audioPath_not_ends_with?: String;
  frequencyList_every?: TrunkedCallFrequencyTimeWhereInput;
  frequencyList_some?: TrunkedCallFrequencyTimeWhereInput;
  frequencyList_none?: TrunkedCallFrequencyTimeWhereInput;
  callHash?: String;
  callHash_not?: String;
  callHash_in?: String[] | String;
  callHash_not_in?: String[] | String;
  callHash_lt?: String;
  callHash_lte?: String;
  callHash_gt?: String;
  callHash_gte?: String;
  callHash_contains?: String;
  callHash_not_contains?: String;
  callHash_starts_with?: String;
  callHash_not_starts_with?: String;
  callHash_ends_with?: String;
  callHash_not_ends_with?: String;
  wavPath?: String;
  wavPath_not?: String;
  wavPath_in?: String[] | String;
  wavPath_not_in?: String[] | String;
  wavPath_lt?: String;
  wavPath_lte?: String;
  wavPath_gt?: String;
  wavPath_gte?: String;
  wavPath_contains?: String;
  wavPath_not_contains?: String;
  wavPath_starts_with?: String;
  wavPath_not_starts_with?: String;
  wavPath_ends_with?: String;
  wavPath_not_ends_with?: String;
  AND?: TrunkedCallWhereInput[] | TrunkedCallWhereInput;
  OR?: TrunkedCallWhereInput[] | TrunkedCallWhereInput;
  NOT?: TrunkedCallWhereInput[] | TrunkedCallWhereInput;
}

export interface TrunkedCallSourceScalarWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  updatedAt?: DateTimeInput;
  updatedAt_not?: DateTimeInput;
  updatedAt_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_not_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_lt?: DateTimeInput;
  updatedAt_lte?: DateTimeInput;
  updatedAt_gt?: DateTimeInput;
  updatedAt_gte?: DateTimeInput;
  createdAt?: DateTimeInput;
  createdAt_not?: DateTimeInput;
  createdAt_in?: DateTimeInput[] | DateTimeInput;
  createdAt_not_in?: DateTimeInput[] | DateTimeInput;
  createdAt_lt?: DateTimeInput;
  createdAt_lte?: DateTimeInput;
  createdAt_gt?: DateTimeInput;
  createdAt_gte?: DateTimeInput;
  sourceId?: Int;
  sourceId_not?: Int;
  sourceId_in?: Int[] | Int;
  sourceId_not_in?: Int[] | Int;
  sourceId_lt?: Int;
  sourceId_lte?: Int;
  sourceId_gt?: Int;
  sourceId_gte?: Int;
  time?: DateTimeInput;
  time_not?: DateTimeInput;
  time_in?: DateTimeInput[] | DateTimeInput;
  time_not_in?: DateTimeInput[] | DateTimeInput;
  time_lt?: DateTimeInput;
  time_lte?: DateTimeInput;
  time_gt?: DateTimeInput;
  time_gte?: DateTimeInput;
  position?: Float;
  position_not?: Float;
  position_in?: Float[] | Float;
  position_not_in?: Float[] | Float;
  position_lt?: Float;
  position_lte?: Float;
  position_gt?: Float;
  position_gte?: Float;
  AND?: TrunkedCallSourceScalarWhereInput[] | TrunkedCallSourceScalarWhereInput;
  OR?: TrunkedCallSourceScalarWhereInput[] | TrunkedCallSourceScalarWhereInput;
  NOT?: TrunkedCallSourceScalarWhereInput[] | TrunkedCallSourceScalarWhereInput;
}

export type Dump1090MessageWhereUniqueInput = AtLeastOne<{
  id: ID_Input;
}>;

export interface TrunkedCallSourceUpdateManyWithWhereNestedInput {
  where: TrunkedCallSourceScalarWhereInput;
  data: TrunkedCallSourceUpdateManyDataInput;
}

export interface TrunkedTalkgroupUpdateInput {
  decimal?: Int;
  mode?: String;
  alphaTag?: String;
  description?: String;
  tag?: String;
  group?: String;
  priority?: Int;
  system?: TrunkedSystemUpdateOneWithoutTalkgroupsInput;
  calls?: TrunkedCallUpdateManyWithoutTalkgroupInput;
  hash?: String;
}

export interface TrunkedCallSourceUpdateManyDataInput {
  sourceId?: Int;
  time?: DateTimeInput;
  position?: Float;
}

export type TrunkedCallFrequencyTimeWhereUniqueInput = AtLeastOne<{
  id: ID_Input;
}>;

export interface TrunkedCallFrequencyTimeUpdateManyInput {
  create?:
    | TrunkedCallFrequencyTimeCreateInput[]
    | TrunkedCallFrequencyTimeCreateInput;
  update?:
    | TrunkedCallFrequencyTimeUpdateWithWhereUniqueNestedInput[]
    | TrunkedCallFrequencyTimeUpdateWithWhereUniqueNestedInput;
  upsert?:
    | TrunkedCallFrequencyTimeUpsertWithWhereUniqueNestedInput[]
    | TrunkedCallFrequencyTimeUpsertWithWhereUniqueNestedInput;
  delete?:
    | TrunkedCallFrequencyTimeWhereUniqueInput[]
    | TrunkedCallFrequencyTimeWhereUniqueInput;
  connect?:
    | TrunkedCallFrequencyTimeWhereUniqueInput[]
    | TrunkedCallFrequencyTimeWhereUniqueInput;
  set?:
    | TrunkedCallFrequencyTimeWhereUniqueInput[]
    | TrunkedCallFrequencyTimeWhereUniqueInput;
  disconnect?:
    | TrunkedCallFrequencyTimeWhereUniqueInput[]
    | TrunkedCallFrequencyTimeWhereUniqueInput;
  deleteMany?:
    | TrunkedCallFrequencyTimeScalarWhereInput[]
    | TrunkedCallFrequencyTimeScalarWhereInput;
  updateMany?:
    | TrunkedCallFrequencyTimeUpdateManyWithWhereNestedInput[]
    | TrunkedCallFrequencyTimeUpdateManyWithWhereNestedInput;
}

export type TrunkedCallSourceWhereUniqueInput = AtLeastOne<{
  id: ID_Input;
}>;

export interface TrunkedCallFrequencyTimeUpdateWithWhereUniqueNestedInput {
  where: TrunkedCallFrequencyTimeWhereUniqueInput;
  data: TrunkedCallFrequencyTimeUpdateDataInput;
}

export type TrunkedConfigWhereUniqueInput = AtLeastOne<{
  id: ID_Input;
  name?: String;
}>;

export interface TrunkedCallFrequencyTimeUpdateDataInput {
  frequency?: Int;
  time?: Int;
  position?: Float;
  length?: Int;
  errors?: Int;
  spikes?: Int;
}

export interface TrunkedSystemUpdateWithWhereUniqueNestedInput {
  where: TrunkedSystemWhereUniqueInput;
  data: TrunkedSystemUpdateDataInput;
}

export interface TrunkedCallFrequencyTimeUpsertWithWhereUniqueNestedInput {
  where: TrunkedCallFrequencyTimeWhereUniqueInput;
  update: TrunkedCallFrequencyTimeUpdateDataInput;
  create: TrunkedCallFrequencyTimeCreateInput;
}

export interface Dump1090AircraftWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  IcaoID?: String;
  IcaoID_not?: String;
  IcaoID_in?: String[] | String;
  IcaoID_not_in?: String[] | String;
  IcaoID_lt?: String;
  IcaoID_lte?: String;
  IcaoID_gt?: String;
  IcaoID_gte?: String;
  IcaoID_contains?: String;
  IcaoID_not_contains?: String;
  IcaoID_starts_with?: String;
  IcaoID_not_starts_with?: String;
  IcaoID_ends_with?: String;
  IcaoID_not_ends_with?: String;
  AND?: Dump1090AircraftWhereInput[] | Dump1090AircraftWhereInput;
  OR?: Dump1090AircraftWhereInput[] | Dump1090AircraftWhereInput;
  NOT?: Dump1090AircraftWhereInput[] | Dump1090AircraftWhereInput;
}

export interface TrunkedCallFrequencyTimeScalarWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  updatedAt?: DateTimeInput;
  updatedAt_not?: DateTimeInput;
  updatedAt_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_not_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_lt?: DateTimeInput;
  updatedAt_lte?: DateTimeInput;
  updatedAt_gt?: DateTimeInput;
  updatedAt_gte?: DateTimeInput;
  createdAt?: DateTimeInput;
  createdAt_not?: DateTimeInput;
  createdAt_in?: DateTimeInput[] | DateTimeInput;
  createdAt_not_in?: DateTimeInput[] | DateTimeInput;
  createdAt_lt?: DateTimeInput;
  createdAt_lte?: DateTimeInput;
  createdAt_gt?: DateTimeInput;
  createdAt_gte?: DateTimeInput;
  frequency?: Int;
  frequency_not?: Int;
  frequency_in?: Int[] | Int;
  frequency_not_in?: Int[] | Int;
  frequency_lt?: Int;
  frequency_lte?: Int;
  frequency_gt?: Int;
  frequency_gte?: Int;
  time?: Int;
  time_not?: Int;
  time_in?: Int[] | Int;
  time_not_in?: Int[] | Int;
  time_lt?: Int;
  time_lte?: Int;
  time_gt?: Int;
  time_gte?: Int;
  position?: Float;
  position_not?: Float;
  position_in?: Float[] | Float;
  position_not_in?: Float[] | Float;
  position_lt?: Float;
  position_lte?: Float;
  position_gt?: Float;
  position_gte?: Float;
  length?: Int;
  length_not?: Int;
  length_in?: Int[] | Int;
  length_not_in?: Int[] | Int;
  length_lt?: Int;
  length_lte?: Int;
  length_gt?: Int;
  length_gte?: Int;
  errors?: Int;
  errors_not?: Int;
  errors_in?: Int[] | Int;
  errors_not_in?: Int[] | Int;
  errors_lt?: Int;
  errors_lte?: Int;
  errors_gt?: Int;
  errors_gte?: Int;
  spikes?: Int;
  spikes_not?: Int;
  spikes_in?: Int[] | Int;
  spikes_not_in?: Int[] | Int;
  spikes_lt?: Int;
  spikes_lte?: Int;
  spikes_gt?: Int;
  spikes_gte?: Int;
  AND?:
    | TrunkedCallFrequencyTimeScalarWhereInput[]
    | TrunkedCallFrequencyTimeScalarWhereInput;
  OR?:
    | TrunkedCallFrequencyTimeScalarWhereInput[]
    | TrunkedCallFrequencyTimeScalarWhereInput;
  NOT?:
    | TrunkedCallFrequencyTimeScalarWhereInput[]
    | TrunkedCallFrequencyTimeScalarWhereInput;
}

export interface TrunkedSourceUpdateDataInput {
  center?: Float;
  rate?: Float;
  squelch?: Float;
  error?: Float;
  gain?: Float;
  digitalRecorders?: Float;
  digitalLevels?: Float;
  analogRecorders?: Float;
  analogLevels?: Float;
  device?: String;
  modulation?: TrunkedModulation;
}

export interface TrunkedCallFrequencyTimeUpdateManyWithWhereNestedInput {
  where: TrunkedCallFrequencyTimeScalarWhereInput;
  data: TrunkedCallFrequencyTimeUpdateManyDataInput;
}

export interface TrunkedConfigUpdateInput {
  name?: String;
  sources?: TrunkedSourceUpdateManyInput;
  systems?: TrunkedSystemUpdateManyInput;
  defaultMode?: TrunkedDefaultMode;
  captureDir?: String;
  callTimeout?: Int;
  logFile?: Boolean;
  frequencyFormat?: TrunkedFrequencyFormat;
  controlWarnRate?: Int;
  statusAsString?: Boolean;
}

export interface TrunkedCallFrequencyTimeUpdateManyDataInput {
  frequency?: Int;
  time?: Int;
  position?: Float;
  length?: Int;
  errors?: Int;
  spikes?: Int;
}

export interface TrunkedSourceCreateInput {
  id?: ID_Input;
  center: Float;
  rate: Float;
  squelch?: Float;
  error?: Float;
  gain?: Float;
  digitalRecorders?: Float;
  digitalLevels?: Float;
  analogRecorders?: Float;
  analogLevels?: Float;
  device: String;
  modulation: TrunkedModulation;
}

export interface TrunkedCallUpsertWithWhereUniqueWithoutSystemInput {
  where: TrunkedCallWhereUniqueInput;
  update: TrunkedCallUpdateWithoutSystemDataInput;
  create: TrunkedCallCreateWithoutSystemInput;
}

export interface TrunkedCallSourceUpdateManyMutationInput {
  sourceId?: Int;
  time?: DateTimeInput;
  position?: Float;
}

export interface TrunkedCallScalarWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  updatedAt?: DateTimeInput;
  updatedAt_not?: DateTimeInput;
  updatedAt_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_not_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_lt?: DateTimeInput;
  updatedAt_lte?: DateTimeInput;
  updatedAt_gt?: DateTimeInput;
  updatedAt_gte?: DateTimeInput;
  createdAt?: DateTimeInput;
  createdAt_not?: DateTimeInput;
  createdAt_in?: DateTimeInput[] | DateTimeInput;
  createdAt_not_in?: DateTimeInput[] | DateTimeInput;
  createdAt_lt?: DateTimeInput;
  createdAt_lte?: DateTimeInput;
  createdAt_gt?: DateTimeInput;
  createdAt_gte?: DateTimeInput;
  frequency?: Int;
  frequency_not?: Int;
  frequency_in?: Int[] | Int;
  frequency_not_in?: Int[] | Int;
  frequency_lt?: Int;
  frequency_lte?: Int;
  frequency_gt?: Int;
  frequency_gte?: Int;
  startTime?: DateTimeInput;
  startTime_not?: DateTimeInput;
  startTime_in?: DateTimeInput[] | DateTimeInput;
  startTime_not_in?: DateTimeInput[] | DateTimeInput;
  startTime_lt?: DateTimeInput;
  startTime_lte?: DateTimeInput;
  startTime_gt?: DateTimeInput;
  startTime_gte?: DateTimeInput;
  endTime?: DateTimeInput;
  endTime_not?: DateTimeInput;
  endTime_in?: DateTimeInput[] | DateTimeInput;
  endTime_not_in?: DateTimeInput[] | DateTimeInput;
  endTime_lt?: DateTimeInput;
  endTime_lte?: DateTimeInput;
  endTime_gt?: DateTimeInput;
  endTime_gte?: DateTimeInput;
  emergency?: Boolean;
  emergency_not?: Boolean;
  duration?: Float;
  duration_not?: Float;
  duration_in?: Float[] | Float;
  duration_not_in?: Float[] | Float;
  duration_lt?: Float;
  duration_lte?: Float;
  duration_gt?: Float;
  duration_gte?: Float;
  source?: Int;
  source_not?: Int;
  source_in?: Int[] | Int;
  source_not_in?: Int[] | Int;
  source_lt?: Int;
  source_lte?: Int;
  source_gt?: Int;
  source_gte?: Int;
  audioPath?: String;
  audioPath_not?: String;
  audioPath_in?: String[] | String;
  audioPath_not_in?: String[] | String;
  audioPath_lt?: String;
  audioPath_lte?: String;
  audioPath_gt?: String;
  audioPath_gte?: String;
  audioPath_contains?: String;
  audioPath_not_contains?: String;
  audioPath_starts_with?: String;
  audioPath_not_starts_with?: String;
  audioPath_ends_with?: String;
  audioPath_not_ends_with?: String;
  callHash?: String;
  callHash_not?: String;
  callHash_in?: String[] | String;
  callHash_not_in?: String[] | String;
  callHash_lt?: String;
  callHash_lte?: String;
  callHash_gt?: String;
  callHash_gte?: String;
  callHash_contains?: String;
  callHash_not_contains?: String;
  callHash_starts_with?: String;
  callHash_not_starts_with?: String;
  callHash_ends_with?: String;
  callHash_not_ends_with?: String;
  wavPath?: String;
  wavPath_not?: String;
  wavPath_in?: String[] | String;
  wavPath_not_in?: String[] | String;
  wavPath_lt?: String;
  wavPath_lte?: String;
  wavPath_gt?: String;
  wavPath_gte?: String;
  wavPath_contains?: String;
  wavPath_not_contains?: String;
  wavPath_starts_with?: String;
  wavPath_not_starts_with?: String;
  wavPath_ends_with?: String;
  wavPath_not_ends_with?: String;
  AND?: TrunkedCallScalarWhereInput[] | TrunkedCallScalarWhereInput;
  OR?: TrunkedCallScalarWhereInput[] | TrunkedCallScalarWhereInput;
  NOT?: TrunkedCallScalarWhereInput[] | TrunkedCallScalarWhereInput;
}

export interface Dump1090AircraftUpdateInput {
  IcaoID?: String;
}

export interface TrunkedCallUpdateManyWithWhereNestedInput {
  where: TrunkedCallScalarWhereInput;
  data: TrunkedCallUpdateManyDataInput;
}

export interface Dump1090MessageCreateInput {
  id?: ID_Input;
  messageType: Dump1090MessageType;
  transmissionType: Dump1090TransmissionType;
  aircraft?: Dump1090AircraftCreateOneInput;
  generated: DateTimeInput;
  logged: DateTimeInput;
  flightId?: String;
  squawk?: String;
  alert?: Boolean;
  emergency?: Boolean;
  isOnGround?: Boolean;
  latitude?: Float;
  longitude?: Float;
  verticalRate?: Int;
  track?: Int;
  groupSpeed?: Int;
  callsign?: String;
  altitude?: Int;
}

export interface TrunkedCallUpdateManyDataInput {
  frequency?: Int;
  startTime?: DateTimeInput;
  endTime?: DateTimeInput;
  emergency?: Boolean;
  duration?: Float;
  source?: Int;
  audioPath?: String;
  callHash?: String;
  wavPath?: String;
}

export interface TrunkedTalkgroupSubscriptionWhereInput {
  mutation_in?: MutationType[] | MutationType;
  updatedFields_contains?: String;
  updatedFields_contains_every?: String[] | String;
  updatedFields_contains_some?: String[] | String;
  node?: TrunkedTalkgroupWhereInput;
  AND?:
    | TrunkedTalkgroupSubscriptionWhereInput[]
    | TrunkedTalkgroupSubscriptionWhereInput;
  OR?:
    | TrunkedTalkgroupSubscriptionWhereInput[]
    | TrunkedTalkgroupSubscriptionWhereInput;
  NOT?:
    | TrunkedTalkgroupSubscriptionWhereInput[]
    | TrunkedTalkgroupSubscriptionWhereInput;
}

export interface TrunkedSystemUpsertWithoutTalkgroupsInput {
  update: TrunkedSystemUpdateWithoutTalkgroupsDataInput;
  create: TrunkedSystemCreateWithoutTalkgroupsInput;
}

export interface TrunkedCallSourceSubscriptionWhereInput {
  mutation_in?: MutationType[] | MutationType;
  updatedFields_contains?: String;
  updatedFields_contains_every?: String[] | String;
  updatedFields_contains_some?: String[] | String;
  node?: TrunkedCallSourceWhereInput;
  AND?:
    | TrunkedCallSourceSubscriptionWhereInput[]
    | TrunkedCallSourceSubscriptionWhereInput;
  OR?:
    | TrunkedCallSourceSubscriptionWhereInput[]
    | TrunkedCallSourceSubscriptionWhereInput;
  NOT?:
    | TrunkedCallSourceSubscriptionWhereInput[]
    | TrunkedCallSourceSubscriptionWhereInput;
}

export interface TrunkedTalkgroupUpsertWithoutCallsInput {
  update: TrunkedTalkgroupUpdateWithoutCallsDataInput;
  create: TrunkedTalkgroupCreateWithoutCallsInput;
}

export interface Dump1090AircraftSubscriptionWhereInput {
  mutation_in?: MutationType[] | MutationType;
  updatedFields_contains?: String;
  updatedFields_contains_every?: String[] | String;
  updatedFields_contains_some?: String[] | String;
  node?: Dump1090AircraftWhereInput;
  AND?:
    | Dump1090AircraftSubscriptionWhereInput[]
    | Dump1090AircraftSubscriptionWhereInput;
  OR?:
    | Dump1090AircraftSubscriptionWhereInput[]
    | Dump1090AircraftSubscriptionWhereInput;
  NOT?:
    | Dump1090AircraftSubscriptionWhereInput[]
    | Dump1090AircraftSubscriptionWhereInput;
}

export interface TrunkedSystemUpdateOneWithoutCallsInput {
  create?: TrunkedSystemCreateWithoutCallsInput;
  update?: TrunkedSystemUpdateWithoutCallsDataInput;
  upsert?: TrunkedSystemUpsertWithoutCallsInput;
  delete?: Boolean;
  disconnect?: Boolean;
  connect?: TrunkedSystemWhereUniqueInput;
}

export interface TrunkedSourceUpdateInput {
  center?: Float;
  rate?: Float;
  squelch?: Float;
  error?: Float;
  gain?: Float;
  digitalRecorders?: Float;
  digitalLevels?: Float;
  analogRecorders?: Float;
  analogLevels?: Float;
  device?: String;
  modulation?: TrunkedModulation;
}

export interface TrunkedSystemUpdateWithoutCallsDataInput {
  controlChannels?: TrunkedSystemUpdatecontrolChannelsInput;
  channels?: TrunkedSystemUpdatechannelsInput;
  type?: TrunkedSystemType;
  alphatags?: TrunkedSystemUpdatealphatagsInput;
  talkgroups?: TrunkedTalkgroupUpdateManyWithoutSystemInput;
  recordUnknown?: Boolean;
  shortName?: String;
  uploadScript?: String;
  audioArchive?: Boolean;
  callLog?: Boolean;
  bandplan?: TrunkedSmartnetBandplan;
  bandplanBase?: Float;
  bandplanHigh?: Float;
  bandplanSpacing?: Float;
  bandplanOffset?: Float;
  talkgroupDisplayFormat?: TrunkedTalkgroupDisplayFormat;
  delayCreateOutput?: Boolean;
  hideEncrypted?: Boolean;
  hideUnknownTalkgroups?: Boolean;
}

export interface TrunkedSourceWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  updatedAt?: DateTimeInput;
  updatedAt_not?: DateTimeInput;
  updatedAt_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_not_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_lt?: DateTimeInput;
  updatedAt_lte?: DateTimeInput;
  updatedAt_gt?: DateTimeInput;
  updatedAt_gte?: DateTimeInput;
  createdAt?: DateTimeInput;
  createdAt_not?: DateTimeInput;
  createdAt_in?: DateTimeInput[] | DateTimeInput;
  createdAt_not_in?: DateTimeInput[] | DateTimeInput;
  createdAt_lt?: DateTimeInput;
  createdAt_lte?: DateTimeInput;
  createdAt_gt?: DateTimeInput;
  createdAt_gte?: DateTimeInput;
  center?: Float;
  center_not?: Float;
  center_in?: Float[] | Float;
  center_not_in?: Float[] | Float;
  center_lt?: Float;
  center_lte?: Float;
  center_gt?: Float;
  center_gte?: Float;
  rate?: Float;
  rate_not?: Float;
  rate_in?: Float[] | Float;
  rate_not_in?: Float[] | Float;
  rate_lt?: Float;
  rate_lte?: Float;
  rate_gt?: Float;
  rate_gte?: Float;
  squelch?: Float;
  squelch_not?: Float;
  squelch_in?: Float[] | Float;
  squelch_not_in?: Float[] | Float;
  squelch_lt?: Float;
  squelch_lte?: Float;
  squelch_gt?: Float;
  squelch_gte?: Float;
  error?: Float;
  error_not?: Float;
  error_in?: Float[] | Float;
  error_not_in?: Float[] | Float;
  error_lt?: Float;
  error_lte?: Float;
  error_gt?: Float;
  error_gte?: Float;
  gain?: Float;
  gain_not?: Float;
  gain_in?: Float[] | Float;
  gain_not_in?: Float[] | Float;
  gain_lt?: Float;
  gain_lte?: Float;
  gain_gt?: Float;
  gain_gte?: Float;
  digitalRecorders?: Float;
  digitalRecorders_not?: Float;
  digitalRecorders_in?: Float[] | Float;
  digitalRecorders_not_in?: Float[] | Float;
  digitalRecorders_lt?: Float;
  digitalRecorders_lte?: Float;
  digitalRecorders_gt?: Float;
  digitalRecorders_gte?: Float;
  digitalLevels?: Float;
  digitalLevels_not?: Float;
  digitalLevels_in?: Float[] | Float;
  digitalLevels_not_in?: Float[] | Float;
  digitalLevels_lt?: Float;
  digitalLevels_lte?: Float;
  digitalLevels_gt?: Float;
  digitalLevels_gte?: Float;
  analogRecorders?: Float;
  analogRecorders_not?: Float;
  analogRecorders_in?: Float[] | Float;
  analogRecorders_not_in?: Float[] | Float;
  analogRecorders_lt?: Float;
  analogRecorders_lte?: Float;
  analogRecorders_gt?: Float;
  analogRecorders_gte?: Float;
  analogLevels?: Float;
  analogLevels_not?: Float;
  analogLevels_in?: Float[] | Float;
  analogLevels_not_in?: Float[] | Float;
  analogLevels_lt?: Float;
  analogLevels_lte?: Float;
  analogLevels_gt?: Float;
  analogLevels_gte?: Float;
  device?: String;
  device_not?: String;
  device_in?: String[] | String;
  device_not_in?: String[] | String;
  device_lt?: String;
  device_lte?: String;
  device_gt?: String;
  device_gte?: String;
  device_contains?: String;
  device_not_contains?: String;
  device_starts_with?: String;
  device_not_starts_with?: String;
  device_ends_with?: String;
  device_not_ends_with?: String;
  modulation?: TrunkedModulation;
  modulation_not?: TrunkedModulation;
  modulation_in?: TrunkedModulation[] | TrunkedModulation;
  modulation_not_in?: TrunkedModulation[] | TrunkedModulation;
  AND?: TrunkedSourceWhereInput[] | TrunkedSourceWhereInput;
  OR?: TrunkedSourceWhereInput[] | TrunkedSourceWhereInput;
  NOT?: TrunkedSourceWhereInput[] | TrunkedSourceWhereInput;
}

export interface TrunkedTalkgroupUpdateManyWithoutSystemInput {
  create?:
    | TrunkedTalkgroupCreateWithoutSystemInput[]
    | TrunkedTalkgroupCreateWithoutSystemInput;
  delete?:
    | TrunkedTalkgroupWhereUniqueInput[]
    | TrunkedTalkgroupWhereUniqueInput;
  connect?:
    | TrunkedTalkgroupWhereUniqueInput[]
    | TrunkedTalkgroupWhereUniqueInput;
  set?: TrunkedTalkgroupWhereUniqueInput[] | TrunkedTalkgroupWhereUniqueInput;
  disconnect?:
    | TrunkedTalkgroupWhereUniqueInput[]
    | TrunkedTalkgroupWhereUniqueInput;
  update?:
    | TrunkedTalkgroupUpdateWithWhereUniqueWithoutSystemInput[]
    | TrunkedTalkgroupUpdateWithWhereUniqueWithoutSystemInput;
  upsert?:
    | TrunkedTalkgroupUpsertWithWhereUniqueWithoutSystemInput[]
    | TrunkedTalkgroupUpsertWithWhereUniqueWithoutSystemInput;
  deleteMany?:
    | TrunkedTalkgroupScalarWhereInput[]
    | TrunkedTalkgroupScalarWhereInput;
  updateMany?:
    | TrunkedTalkgroupUpdateManyWithWhereNestedInput[]
    | TrunkedTalkgroupUpdateManyWithWhereNestedInput;
}

export interface TrunkedSourceScalarWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  updatedAt?: DateTimeInput;
  updatedAt_not?: DateTimeInput;
  updatedAt_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_not_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_lt?: DateTimeInput;
  updatedAt_lte?: DateTimeInput;
  updatedAt_gt?: DateTimeInput;
  updatedAt_gte?: DateTimeInput;
  createdAt?: DateTimeInput;
  createdAt_not?: DateTimeInput;
  createdAt_in?: DateTimeInput[] | DateTimeInput;
  createdAt_not_in?: DateTimeInput[] | DateTimeInput;
  createdAt_lt?: DateTimeInput;
  createdAt_lte?: DateTimeInput;
  createdAt_gt?: DateTimeInput;
  createdAt_gte?: DateTimeInput;
  center?: Float;
  center_not?: Float;
  center_in?: Float[] | Float;
  center_not_in?: Float[] | Float;
  center_lt?: Float;
  center_lte?: Float;
  center_gt?: Float;
  center_gte?: Float;
  rate?: Float;
  rate_not?: Float;
  rate_in?: Float[] | Float;
  rate_not_in?: Float[] | Float;
  rate_lt?: Float;
  rate_lte?: Float;
  rate_gt?: Float;
  rate_gte?: Float;
  squelch?: Float;
  squelch_not?: Float;
  squelch_in?: Float[] | Float;
  squelch_not_in?: Float[] | Float;
  squelch_lt?: Float;
  squelch_lte?: Float;
  squelch_gt?: Float;
  squelch_gte?: Float;
  error?: Float;
  error_not?: Float;
  error_in?: Float[] | Float;
  error_not_in?: Float[] | Float;
  error_lt?: Float;
  error_lte?: Float;
  error_gt?: Float;
  error_gte?: Float;
  gain?: Float;
  gain_not?: Float;
  gain_in?: Float[] | Float;
  gain_not_in?: Float[] | Float;
  gain_lt?: Float;
  gain_lte?: Float;
  gain_gt?: Float;
  gain_gte?: Float;
  digitalRecorders?: Float;
  digitalRecorders_not?: Float;
  digitalRecorders_in?: Float[] | Float;
  digitalRecorders_not_in?: Float[] | Float;
  digitalRecorders_lt?: Float;
  digitalRecorders_lte?: Float;
  digitalRecorders_gt?: Float;
  digitalRecorders_gte?: Float;
  digitalLevels?: Float;
  digitalLevels_not?: Float;
  digitalLevels_in?: Float[] | Float;
  digitalLevels_not_in?: Float[] | Float;
  digitalLevels_lt?: Float;
  digitalLevels_lte?: Float;
  digitalLevels_gt?: Float;
  digitalLevels_gte?: Float;
  analogRecorders?: Float;
  analogRecorders_not?: Float;
  analogRecorders_in?: Float[] | Float;
  analogRecorders_not_in?: Float[] | Float;
  analogRecorders_lt?: Float;
  analogRecorders_lte?: Float;
  analogRecorders_gt?: Float;
  analogRecorders_gte?: Float;
  analogLevels?: Float;
  analogLevels_not?: Float;
  analogLevels_in?: Float[] | Float;
  analogLevels_not_in?: Float[] | Float;
  analogLevels_lt?: Float;
  analogLevels_lte?: Float;
  analogLevels_gt?: Float;
  analogLevels_gte?: Float;
  device?: String;
  device_not?: String;
  device_in?: String[] | String;
  device_not_in?: String[] | String;
  device_lt?: String;
  device_lte?: String;
  device_gt?: String;
  device_gte?: String;
  device_contains?: String;
  device_not_contains?: String;
  device_starts_with?: String;
  device_not_starts_with?: String;
  device_ends_with?: String;
  device_not_ends_with?: String;
  modulation?: TrunkedModulation;
  modulation_not?: TrunkedModulation;
  modulation_in?: TrunkedModulation[] | TrunkedModulation;
  modulation_not_in?: TrunkedModulation[] | TrunkedModulation;
  AND?: TrunkedSourceScalarWhereInput[] | TrunkedSourceScalarWhereInput;
  OR?: TrunkedSourceScalarWhereInput[] | TrunkedSourceScalarWhereInput;
  NOT?: TrunkedSourceScalarWhereInput[] | TrunkedSourceScalarWhereInput;
}

export interface TrunkedTalkgroupUpdateWithWhereUniqueWithoutSystemInput {
  where: TrunkedTalkgroupWhereUniqueInput;
  data: TrunkedTalkgroupUpdateWithoutSystemDataInput;
}

export type TrunkedSystemWhereUniqueInput = AtLeastOne<{
  id: ID_Input;
  shortName?: String;
}>;

export interface TrunkedTalkgroupUpdateWithoutSystemDataInput {
  decimal?: Int;
  mode?: String;
  alphaTag?: String;
  description?: String;
  tag?: String;
  group?: String;
  priority?: Int;
  calls?: TrunkedCallUpdateManyWithoutTalkgroupInput;
  hash?: String;
}

export interface Dump1090MessageUpdateInput {
  messageType?: Dump1090MessageType;
  transmissionType?: Dump1090TransmissionType;
  aircraft?: Dump1090AircraftUpdateOneInput;
  generated?: DateTimeInput;
  logged?: DateTimeInput;
  flightId?: String;
  squawk?: String;
  alert?: Boolean;
  emergency?: Boolean;
  isOnGround?: Boolean;
  latitude?: Float;
  longitude?: Float;
  verticalRate?: Int;
  track?: Int;
  groupSpeed?: Int;
  callsign?: String;
  altitude?: Int;
}

export interface TrunkedCallUpdateManyWithoutTalkgroupInput {
  create?:
    | TrunkedCallCreateWithoutTalkgroupInput[]
    | TrunkedCallCreateWithoutTalkgroupInput;
  delete?: TrunkedCallWhereUniqueInput[] | TrunkedCallWhereUniqueInput;
  connect?: TrunkedCallWhereUniqueInput[] | TrunkedCallWhereUniqueInput;
  set?: TrunkedCallWhereUniqueInput[] | TrunkedCallWhereUniqueInput;
  disconnect?: TrunkedCallWhereUniqueInput[] | TrunkedCallWhereUniqueInput;
  update?:
    | TrunkedCallUpdateWithWhereUniqueWithoutTalkgroupInput[]
    | TrunkedCallUpdateWithWhereUniqueWithoutTalkgroupInput;
  upsert?:
    | TrunkedCallUpsertWithWhereUniqueWithoutTalkgroupInput[]
    | TrunkedCallUpsertWithWhereUniqueWithoutTalkgroupInput;
  deleteMany?: TrunkedCallScalarWhereInput[] | TrunkedCallScalarWhereInput;
  updateMany?:
    | TrunkedCallUpdateManyWithWhereNestedInput[]
    | TrunkedCallUpdateManyWithWhereNestedInput;
}

export interface TrunkedCallFrequencyTimeWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  updatedAt?: DateTimeInput;
  updatedAt_not?: DateTimeInput;
  updatedAt_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_not_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_lt?: DateTimeInput;
  updatedAt_lte?: DateTimeInput;
  updatedAt_gt?: DateTimeInput;
  updatedAt_gte?: DateTimeInput;
  createdAt?: DateTimeInput;
  createdAt_not?: DateTimeInput;
  createdAt_in?: DateTimeInput[] | DateTimeInput;
  createdAt_not_in?: DateTimeInput[] | DateTimeInput;
  createdAt_lt?: DateTimeInput;
  createdAt_lte?: DateTimeInput;
  createdAt_gt?: DateTimeInput;
  createdAt_gte?: DateTimeInput;
  frequency?: Int;
  frequency_not?: Int;
  frequency_in?: Int[] | Int;
  frequency_not_in?: Int[] | Int;
  frequency_lt?: Int;
  frequency_lte?: Int;
  frequency_gt?: Int;
  frequency_gte?: Int;
  time?: Int;
  time_not?: Int;
  time_in?: Int[] | Int;
  time_not_in?: Int[] | Int;
  time_lt?: Int;
  time_lte?: Int;
  time_gt?: Int;
  time_gte?: Int;
  position?: Float;
  position_not?: Float;
  position_in?: Float[] | Float;
  position_not_in?: Float[] | Float;
  position_lt?: Float;
  position_lte?: Float;
  position_gt?: Float;
  position_gte?: Float;
  length?: Int;
  length_not?: Int;
  length_in?: Int[] | Int;
  length_not_in?: Int[] | Int;
  length_lt?: Int;
  length_lte?: Int;
  length_gt?: Int;
  length_gte?: Int;
  errors?: Int;
  errors_not?: Int;
  errors_in?: Int[] | Int;
  errors_not_in?: Int[] | Int;
  errors_lt?: Int;
  errors_lte?: Int;
  errors_gt?: Int;
  errors_gte?: Int;
  spikes?: Int;
  spikes_not?: Int;
  spikes_in?: Int[] | Int;
  spikes_not_in?: Int[] | Int;
  spikes_lt?: Int;
  spikes_lte?: Int;
  spikes_gt?: Int;
  spikes_gte?: Int;
  AND?:
    | TrunkedCallFrequencyTimeWhereInput[]
    | TrunkedCallFrequencyTimeWhereInput;
  OR?:
    | TrunkedCallFrequencyTimeWhereInput[]
    | TrunkedCallFrequencyTimeWhereInput;
  NOT?:
    | TrunkedCallFrequencyTimeWhereInput[]
    | TrunkedCallFrequencyTimeWhereInput;
}

export interface TrunkedCallUpdateWithWhereUniqueWithoutTalkgroupInput {
  where: TrunkedCallWhereUniqueInput;
  data: TrunkedCallUpdateWithoutTalkgroupDataInput;
}

export interface TrunkedSystemUpdateManyWithWhereNestedInput {
  where: TrunkedSystemScalarWhereInput;
  data: TrunkedSystemUpdateManyDataInput;
}

export interface TrunkedCallUpdateWithoutTalkgroupDataInput {
  frequency?: Int;
  startTime?: DateTimeInput;
  endTime?: DateTimeInput;
  emergency?: Boolean;
  system?: TrunkedSystemUpdateOneWithoutCallsInput;
  sources?: TrunkedCallSourceUpdateManyInput;
  duration?: Float;
  source?: Int;
  audioPath?: String;
  frequencyList?: TrunkedCallFrequencyTimeUpdateManyInput;
  callHash?: String;
  wavPath?: String;
}

export type TrunkedSourceWhereUniqueInput = AtLeastOne<{
  id: ID_Input;
}>;

export interface TrunkedTalkgroupUpdateManyWithWhereNestedInput {
  where: TrunkedTalkgroupScalarWhereInput;
  data: TrunkedTalkgroupUpdateManyDataInput;
}

export interface TrunkedTalkgroupScalarWhereInput {
  id?: ID_Input;
  id_not?: ID_Input;
  id_in?: ID_Input[] | ID_Input;
  id_not_in?: ID_Input[] | ID_Input;
  id_lt?: ID_Input;
  id_lte?: ID_Input;
  id_gt?: ID_Input;
  id_gte?: ID_Input;
  id_contains?: ID_Input;
  id_not_contains?: ID_Input;
  id_starts_with?: ID_Input;
  id_not_starts_with?: ID_Input;
  id_ends_with?: ID_Input;
  id_not_ends_with?: ID_Input;
  updatedAt?: DateTimeInput;
  updatedAt_not?: DateTimeInput;
  updatedAt_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_not_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_lt?: DateTimeInput;
  updatedAt_lte?: DateTimeInput;
  updatedAt_gt?: DateTimeInput;
  updatedAt_gte?: DateTimeInput;
  createdAt?: DateTimeInput;
  createdAt_not?: DateTimeInput;
  createdAt_in?: DateTimeInput[] | DateTimeInput;
  createdAt_not_in?: DateTimeInput[] | DateTimeInput;
  createdAt_lt?: DateTimeInput;
  createdAt_lte?: DateTimeInput;
  createdAt_gt?: DateTimeInput;
  createdAt_gte?: DateTimeInput;
  decimal?: Int;
  decimal_not?: Int;
  decimal_in?: Int[] | Int;
  decimal_not_in?: Int[] | Int;
  decimal_lt?: Int;
  decimal_lte?: Int;
  decimal_gt?: Int;
  decimal_gte?: Int;
  mode?: String;
  mode_not?: String;
  mode_in?: String[] | String;
  mode_not_in?: String[] | String;
  mode_lt?: String;
  mode_lte?: String;
  mode_gt?: String;
  mode_gte?: String;
  mode_contains?: String;
  mode_not_contains?: String;
  mode_starts_with?: String;
  mode_not_starts_with?: String;
  mode_ends_with?: String;
  mode_not_ends_with?: String;
  alphaTag?: String;
  alphaTag_not?: String;
  alphaTag_in?: String[] | String;
  alphaTag_not_in?: String[] | String;
  alphaTag_lt?: String;
  alphaTag_lte?: String;
  alphaTag_gt?: String;
  alphaTag_gte?: String;
  alphaTag_contains?: String;
  alphaTag_not_contains?: String;
  alphaTag_starts_with?: String;
  alphaTag_not_starts_with?: String;
  alphaTag_ends_with?: String;
  alphaTag_not_ends_with?: String;
  description?: String;
  description_not?: String;
  description_in?: String[] | String;
  description_not_in?: String[] | String;
  description_lt?: String;
  description_lte?: String;
  description_gt?: String;
  description_gte?: String;
  description_contains?: String;
  description_not_contains?: String;
  description_starts_with?: String;
  description_not_starts_with?: String;
  description_ends_with?: String;
  description_not_ends_with?: String;
  tag?: String;
  tag_not?: String;
  tag_in?: String[] | String;
  tag_not_in?: String[] | String;
  tag_lt?: String;
  tag_lte?: String;
  tag_gt?: String;
  tag_gte?: String;
  tag_contains?: String;
  tag_not_contains?: String;
  tag_starts_with?: String;
  tag_not_starts_with?: String;
  tag_ends_with?: String;
  tag_not_ends_with?: String;
  group?: String;
  group_not?: String;
  group_in?: String[] | String;
  group_not_in?: String[] | String;
  group_lt?: String;
  group_lte?: String;
  group_gt?: String;
  group_gte?: String;
  group_contains?: String;
  group_not_contains?: String;
  group_starts_with?: String;
  group_not_starts_with?: String;
  group_ends_with?: String;
  group_not_ends_with?: String;
  priority?: Int;
  priority_not?: Int;
  priority_in?: Int[] | Int;
  priority_not_in?: Int[] | Int;
  priority_lt?: Int;
  priority_lte?: Int;
  priority_gt?: Int;
  priority_gte?: Int;
  hash?: String;
  hash_not?: String;
  hash_in?: String[] | String;
  hash_not_in?: String[] | String;
  hash_lt?: String;
  hash_lte?: String;
  hash_gt?: String;
  hash_gte?: String;
  hash_contains?: String;
  hash_not_contains?: String;
  hash_starts_with?: String;
  hash_not_starts_with?: String;
  hash_ends_with?: String;
  hash_not_ends_with?: String;
  AND?: TrunkedTalkgroupScalarWhereInput[] | TrunkedTalkgroupScalarWhereInput;
  OR?: TrunkedTalkgroupScalarWhereInput[] | TrunkedTalkgroupScalarWhereInput;
  NOT?: TrunkedTalkgroupScalarWhereInput[] | TrunkedTalkgroupScalarWhereInput;
}

export interface TrunkedTalkgroupUpsertWithWhereUniqueWithoutSystemInput {
  where: TrunkedTalkgroupWhereUniqueInput;
  update: TrunkedTalkgroupUpdateWithoutSystemDataInput;
  create: TrunkedTalkgroupCreateWithoutSystemInput;
}

export interface TrunkedCallUpsertWithWhereUniqueWithoutTalkgroupInput {
  where: TrunkedCallWhereUniqueInput;
  update: TrunkedCallUpdateWithoutTalkgroupDataInput;
  create: TrunkedCallCreateWithoutTalkgroupInput;
}

export type TrunkedTalkgroupWhereUniqueInput = AtLeastOne<{
  id: ID_Input;
  hash?: String;
}>;

export interface TrunkedSourceUpdateManyDataInput {
  center?: Float;
  rate?: Float;
  squelch?: Float;
  error?: Float;
  gain?: Float;
  digitalRecorders?: Float;
  digitalLevels?: Float;
  analogRecorders?: Float;
  analogLevels?: Float;
  device?: String;
  modulation?: TrunkedModulation;
}

export interface TrunkedSystemUpdateManyMutationInput {
  controlChannels?: TrunkedSystemUpdatecontrolChannelsInput;
  channels?: TrunkedSystemUpdatechannelsInput;
  type?: TrunkedSystemType;
  alphatags?: TrunkedSystemUpdatealphatagsInput;
  recordUnknown?: Boolean;
  shortName?: String;
  uploadScript?: String;
  audioArchive?: Boolean;
  callLog?: Boolean;
  bandplan?: TrunkedSmartnetBandplan;
  bandplanBase?: Float;
  bandplanHigh?: Float;
  bandplanSpacing?: Float;
  bandplanOffset?: Float;
  talkgroupDisplayFormat?: TrunkedTalkgroupDisplayFormat;
  delayCreateOutput?: Boolean;
  hideEncrypted?: Boolean;
  hideUnknownTalkgroups?: Boolean;
}

export interface TrunkedConfigSubscriptionWhereInput {
  mutation_in?: MutationType[] | MutationType;
  updatedFields_contains?: String;
  updatedFields_contains_every?: String[] | String;
  updatedFields_contains_some?: String[] | String;
  node?: TrunkedConfigWhereInput;
  AND?:
    | TrunkedConfigSubscriptionWhereInput[]
    | TrunkedConfigSubscriptionWhereInput;
  OR?:
    | TrunkedConfigSubscriptionWhereInput[]
    | TrunkedConfigSubscriptionWhereInput;
  NOT?:
    | TrunkedConfigSubscriptionWhereInput[]
    | TrunkedConfigSubscriptionWhereInput;
}

export interface TrunkedCallFrequencyTimeUpdateManyMutationInput {
  frequency?: Int;
  time?: Int;
  position?: Float;
  length?: Int;
  errors?: Int;
  spikes?: Int;
}

export interface NodeNode {
  id: ID_Output;
}

export interface TrunkedTalkgroupPreviousValues {
  id: ID_Output;
  updatedAt: DateTimeOutput;
  createdAt: DateTimeOutput;
  decimal: Int;
  mode?: String;
  alphaTag?: String;
  description?: String;
  tag?: String;
  group?: String;
  priority: Int;
  hash: String;
}

export interface TrunkedTalkgroupPreviousValuesPromise
  extends Promise<TrunkedTalkgroupPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  updatedAt: () => Promise<DateTimeOutput>;
  createdAt: () => Promise<DateTimeOutput>;
  decimal: () => Promise<Int>;
  mode: () => Promise<String>;
  alphaTag: () => Promise<String>;
  description: () => Promise<String>;
  tag: () => Promise<String>;
  group: () => Promise<String>;
  priority: () => Promise<Int>;
  hash: () => Promise<String>;
}

export interface TrunkedTalkgroupPreviousValuesSubscription
  extends Promise<AsyncIterator<TrunkedTalkgroupPreviousValues>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  updatedAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  createdAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  decimal: () => Promise<AsyncIterator<Int>>;
  mode: () => Promise<AsyncIterator<String>>;
  alphaTag: () => Promise<AsyncIterator<String>>;
  description: () => Promise<AsyncIterator<String>>;
  tag: () => Promise<AsyncIterator<String>>;
  group: () => Promise<AsyncIterator<String>>;
  priority: () => Promise<AsyncIterator<Int>>;
  hash: () => Promise<AsyncIterator<String>>;
}

export interface TrunkedCallConnection {
  pageInfo: PageInfo;
  edges: TrunkedCallEdge[];
}

export interface TrunkedCallConnectionPromise
  extends Promise<TrunkedCallConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <T = FragmentableArray<TrunkedCallEdge>>() => T;
  aggregate: <T = AggregateTrunkedCallPromise>() => T;
}

export interface TrunkedCallConnectionSubscription
  extends Promise<AsyncIterator<TrunkedCallConnection>>,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <T = Promise<AsyncIterator<TrunkedCallEdgeSubscription>>>() => T;
  aggregate: <T = AggregateTrunkedCallSubscription>() => T;
}

export interface Dump1090MessageConnection {
  pageInfo: PageInfo;
  edges: Dump1090MessageEdge[];
}

export interface Dump1090MessageConnectionPromise
  extends Promise<Dump1090MessageConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <T = FragmentableArray<Dump1090MessageEdge>>() => T;
  aggregate: <T = AggregateDump1090MessagePromise>() => T;
}

export interface Dump1090MessageConnectionSubscription
  extends Promise<AsyncIterator<Dump1090MessageConnection>>,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <T = Promise<AsyncIterator<Dump1090MessageEdgeSubscription>>>() => T;
  aggregate: <T = AggregateDump1090MessageSubscription>() => T;
}

export interface TrunkedCallFrequencyTime {
  id: ID_Output;
  updatedAt: DateTimeOutput;
  createdAt: DateTimeOutput;
  frequency: Int;
  time: Int;
  position: Float;
  length: Int;
  errors: Int;
  spikes: Int;
}

export interface TrunkedCallFrequencyTimePromise
  extends Promise<TrunkedCallFrequencyTime>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  updatedAt: () => Promise<DateTimeOutput>;
  createdAt: () => Promise<DateTimeOutput>;
  frequency: () => Promise<Int>;
  time: () => Promise<Int>;
  position: () => Promise<Float>;
  length: () => Promise<Int>;
  errors: () => Promise<Int>;
  spikes: () => Promise<Int>;
}

export interface TrunkedCallFrequencyTimeSubscription
  extends Promise<AsyncIterator<TrunkedCallFrequencyTime>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  updatedAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  createdAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  frequency: () => Promise<AsyncIterator<Int>>;
  time: () => Promise<AsyncIterator<Int>>;
  position: () => Promise<AsyncIterator<Float>>;
  length: () => Promise<AsyncIterator<Int>>;
  errors: () => Promise<AsyncIterator<Int>>;
  spikes: () => Promise<AsyncIterator<Int>>;
}

export interface Dump1090MessageEdge {
  node: Dump1090Message;
  cursor: String;
}

export interface Dump1090MessageEdgePromise
  extends Promise<Dump1090MessageEdge>,
    Fragmentable {
  node: <T = Dump1090MessagePromise>() => T;
  cursor: () => Promise<String>;
}

export interface Dump1090MessageEdgeSubscription
  extends Promise<AsyncIterator<Dump1090MessageEdge>>,
    Fragmentable {
  node: <T = Dump1090MessageSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface Dump1090AircraftEdge {
  node: Dump1090Aircraft;
  cursor: String;
}

export interface Dump1090AircraftEdgePromise
  extends Promise<Dump1090AircraftEdge>,
    Fragmentable {
  node: <T = Dump1090AircraftPromise>() => T;
  cursor: () => Promise<String>;
}

export interface Dump1090AircraftEdgeSubscription
  extends Promise<AsyncIterator<Dump1090AircraftEdge>>,
    Fragmentable {
  node: <T = Dump1090AircraftSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface AggregateTrunkedTalkgroup {
  count: Int;
}

export interface AggregateTrunkedTalkgroupPromise
  extends Promise<AggregateTrunkedTalkgroup>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateTrunkedTalkgroupSubscription
  extends Promise<AsyncIterator<AggregateTrunkedTalkgroup>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface TrunkedCallSource {
  id: ID_Output;
  updatedAt: DateTimeOutput;
  createdAt: DateTimeOutput;
  sourceId?: Int;
  time?: DateTimeOutput;
  position?: Float;
}

export interface TrunkedCallSourcePromise
  extends Promise<TrunkedCallSource>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  updatedAt: () => Promise<DateTimeOutput>;
  createdAt: () => Promise<DateTimeOutput>;
  sourceId: () => Promise<Int>;
  time: () => Promise<DateTimeOutput>;
  position: () => Promise<Float>;
}

export interface TrunkedCallSourceSubscription
  extends Promise<AsyncIterator<TrunkedCallSource>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  updatedAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  createdAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  sourceId: () => Promise<AsyncIterator<Int>>;
  time: () => Promise<AsyncIterator<DateTimeOutput>>;
  position: () => Promise<AsyncIterator<Float>>;
}

export interface TrunkedTalkgroupConnection {
  pageInfo: PageInfo;
  edges: TrunkedTalkgroupEdge[];
}

export interface TrunkedTalkgroupConnectionPromise
  extends Promise<TrunkedTalkgroupConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <T = FragmentableArray<TrunkedTalkgroupEdge>>() => T;
  aggregate: <T = AggregateTrunkedTalkgroupPromise>() => T;
}

export interface TrunkedTalkgroupConnectionSubscription
  extends Promise<AsyncIterator<TrunkedTalkgroupConnection>>,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <T = Promise<AsyncIterator<TrunkedTalkgroupEdgeSubscription>>>() => T;
  aggregate: <T = AggregateTrunkedTalkgroupSubscription>() => T;
}

export interface BatchPayload {
  count: Long;
}

export interface BatchPayloadPromise
  extends Promise<BatchPayload>,
    Fragmentable {
  count: () => Promise<Long>;
}

export interface BatchPayloadSubscription
  extends Promise<AsyncIterator<BatchPayload>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Long>>;
}

export interface TrunkedSourcePreviousValues {
  id: ID_Output;
  updatedAt: DateTimeOutput;
  createdAt: DateTimeOutput;
  center: Float;
  rate: Float;
  squelch: Float;
  error: Float;
  gain: Float;
  digitalRecorders: Float;
  digitalLevels?: Float;
  analogRecorders: Float;
  analogLevels?: Float;
  device: String;
  modulation: TrunkedModulation;
}

export interface TrunkedSourcePreviousValuesPromise
  extends Promise<TrunkedSourcePreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  updatedAt: () => Promise<DateTimeOutput>;
  createdAt: () => Promise<DateTimeOutput>;
  center: () => Promise<Float>;
  rate: () => Promise<Float>;
  squelch: () => Promise<Float>;
  error: () => Promise<Float>;
  gain: () => Promise<Float>;
  digitalRecorders: () => Promise<Float>;
  digitalLevels: () => Promise<Float>;
  analogRecorders: () => Promise<Float>;
  analogLevels: () => Promise<Float>;
  device: () => Promise<String>;
  modulation: () => Promise<TrunkedModulation>;
}

export interface TrunkedSourcePreviousValuesSubscription
  extends Promise<AsyncIterator<TrunkedSourcePreviousValues>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  updatedAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  createdAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  center: () => Promise<AsyncIterator<Float>>;
  rate: () => Promise<AsyncIterator<Float>>;
  squelch: () => Promise<AsyncIterator<Float>>;
  error: () => Promise<AsyncIterator<Float>>;
  gain: () => Promise<AsyncIterator<Float>>;
  digitalRecorders: () => Promise<AsyncIterator<Float>>;
  digitalLevels: () => Promise<AsyncIterator<Float>>;
  analogRecorders: () => Promise<AsyncIterator<Float>>;
  analogLevels: () => Promise<AsyncIterator<Float>>;
  device: () => Promise<AsyncIterator<String>>;
  modulation: () => Promise<AsyncIterator<TrunkedModulation>>;
}

export interface TrunkedTalkgroupEdge {
  node: TrunkedTalkgroup;
  cursor: String;
}

export interface TrunkedTalkgroupEdgePromise
  extends Promise<TrunkedTalkgroupEdge>,
    Fragmentable {
  node: <T = TrunkedTalkgroupPromise>() => T;
  cursor: () => Promise<String>;
}

export interface TrunkedTalkgroupEdgeSubscription
  extends Promise<AsyncIterator<TrunkedTalkgroupEdge>>,
    Fragmentable {
  node: <T = TrunkedTalkgroupSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface TrunkedSystemEdge {
  node: TrunkedSystem;
  cursor: String;
}

export interface TrunkedSystemEdgePromise
  extends Promise<TrunkedSystemEdge>,
    Fragmentable {
  node: <T = TrunkedSystemPromise>() => T;
  cursor: () => Promise<String>;
}

export interface TrunkedSystemEdgeSubscription
  extends Promise<AsyncIterator<TrunkedSystemEdge>>,
    Fragmentable {
  node: <T = TrunkedSystemSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface AggregateTrunkedSystem {
  count: Int;
}

export interface AggregateTrunkedSystemPromise
  extends Promise<AggregateTrunkedSystem>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateTrunkedSystemSubscription
  extends Promise<AsyncIterator<AggregateTrunkedSystem>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface TrunkedSourceEdge {
  node: TrunkedSource;
  cursor: String;
}

export interface TrunkedSourceEdgePromise
  extends Promise<TrunkedSourceEdge>,
    Fragmentable {
  node: <T = TrunkedSourcePromise>() => T;
  cursor: () => Promise<String>;
}

export interface TrunkedSourceEdgeSubscription
  extends Promise<AsyncIterator<TrunkedSourceEdge>>,
    Fragmentable {
  node: <T = TrunkedSourceSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface TrunkedSystemConnection {
  pageInfo: PageInfo;
  edges: TrunkedSystemEdge[];
}

export interface TrunkedSystemConnectionPromise
  extends Promise<TrunkedSystemConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <T = FragmentableArray<TrunkedSystemEdge>>() => T;
  aggregate: <T = AggregateTrunkedSystemPromise>() => T;
}

export interface TrunkedSystemConnectionSubscription
  extends Promise<AsyncIterator<TrunkedSystemConnection>>,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <T = Promise<AsyncIterator<TrunkedSystemEdgeSubscription>>>() => T;
  aggregate: <T = AggregateTrunkedSystemSubscription>() => T;
}

export interface AggregateTrunkedConfig {
  count: Int;
}

export interface AggregateTrunkedConfigPromise
  extends Promise<AggregateTrunkedConfig>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateTrunkedConfigSubscription
  extends Promise<AsyncIterator<AggregateTrunkedConfig>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface Dump1090AircraftSubscriptionPayload {
  mutation: MutationType;
  node: Dump1090Aircraft;
  updatedFields: String[];
  previousValues: Dump1090AircraftPreviousValues;
}

export interface Dump1090AircraftSubscriptionPayloadPromise
  extends Promise<Dump1090AircraftSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = Dump1090AircraftPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <T = Dump1090AircraftPreviousValuesPromise>() => T;
}

export interface Dump1090AircraftSubscriptionPayloadSubscription
  extends Promise<AsyncIterator<Dump1090AircraftSubscriptionPayload>>,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = Dump1090AircraftSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <T = Dump1090AircraftPreviousValuesSubscription>() => T;
}

export interface TrunkedConfigConnection {
  pageInfo: PageInfo;
  edges: TrunkedConfigEdge[];
}

export interface TrunkedConfigConnectionPromise
  extends Promise<TrunkedConfigConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <T = FragmentableArray<TrunkedConfigEdge>>() => T;
  aggregate: <T = AggregateTrunkedConfigPromise>() => T;
}

export interface TrunkedConfigConnectionSubscription
  extends Promise<AsyncIterator<TrunkedConfigConnection>>,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <T = Promise<AsyncIterator<TrunkedConfigEdgeSubscription>>>() => T;
  aggregate: <T = AggregateTrunkedConfigSubscription>() => T;
}

export interface Dump1090AircraftPreviousValues {
  id: ID_Output;
  IcaoID?: String;
}

export interface Dump1090AircraftPreviousValuesPromise
  extends Promise<Dump1090AircraftPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  IcaoID: () => Promise<String>;
}

export interface Dump1090AircraftPreviousValuesSubscription
  extends Promise<AsyncIterator<Dump1090AircraftPreviousValues>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  IcaoID: () => Promise<AsyncIterator<String>>;
}

export interface TrunkedTalkgroupSubscriptionPayload {
  mutation: MutationType;
  node: TrunkedTalkgroup;
  updatedFields: String[];
  previousValues: TrunkedTalkgroupPreviousValues;
}

export interface TrunkedTalkgroupSubscriptionPayloadPromise
  extends Promise<TrunkedTalkgroupSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = TrunkedTalkgroupPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <T = TrunkedTalkgroupPreviousValuesPromise>() => T;
}

export interface TrunkedTalkgroupSubscriptionPayloadSubscription
  extends Promise<AsyncIterator<TrunkedTalkgroupSubscriptionPayload>>,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = TrunkedTalkgroupSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <T = TrunkedTalkgroupPreviousValuesSubscription>() => T;
}

export interface AggregateDump1090Aircraft {
  count: Int;
}

export interface AggregateDump1090AircraftPromise
  extends Promise<AggregateDump1090Aircraft>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateDump1090AircraftSubscription
  extends Promise<AsyncIterator<AggregateDump1090Aircraft>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface TrunkedSource {
  id: ID_Output;
  updatedAt: DateTimeOutput;
  createdAt: DateTimeOutput;
  center: Float;
  rate: Float;
  squelch: Float;
  error: Float;
  gain: Float;
  digitalRecorders: Float;
  digitalLevels?: Float;
  analogRecorders: Float;
  analogLevels?: Float;
  device: String;
  modulation: TrunkedModulation;
}

export interface TrunkedSourcePromise
  extends Promise<TrunkedSource>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  updatedAt: () => Promise<DateTimeOutput>;
  createdAt: () => Promise<DateTimeOutput>;
  center: () => Promise<Float>;
  rate: () => Promise<Float>;
  squelch: () => Promise<Float>;
  error: () => Promise<Float>;
  gain: () => Promise<Float>;
  digitalRecorders: () => Promise<Float>;
  digitalLevels: () => Promise<Float>;
  analogRecorders: () => Promise<Float>;
  analogLevels: () => Promise<Float>;
  device: () => Promise<String>;
  modulation: () => Promise<TrunkedModulation>;
}

export interface TrunkedSourceSubscription
  extends Promise<AsyncIterator<TrunkedSource>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  updatedAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  createdAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  center: () => Promise<AsyncIterator<Float>>;
  rate: () => Promise<AsyncIterator<Float>>;
  squelch: () => Promise<AsyncIterator<Float>>;
  error: () => Promise<AsyncIterator<Float>>;
  gain: () => Promise<AsyncIterator<Float>>;
  digitalRecorders: () => Promise<AsyncIterator<Float>>;
  digitalLevels: () => Promise<AsyncIterator<Float>>;
  analogRecorders: () => Promise<AsyncIterator<Float>>;
  analogLevels: () => Promise<AsyncIterator<Float>>;
  device: () => Promise<AsyncIterator<String>>;
  modulation: () => Promise<AsyncIterator<TrunkedModulation>>;
}

export interface Dump1090MessageSubscriptionPayload {
  mutation: MutationType;
  node: Dump1090Message;
  updatedFields: String[];
  previousValues: Dump1090MessagePreviousValues;
}

export interface Dump1090MessageSubscriptionPayloadPromise
  extends Promise<Dump1090MessageSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = Dump1090MessagePromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <T = Dump1090MessagePreviousValuesPromise>() => T;
}

export interface Dump1090MessageSubscriptionPayloadSubscription
  extends Promise<AsyncIterator<Dump1090MessageSubscriptionPayload>>,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = Dump1090MessageSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <T = Dump1090MessagePreviousValuesSubscription>() => T;
}

export interface AggregateDump1090Message {
  count: Int;
}

export interface AggregateDump1090MessagePromise
  extends Promise<AggregateDump1090Message>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateDump1090MessageSubscription
  extends Promise<AsyncIterator<AggregateDump1090Message>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface Dump1090MessagePreviousValues {
  id: ID_Output;
  messageType: Dump1090MessageType;
  transmissionType: Dump1090TransmissionType;
  generated: DateTimeOutput;
  logged: DateTimeOutput;
  flightId?: String;
  squawk?: String;
  alert?: Boolean;
  emergency?: Boolean;
  isOnGround?: Boolean;
  latitude?: Float;
  longitude?: Float;
  verticalRate?: Int;
  track?: Int;
  groupSpeed?: Int;
  callsign?: String;
  altitude?: Int;
}

export interface Dump1090MessagePreviousValuesPromise
  extends Promise<Dump1090MessagePreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  messageType: () => Promise<Dump1090MessageType>;
  transmissionType: () => Promise<Dump1090TransmissionType>;
  generated: () => Promise<DateTimeOutput>;
  logged: () => Promise<DateTimeOutput>;
  flightId: () => Promise<String>;
  squawk: () => Promise<String>;
  alert: () => Promise<Boolean>;
  emergency: () => Promise<Boolean>;
  isOnGround: () => Promise<Boolean>;
  latitude: () => Promise<Float>;
  longitude: () => Promise<Float>;
  verticalRate: () => Promise<Int>;
  track: () => Promise<Int>;
  groupSpeed: () => Promise<Int>;
  callsign: () => Promise<String>;
  altitude: () => Promise<Int>;
}

export interface Dump1090MessagePreviousValuesSubscription
  extends Promise<AsyncIterator<Dump1090MessagePreviousValues>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  messageType: () => Promise<AsyncIterator<Dump1090MessageType>>;
  transmissionType: () => Promise<AsyncIterator<Dump1090TransmissionType>>;
  generated: () => Promise<AsyncIterator<DateTimeOutput>>;
  logged: () => Promise<AsyncIterator<DateTimeOutput>>;
  flightId: () => Promise<AsyncIterator<String>>;
  squawk: () => Promise<AsyncIterator<String>>;
  alert: () => Promise<AsyncIterator<Boolean>>;
  emergency: () => Promise<AsyncIterator<Boolean>>;
  isOnGround: () => Promise<AsyncIterator<Boolean>>;
  latitude: () => Promise<AsyncIterator<Float>>;
  longitude: () => Promise<AsyncIterator<Float>>;
  verticalRate: () => Promise<AsyncIterator<Int>>;
  track: () => Promise<AsyncIterator<Int>>;
  groupSpeed: () => Promise<AsyncIterator<Int>>;
  callsign: () => Promise<AsyncIterator<String>>;
  altitude: () => Promise<AsyncIterator<Int>>;
}

export interface AggregateTrunkedCallSource {
  count: Int;
}

export interface AggregateTrunkedCallSourcePromise
  extends Promise<AggregateTrunkedCallSource>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateTrunkedCallSourceSubscription
  extends Promise<AsyncIterator<AggregateTrunkedCallSource>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface Dump1090Message {
  id: ID_Output;
  messageType: Dump1090MessageType;
  transmissionType: Dump1090TransmissionType;
  generated: DateTimeOutput;
  logged: DateTimeOutput;
  flightId?: String;
  squawk?: String;
  alert?: Boolean;
  emergency?: Boolean;
  isOnGround?: Boolean;
  latitude?: Float;
  longitude?: Float;
  verticalRate?: Int;
  track?: Int;
  groupSpeed?: Int;
  callsign?: String;
  altitude?: Int;
}

export interface Dump1090MessagePromise
  extends Promise<Dump1090Message>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  messageType: () => Promise<Dump1090MessageType>;
  transmissionType: () => Promise<Dump1090TransmissionType>;
  aircraft: <T = Dump1090AircraftPromise>() => T;
  generated: () => Promise<DateTimeOutput>;
  logged: () => Promise<DateTimeOutput>;
  flightId: () => Promise<String>;
  squawk: () => Promise<String>;
  alert: () => Promise<Boolean>;
  emergency: () => Promise<Boolean>;
  isOnGround: () => Promise<Boolean>;
  latitude: () => Promise<Float>;
  longitude: () => Promise<Float>;
  verticalRate: () => Promise<Int>;
  track: () => Promise<Int>;
  groupSpeed: () => Promise<Int>;
  callsign: () => Promise<String>;
  altitude: () => Promise<Int>;
}

export interface Dump1090MessageSubscription
  extends Promise<AsyncIterator<Dump1090Message>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  messageType: () => Promise<AsyncIterator<Dump1090MessageType>>;
  transmissionType: () => Promise<AsyncIterator<Dump1090TransmissionType>>;
  aircraft: <T = Dump1090AircraftSubscription>() => T;
  generated: () => Promise<AsyncIterator<DateTimeOutput>>;
  logged: () => Promise<AsyncIterator<DateTimeOutput>>;
  flightId: () => Promise<AsyncIterator<String>>;
  squawk: () => Promise<AsyncIterator<String>>;
  alert: () => Promise<AsyncIterator<Boolean>>;
  emergency: () => Promise<AsyncIterator<Boolean>>;
  isOnGround: () => Promise<AsyncIterator<Boolean>>;
  latitude: () => Promise<AsyncIterator<Float>>;
  longitude: () => Promise<AsyncIterator<Float>>;
  verticalRate: () => Promise<AsyncIterator<Int>>;
  track: () => Promise<AsyncIterator<Int>>;
  groupSpeed: () => Promise<AsyncIterator<Int>>;
  callsign: () => Promise<AsyncIterator<String>>;
  altitude: () => Promise<AsyncIterator<Int>>;
}

export interface TrunkedCallSourceConnection {
  pageInfo: PageInfo;
  edges: TrunkedCallSourceEdge[];
}

export interface TrunkedCallSourceConnectionPromise
  extends Promise<TrunkedCallSourceConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <T = FragmentableArray<TrunkedCallSourceEdge>>() => T;
  aggregate: <T = AggregateTrunkedCallSourcePromise>() => T;
}

export interface TrunkedCallSourceConnectionSubscription
  extends Promise<AsyncIterator<TrunkedCallSourceConnection>>,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <T = Promise<AsyncIterator<TrunkedCallSourceEdgeSubscription>>>() => T;
  aggregate: <T = AggregateTrunkedCallSourceSubscription>() => T;
}

export interface TrunkedCallSubscriptionPayload {
  mutation: MutationType;
  node: TrunkedCall;
  updatedFields: String[];
  previousValues: TrunkedCallPreviousValues;
}

export interface TrunkedCallSubscriptionPayloadPromise
  extends Promise<TrunkedCallSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = TrunkedCallPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <T = TrunkedCallPreviousValuesPromise>() => T;
}

export interface TrunkedCallSubscriptionPayloadSubscription
  extends Promise<AsyncIterator<TrunkedCallSubscriptionPayload>>,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = TrunkedCallSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <T = TrunkedCallPreviousValuesSubscription>() => T;
}

export interface TrunkedCallFrequencyTimeEdge {
  node: TrunkedCallFrequencyTime;
  cursor: String;
}

export interface TrunkedCallFrequencyTimeEdgePromise
  extends Promise<TrunkedCallFrequencyTimeEdge>,
    Fragmentable {
  node: <T = TrunkedCallFrequencyTimePromise>() => T;
  cursor: () => Promise<String>;
}

export interface TrunkedCallFrequencyTimeEdgeSubscription
  extends Promise<AsyncIterator<TrunkedCallFrequencyTimeEdge>>,
    Fragmentable {
  node: <T = TrunkedCallFrequencyTimeSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface TrunkedCallPreviousValues {
  id: ID_Output;
  updatedAt: DateTimeOutput;
  createdAt: DateTimeOutput;
  frequency: Int;
  startTime: DateTimeOutput;
  endTime: DateTimeOutput;
  emergency?: Boolean;
  duration?: Float;
  source?: Int;
  audioPath?: String;
  callHash?: String;
  wavPath?: String;
}

export interface TrunkedCallPreviousValuesPromise
  extends Promise<TrunkedCallPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  updatedAt: () => Promise<DateTimeOutput>;
  createdAt: () => Promise<DateTimeOutput>;
  frequency: () => Promise<Int>;
  startTime: () => Promise<DateTimeOutput>;
  endTime: () => Promise<DateTimeOutput>;
  emergency: () => Promise<Boolean>;
  duration: () => Promise<Float>;
  source: () => Promise<Int>;
  audioPath: () => Promise<String>;
  callHash: () => Promise<String>;
  wavPath: () => Promise<String>;
}

export interface TrunkedCallPreviousValuesSubscription
  extends Promise<AsyncIterator<TrunkedCallPreviousValues>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  updatedAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  createdAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  frequency: () => Promise<AsyncIterator<Int>>;
  startTime: () => Promise<AsyncIterator<DateTimeOutput>>;
  endTime: () => Promise<AsyncIterator<DateTimeOutput>>;
  emergency: () => Promise<AsyncIterator<Boolean>>;
  duration: () => Promise<AsyncIterator<Float>>;
  source: () => Promise<AsyncIterator<Int>>;
  audioPath: () => Promise<AsyncIterator<String>>;
  callHash: () => Promise<AsyncIterator<String>>;
  wavPath: () => Promise<AsyncIterator<String>>;
}

export interface AggregateTrunkedCall {
  count: Int;
}

export interface AggregateTrunkedCallPromise
  extends Promise<AggregateTrunkedCall>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateTrunkedCallSubscription
  extends Promise<AsyncIterator<AggregateTrunkedCall>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface TrunkedSystemSubscriptionPayload {
  mutation: MutationType;
  node: TrunkedSystem;
  updatedFields: String[];
  previousValues: TrunkedSystemPreviousValues;
}

export interface TrunkedSystemSubscriptionPayloadPromise
  extends Promise<TrunkedSystemSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = TrunkedSystemPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <T = TrunkedSystemPreviousValuesPromise>() => T;
}

export interface TrunkedSystemSubscriptionPayloadSubscription
  extends Promise<AsyncIterator<TrunkedSystemSubscriptionPayload>>,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = TrunkedSystemSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <T = TrunkedSystemPreviousValuesSubscription>() => T;
}

export interface TrunkedSystemPreviousValues {
  id: ID_Output;
  updatedAt: DateTimeOutput;
  createdAt: DateTimeOutput;
  controlChannels: Float[];
  channels: Float[];
  type: TrunkedSystemType;
  alphatags: String[];
  recordUnknown?: Boolean;
  shortName?: String;
  uploadScript?: String;
  audioArchive?: Boolean;
  callLog?: Boolean;
  bandplan?: TrunkedSmartnetBandplan;
  bandplanBase?: Float;
  bandplanHigh?: Float;
  bandplanSpacing?: Float;
  bandplanOffset?: Float;
  talkgroupDisplayFormat?: TrunkedTalkgroupDisplayFormat;
  delayCreateOutput?: Boolean;
  hideEncrypted?: Boolean;
  hideUnknownTalkgroups?: Boolean;
}

export interface TrunkedSystemPreviousValuesPromise
  extends Promise<TrunkedSystemPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  updatedAt: () => Promise<DateTimeOutput>;
  createdAt: () => Promise<DateTimeOutput>;
  controlChannels: () => Promise<Float[]>;
  channels: () => Promise<Float[]>;
  type: () => Promise<TrunkedSystemType>;
  alphatags: () => Promise<String[]>;
  recordUnknown: () => Promise<Boolean>;
  shortName: () => Promise<String>;
  uploadScript: () => Promise<String>;
  audioArchive: () => Promise<Boolean>;
  callLog: () => Promise<Boolean>;
  bandplan: () => Promise<TrunkedSmartnetBandplan>;
  bandplanBase: () => Promise<Float>;
  bandplanHigh: () => Promise<Float>;
  bandplanSpacing: () => Promise<Float>;
  bandplanOffset: () => Promise<Float>;
  talkgroupDisplayFormat: () => Promise<TrunkedTalkgroupDisplayFormat>;
  delayCreateOutput: () => Promise<Boolean>;
  hideEncrypted: () => Promise<Boolean>;
  hideUnknownTalkgroups: () => Promise<Boolean>;
}

export interface TrunkedSystemPreviousValuesSubscription
  extends Promise<AsyncIterator<TrunkedSystemPreviousValues>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  updatedAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  createdAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  controlChannels: () => Promise<AsyncIterator<Float[]>>;
  channels: () => Promise<AsyncIterator<Float[]>>;
  type: () => Promise<AsyncIterator<TrunkedSystemType>>;
  alphatags: () => Promise<AsyncIterator<String[]>>;
  recordUnknown: () => Promise<AsyncIterator<Boolean>>;
  shortName: () => Promise<AsyncIterator<String>>;
  uploadScript: () => Promise<AsyncIterator<String>>;
  audioArchive: () => Promise<AsyncIterator<Boolean>>;
  callLog: () => Promise<AsyncIterator<Boolean>>;
  bandplan: () => Promise<AsyncIterator<TrunkedSmartnetBandplan>>;
  bandplanBase: () => Promise<AsyncIterator<Float>>;
  bandplanHigh: () => Promise<AsyncIterator<Float>>;
  bandplanSpacing: () => Promise<AsyncIterator<Float>>;
  bandplanOffset: () => Promise<AsyncIterator<Float>>;
  talkgroupDisplayFormat: () => Promise<
    AsyncIterator<TrunkedTalkgroupDisplayFormat>
  >;
  delayCreateOutput: () => Promise<AsyncIterator<Boolean>>;
  hideEncrypted: () => Promise<AsyncIterator<Boolean>>;
  hideUnknownTalkgroups: () => Promise<AsyncIterator<Boolean>>;
}

export interface TrunkedCallFrequencyTimeSubscriptionPayload {
  mutation: MutationType;
  node: TrunkedCallFrequencyTime;
  updatedFields: String[];
  previousValues: TrunkedCallFrequencyTimePreviousValues;
}

export interface TrunkedCallFrequencyTimeSubscriptionPayloadPromise
  extends Promise<TrunkedCallFrequencyTimeSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = TrunkedCallFrequencyTimePromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <T = TrunkedCallFrequencyTimePreviousValuesPromise>() => T;
}

export interface TrunkedCallFrequencyTimeSubscriptionPayloadSubscription
  extends Promise<AsyncIterator<TrunkedCallFrequencyTimeSubscriptionPayload>>,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = TrunkedCallFrequencyTimeSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = TrunkedCallFrequencyTimePreviousValuesSubscription
  >() => T;
}

export interface TrunkedSourceConnection {
  pageInfo: PageInfo;
  edges: TrunkedSourceEdge[];
}

export interface TrunkedSourceConnectionPromise
  extends Promise<TrunkedSourceConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <T = FragmentableArray<TrunkedSourceEdge>>() => T;
  aggregate: <T = AggregateTrunkedSourcePromise>() => T;
}

export interface TrunkedSourceConnectionSubscription
  extends Promise<AsyncIterator<TrunkedSourceConnection>>,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <T = Promise<AsyncIterator<TrunkedSourceEdgeSubscription>>>() => T;
  aggregate: <T = AggregateTrunkedSourceSubscription>() => T;
}

export interface TrunkedCallFrequencyTimePreviousValues {
  id: ID_Output;
  updatedAt: DateTimeOutput;
  createdAt: DateTimeOutput;
  frequency: Int;
  time: Int;
  position: Float;
  length: Int;
  errors: Int;
  spikes: Int;
}

export interface TrunkedCallFrequencyTimePreviousValuesPromise
  extends Promise<TrunkedCallFrequencyTimePreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  updatedAt: () => Promise<DateTimeOutput>;
  createdAt: () => Promise<DateTimeOutput>;
  frequency: () => Promise<Int>;
  time: () => Promise<Int>;
  position: () => Promise<Float>;
  length: () => Promise<Int>;
  errors: () => Promise<Int>;
  spikes: () => Promise<Int>;
}

export interface TrunkedCallFrequencyTimePreviousValuesSubscription
  extends Promise<AsyncIterator<TrunkedCallFrequencyTimePreviousValues>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  updatedAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  createdAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  frequency: () => Promise<AsyncIterator<Int>>;
  time: () => Promise<AsyncIterator<Int>>;
  position: () => Promise<AsyncIterator<Float>>;
  length: () => Promise<AsyncIterator<Int>>;
  errors: () => Promise<AsyncIterator<Int>>;
  spikes: () => Promise<AsyncIterator<Int>>;
}

export interface Dump1090Aircraft {
  id: ID_Output;
  IcaoID?: String;
}

export interface Dump1090AircraftPromise
  extends Promise<Dump1090Aircraft>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  IcaoID: () => Promise<String>;
}

export interface Dump1090AircraftSubscription
  extends Promise<AsyncIterator<Dump1090Aircraft>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  IcaoID: () => Promise<AsyncIterator<String>>;
}

export interface TrunkedCall {
  id: ID_Output;
  updatedAt: DateTimeOutput;
  createdAt: DateTimeOutput;
  frequency: Int;
  startTime: DateTimeOutput;
  endTime: DateTimeOutput;
  emergency?: Boolean;
  duration?: Float;
  source?: Int;
  audioPath?: String;
  callHash?: String;
  wavPath?: String;
}

export interface TrunkedCallPromise extends Promise<TrunkedCall>, Fragmentable {
  id: () => Promise<ID_Output>;
  updatedAt: () => Promise<DateTimeOutput>;
  createdAt: () => Promise<DateTimeOutput>;
  frequency: () => Promise<Int>;
  startTime: () => Promise<DateTimeOutput>;
  endTime: () => Promise<DateTimeOutput>;
  emergency: () => Promise<Boolean>;
  talkgroup: <T = TrunkedTalkgroupPromise>() => T;
  system: <T = TrunkedSystemPromise>() => T;
  sources: <T = FragmentableArray<TrunkedCallSource>>(args?: {
    where?: TrunkedCallSourceWhereInput;
    orderBy?: TrunkedCallSourceOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => T;
  duration: () => Promise<Float>;
  source: () => Promise<Int>;
  audioPath: () => Promise<String>;
  frequencyList: <T = FragmentableArray<TrunkedCallFrequencyTime>>(args?: {
    where?: TrunkedCallFrequencyTimeWhereInput;
    orderBy?: TrunkedCallFrequencyTimeOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => T;
  callHash: () => Promise<String>;
  wavPath: () => Promise<String>;
}

export interface TrunkedCallSubscription
  extends Promise<AsyncIterator<TrunkedCall>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  updatedAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  createdAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  frequency: () => Promise<AsyncIterator<Int>>;
  startTime: () => Promise<AsyncIterator<DateTimeOutput>>;
  endTime: () => Promise<AsyncIterator<DateTimeOutput>>;
  emergency: () => Promise<AsyncIterator<Boolean>>;
  talkgroup: <T = TrunkedTalkgroupSubscription>() => T;
  system: <T = TrunkedSystemSubscription>() => T;
  sources: <T = Promise<AsyncIterator<TrunkedCallSourceSubscription>>>(args?: {
    where?: TrunkedCallSourceWhereInput;
    orderBy?: TrunkedCallSourceOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => T;
  duration: () => Promise<AsyncIterator<Float>>;
  source: () => Promise<AsyncIterator<Int>>;
  audioPath: () => Promise<AsyncIterator<String>>;
  frequencyList: <
    T = Promise<AsyncIterator<TrunkedCallFrequencyTimeSubscription>>
  >(args?: {
    where?: TrunkedCallFrequencyTimeWhereInput;
    orderBy?: TrunkedCallFrequencyTimeOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => T;
  callHash: () => Promise<AsyncIterator<String>>;
  wavPath: () => Promise<AsyncIterator<String>>;
}

export interface PageInfo {
  hasNextPage: Boolean;
  hasPreviousPage: Boolean;
  startCursor?: String;
  endCursor?: String;
}

export interface PageInfoPromise extends Promise<PageInfo>, Fragmentable {
  hasNextPage: () => Promise<Boolean>;
  hasPreviousPage: () => Promise<Boolean>;
  startCursor: () => Promise<String>;
  endCursor: () => Promise<String>;
}

export interface PageInfoSubscription
  extends Promise<AsyncIterator<PageInfo>>,
    Fragmentable {
  hasNextPage: () => Promise<AsyncIterator<Boolean>>;
  hasPreviousPage: () => Promise<AsyncIterator<Boolean>>;
  startCursor: () => Promise<AsyncIterator<String>>;
  endCursor: () => Promise<AsyncIterator<String>>;
}

export interface TrunkedCallSourceSubscriptionPayload {
  mutation: MutationType;
  node: TrunkedCallSource;
  updatedFields: String[];
  previousValues: TrunkedCallSourcePreviousValues;
}

export interface TrunkedCallSourceSubscriptionPayloadPromise
  extends Promise<TrunkedCallSourceSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = TrunkedCallSourcePromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <T = TrunkedCallSourcePreviousValuesPromise>() => T;
}

export interface TrunkedCallSourceSubscriptionPayloadSubscription
  extends Promise<AsyncIterator<TrunkedCallSourceSubscriptionPayload>>,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = TrunkedCallSourceSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <T = TrunkedCallSourcePreviousValuesSubscription>() => T;
}

export interface TrunkedCallSourceEdge {
  node: TrunkedCallSource;
  cursor: String;
}

export interface TrunkedCallSourceEdgePromise
  extends Promise<TrunkedCallSourceEdge>,
    Fragmentable {
  node: <T = TrunkedCallSourcePromise>() => T;
  cursor: () => Promise<String>;
}

export interface TrunkedCallSourceEdgeSubscription
  extends Promise<AsyncIterator<TrunkedCallSourceEdge>>,
    Fragmentable {
  node: <T = TrunkedCallSourceSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface TrunkedCallSourcePreviousValues {
  id: ID_Output;
  updatedAt: DateTimeOutput;
  createdAt: DateTimeOutput;
  sourceId?: Int;
  time?: DateTimeOutput;
  position?: Float;
}

export interface TrunkedCallSourcePreviousValuesPromise
  extends Promise<TrunkedCallSourcePreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  updatedAt: () => Promise<DateTimeOutput>;
  createdAt: () => Promise<DateTimeOutput>;
  sourceId: () => Promise<Int>;
  time: () => Promise<DateTimeOutput>;
  position: () => Promise<Float>;
}

export interface TrunkedCallSourcePreviousValuesSubscription
  extends Promise<AsyncIterator<TrunkedCallSourcePreviousValues>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  updatedAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  createdAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  sourceId: () => Promise<AsyncIterator<Int>>;
  time: () => Promise<AsyncIterator<DateTimeOutput>>;
  position: () => Promise<AsyncIterator<Float>>;
}

export interface TrunkedCallFrequencyTimeConnection {
  pageInfo: PageInfo;
  edges: TrunkedCallFrequencyTimeEdge[];
}

export interface TrunkedCallFrequencyTimeConnectionPromise
  extends Promise<TrunkedCallFrequencyTimeConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <T = FragmentableArray<TrunkedCallFrequencyTimeEdge>>() => T;
  aggregate: <T = AggregateTrunkedCallFrequencyTimePromise>() => T;
}

export interface TrunkedCallFrequencyTimeConnectionSubscription
  extends Promise<AsyncIterator<TrunkedCallFrequencyTimeConnection>>,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<AsyncIterator<TrunkedCallFrequencyTimeEdgeSubscription>>
  >() => T;
  aggregate: <T = AggregateTrunkedCallFrequencyTimeSubscription>() => T;
}

export interface TrunkedSystem {
  id: ID_Output;
  updatedAt: DateTimeOutput;
  createdAt: DateTimeOutput;
  controlChannels: Float[];
  channels: Float[];
  type: TrunkedSystemType;
  alphatags: String[];
  recordUnknown?: Boolean;
  shortName?: String;
  uploadScript?: String;
  audioArchive?: Boolean;
  callLog?: Boolean;
  bandplan?: TrunkedSmartnetBandplan;
  bandplanBase?: Float;
  bandplanHigh?: Float;
  bandplanSpacing?: Float;
  bandplanOffset?: Float;
  talkgroupDisplayFormat?: TrunkedTalkgroupDisplayFormat;
  delayCreateOutput?: Boolean;
  hideEncrypted?: Boolean;
  hideUnknownTalkgroups?: Boolean;
}

export interface TrunkedSystemPromise
  extends Promise<TrunkedSystem>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  updatedAt: () => Promise<DateTimeOutput>;
  createdAt: () => Promise<DateTimeOutput>;
  controlChannels: () => Promise<Float[]>;
  channels: () => Promise<Float[]>;
  type: () => Promise<TrunkedSystemType>;
  alphatags: () => Promise<String[]>;
  talkgroups: <T = FragmentableArray<TrunkedTalkgroup>>(args?: {
    where?: TrunkedTalkgroupWhereInput;
    orderBy?: TrunkedTalkgroupOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => T;
  recordUnknown: () => Promise<Boolean>;
  shortName: () => Promise<String>;
  uploadScript: () => Promise<String>;
  audioArchive: () => Promise<Boolean>;
  callLog: () => Promise<Boolean>;
  bandplan: () => Promise<TrunkedSmartnetBandplan>;
  bandplanBase: () => Promise<Float>;
  bandplanHigh: () => Promise<Float>;
  bandplanSpacing: () => Promise<Float>;
  bandplanOffset: () => Promise<Float>;
  talkgroupDisplayFormat: () => Promise<TrunkedTalkgroupDisplayFormat>;
  delayCreateOutput: () => Promise<Boolean>;
  hideEncrypted: () => Promise<Boolean>;
  hideUnknownTalkgroups: () => Promise<Boolean>;
  calls: <T = FragmentableArray<TrunkedCall>>(args?: {
    where?: TrunkedCallWhereInput;
    orderBy?: TrunkedCallOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => T;
}

export interface TrunkedSystemSubscription
  extends Promise<AsyncIterator<TrunkedSystem>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  updatedAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  createdAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  controlChannels: () => Promise<AsyncIterator<Float[]>>;
  channels: () => Promise<AsyncIterator<Float[]>>;
  type: () => Promise<AsyncIterator<TrunkedSystemType>>;
  alphatags: () => Promise<AsyncIterator<String[]>>;
  talkgroups: <
    T = Promise<AsyncIterator<TrunkedTalkgroupSubscription>>
  >(args?: {
    where?: TrunkedTalkgroupWhereInput;
    orderBy?: TrunkedTalkgroupOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => T;
  recordUnknown: () => Promise<AsyncIterator<Boolean>>;
  shortName: () => Promise<AsyncIterator<String>>;
  uploadScript: () => Promise<AsyncIterator<String>>;
  audioArchive: () => Promise<AsyncIterator<Boolean>>;
  callLog: () => Promise<AsyncIterator<Boolean>>;
  bandplan: () => Promise<AsyncIterator<TrunkedSmartnetBandplan>>;
  bandplanBase: () => Promise<AsyncIterator<Float>>;
  bandplanHigh: () => Promise<AsyncIterator<Float>>;
  bandplanSpacing: () => Promise<AsyncIterator<Float>>;
  bandplanOffset: () => Promise<AsyncIterator<Float>>;
  talkgroupDisplayFormat: () => Promise<
    AsyncIterator<TrunkedTalkgroupDisplayFormat>
  >;
  delayCreateOutput: () => Promise<AsyncIterator<Boolean>>;
  hideEncrypted: () => Promise<AsyncIterator<Boolean>>;
  hideUnknownTalkgroups: () => Promise<AsyncIterator<Boolean>>;
  calls: <T = Promise<AsyncIterator<TrunkedCallSubscription>>>(args?: {
    where?: TrunkedCallWhereInput;
    orderBy?: TrunkedCallOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => T;
}

export interface AggregateTrunkedSource {
  count: Int;
}

export interface AggregateTrunkedSourcePromise
  extends Promise<AggregateTrunkedSource>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateTrunkedSourceSubscription
  extends Promise<AsyncIterator<AggregateTrunkedSource>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface Dump1090AircraftConnection {
  pageInfo: PageInfo;
  edges: Dump1090AircraftEdge[];
}

export interface Dump1090AircraftConnectionPromise
  extends Promise<Dump1090AircraftConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <T = FragmentableArray<Dump1090AircraftEdge>>() => T;
  aggregate: <T = AggregateDump1090AircraftPromise>() => T;
}

export interface Dump1090AircraftConnectionSubscription
  extends Promise<AsyncIterator<Dump1090AircraftConnection>>,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <T = Promise<AsyncIterator<Dump1090AircraftEdgeSubscription>>>() => T;
  aggregate: <T = AggregateDump1090AircraftSubscription>() => T;
}

export interface TrunkedSourceSubscriptionPayload {
  mutation: MutationType;
  node: TrunkedSource;
  updatedFields: String[];
  previousValues: TrunkedSourcePreviousValues;
}

export interface TrunkedSourceSubscriptionPayloadPromise
  extends Promise<TrunkedSourceSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = TrunkedSourcePromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <T = TrunkedSourcePreviousValuesPromise>() => T;
}

export interface TrunkedSourceSubscriptionPayloadSubscription
  extends Promise<AsyncIterator<TrunkedSourceSubscriptionPayload>>,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = TrunkedSourceSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <T = TrunkedSourcePreviousValuesSubscription>() => T;
}

export interface TrunkedTalkgroup {
  id: ID_Output;
  updatedAt: DateTimeOutput;
  createdAt: DateTimeOutput;
  decimal: Int;
  mode?: String;
  alphaTag?: String;
  description?: String;
  tag?: String;
  group?: String;
  priority: Int;
  hash: String;
}

export interface TrunkedTalkgroupPromise
  extends Promise<TrunkedTalkgroup>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  updatedAt: () => Promise<DateTimeOutput>;
  createdAt: () => Promise<DateTimeOutput>;
  decimal: () => Promise<Int>;
  mode: () => Promise<String>;
  alphaTag: () => Promise<String>;
  description: () => Promise<String>;
  tag: () => Promise<String>;
  group: () => Promise<String>;
  priority: () => Promise<Int>;
  system: <T = TrunkedSystemPromise>() => T;
  calls: <T = FragmentableArray<TrunkedCall>>(args?: {
    where?: TrunkedCallWhereInput;
    orderBy?: TrunkedCallOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => T;
  hash: () => Promise<String>;
}

export interface TrunkedTalkgroupSubscription
  extends Promise<AsyncIterator<TrunkedTalkgroup>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  updatedAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  createdAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  decimal: () => Promise<AsyncIterator<Int>>;
  mode: () => Promise<AsyncIterator<String>>;
  alphaTag: () => Promise<AsyncIterator<String>>;
  description: () => Promise<AsyncIterator<String>>;
  tag: () => Promise<AsyncIterator<String>>;
  group: () => Promise<AsyncIterator<String>>;
  priority: () => Promise<AsyncIterator<Int>>;
  system: <T = TrunkedSystemSubscription>() => T;
  calls: <T = Promise<AsyncIterator<TrunkedCallSubscription>>>(args?: {
    where?: TrunkedCallWhereInput;
    orderBy?: TrunkedCallOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => T;
  hash: () => Promise<AsyncIterator<String>>;
}

export interface TrunkedConfigPreviousValues {
  id: ID_Output;
  updatedAt: DateTimeOutput;
  createdAt: DateTimeOutput;
  name: String;
  defaultMode: TrunkedDefaultMode;
  captureDir: String;
  callTimeout: Int;
  logFile: Boolean;
  frequencyFormat: TrunkedFrequencyFormat;
  controlWarnRate: Int;
  statusAsString: Boolean;
}

export interface TrunkedConfigPreviousValuesPromise
  extends Promise<TrunkedConfigPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  updatedAt: () => Promise<DateTimeOutput>;
  createdAt: () => Promise<DateTimeOutput>;
  name: () => Promise<String>;
  defaultMode: () => Promise<TrunkedDefaultMode>;
  captureDir: () => Promise<String>;
  callTimeout: () => Promise<Int>;
  logFile: () => Promise<Boolean>;
  frequencyFormat: () => Promise<TrunkedFrequencyFormat>;
  controlWarnRate: () => Promise<Int>;
  statusAsString: () => Promise<Boolean>;
}

export interface TrunkedConfigPreviousValuesSubscription
  extends Promise<AsyncIterator<TrunkedConfigPreviousValues>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  updatedAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  createdAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  name: () => Promise<AsyncIterator<String>>;
  defaultMode: () => Promise<AsyncIterator<TrunkedDefaultMode>>;
  captureDir: () => Promise<AsyncIterator<String>>;
  callTimeout: () => Promise<AsyncIterator<Int>>;
  logFile: () => Promise<AsyncIterator<Boolean>>;
  frequencyFormat: () => Promise<AsyncIterator<TrunkedFrequencyFormat>>;
  controlWarnRate: () => Promise<AsyncIterator<Int>>;
  statusAsString: () => Promise<AsyncIterator<Boolean>>;
}

export interface TrunkedConfigSubscriptionPayload {
  mutation: MutationType;
  node: TrunkedConfig;
  updatedFields: String[];
  previousValues: TrunkedConfigPreviousValues;
}

export interface TrunkedConfigSubscriptionPayloadPromise
  extends Promise<TrunkedConfigSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = TrunkedConfigPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <T = TrunkedConfigPreviousValuesPromise>() => T;
}

export interface TrunkedConfigSubscriptionPayloadSubscription
  extends Promise<AsyncIterator<TrunkedConfigSubscriptionPayload>>,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = TrunkedConfigSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <T = TrunkedConfigPreviousValuesSubscription>() => T;
}

export interface TrunkedConfig {
  id: ID_Output;
  updatedAt: DateTimeOutput;
  createdAt: DateTimeOutput;
  name: String;
  defaultMode: TrunkedDefaultMode;
  captureDir: String;
  callTimeout: Int;
  logFile: Boolean;
  frequencyFormat: TrunkedFrequencyFormat;
  controlWarnRate: Int;
  statusAsString: Boolean;
}

export interface TrunkedConfigPromise
  extends Promise<TrunkedConfig>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  updatedAt: () => Promise<DateTimeOutput>;
  createdAt: () => Promise<DateTimeOutput>;
  name: () => Promise<String>;
  sources: <T = FragmentableArray<TrunkedSource>>(args?: {
    where?: TrunkedSourceWhereInput;
    orderBy?: TrunkedSourceOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => T;
  systems: <T = FragmentableArray<TrunkedSystem>>(args?: {
    where?: TrunkedSystemWhereInput;
    orderBy?: TrunkedSystemOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => T;
  defaultMode: () => Promise<TrunkedDefaultMode>;
  captureDir: () => Promise<String>;
  callTimeout: () => Promise<Int>;
  logFile: () => Promise<Boolean>;
  frequencyFormat: () => Promise<TrunkedFrequencyFormat>;
  controlWarnRate: () => Promise<Int>;
  statusAsString: () => Promise<Boolean>;
}

export interface TrunkedConfigSubscription
  extends Promise<AsyncIterator<TrunkedConfig>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  updatedAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  createdAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  name: () => Promise<AsyncIterator<String>>;
  sources: <T = Promise<AsyncIterator<TrunkedSourceSubscription>>>(args?: {
    where?: TrunkedSourceWhereInput;
    orderBy?: TrunkedSourceOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => T;
  systems: <T = Promise<AsyncIterator<TrunkedSystemSubscription>>>(args?: {
    where?: TrunkedSystemWhereInput;
    orderBy?: TrunkedSystemOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => T;
  defaultMode: () => Promise<AsyncIterator<TrunkedDefaultMode>>;
  captureDir: () => Promise<AsyncIterator<String>>;
  callTimeout: () => Promise<AsyncIterator<Int>>;
  logFile: () => Promise<AsyncIterator<Boolean>>;
  frequencyFormat: () => Promise<AsyncIterator<TrunkedFrequencyFormat>>;
  controlWarnRate: () => Promise<AsyncIterator<Int>>;
  statusAsString: () => Promise<AsyncIterator<Boolean>>;
}

export interface TrunkedConfigEdge {
  node: TrunkedConfig;
  cursor: String;
}

export interface TrunkedConfigEdgePromise
  extends Promise<TrunkedConfigEdge>,
    Fragmentable {
  node: <T = TrunkedConfigPromise>() => T;
  cursor: () => Promise<String>;
}

export interface TrunkedConfigEdgeSubscription
  extends Promise<AsyncIterator<TrunkedConfigEdge>>,
    Fragmentable {
  node: <T = TrunkedConfigSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface TrunkedCallEdge {
  node: TrunkedCall;
  cursor: String;
}

export interface TrunkedCallEdgePromise
  extends Promise<TrunkedCallEdge>,
    Fragmentable {
  node: <T = TrunkedCallPromise>() => T;
  cursor: () => Promise<String>;
}

export interface TrunkedCallEdgeSubscription
  extends Promise<AsyncIterator<TrunkedCallEdge>>,
    Fragmentable {
  node: <T = TrunkedCallSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface AggregateTrunkedCallFrequencyTime {
  count: Int;
}

export interface AggregateTrunkedCallFrequencyTimePromise
  extends Promise<AggregateTrunkedCallFrequencyTime>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateTrunkedCallFrequencyTimeSubscription
  extends Promise<AsyncIterator<AggregateTrunkedCallFrequencyTime>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

/*
The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
*/
export type String = string;

export type Long = string;

/*
The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. 
*/
export type Int = number;

/*
The `Boolean` scalar type represents `true` or `false`.
*/
export type Boolean = boolean;

/*
The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
*/
export type ID_Input = string | number;
export type ID_Output = string;

/*
DateTime scalar input type, allowing Date
*/
export type DateTimeInput = Date | string;

/*
DateTime scalar output type, which is always a string
*/
export type DateTimeOutput = string;

/*
The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point). 
*/
export type Float = number;

/**
 * Model Metadata
 */

export const models: Model[] = [
  {
    name: "TrunkedConfig",
    embedded: false
  },
  {
    name: "TrunkedSource",
    embedded: false
  },
  {
    name: "TrunkedSystem",
    embedded: false
  },
  {
    name: "TrunkedTalkgroup",
    embedded: false
  },
  {
    name: "TrunkedCall",
    embedded: false
  },
  {
    name: "TrunkedCallSource",
    embedded: false
  },
  {
    name: "TrunkedCallFrequencyTime",
    embedded: false
  },
  {
    name: "TrunkedModulation",
    embedded: false
  },
  {
    name: "TrunkedSystemType",
    embedded: false
  },
  {
    name: "TrunkedSmartnetBandplan",
    embedded: false
  },
  {
    name: "TrunkedTalkgroupDisplayFormat",
    embedded: false
  },
  {
    name: "TrunkedDefaultMode",
    embedded: false
  },
  {
    name: "TrunkedFrequencyFormat",
    embedded: false
  },
  {
    name: "Dump1090Message",
    embedded: false
  },
  {
    name: "Dump1090Aircraft",
    embedded: false
  },
  {
    name: "Dump1090MessageType",
    embedded: false
  },
  {
    name: "Dump1090TransmissionType",
    embedded: false
  }
];

/**
 * Type Defs
 */

export const Prisma = makePrismaClientClass<ClientConstructor<Prisma>>({
  typeDefs,
  models,
  endpoint: `${process.env["PRISMA_ENDPOINT"]}`,
  secret: `scrapingskies`
});
export const prisma = new Prisma();
