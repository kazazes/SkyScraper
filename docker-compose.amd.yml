version: "2"
volumes:
  resin-data: {}
services:
  netdata:
    image: sibylvision/netdata
    container_name: netdata
    hostname: edge.sibyl.vision
    ports:
      - 19999:19999
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    privileged: true
    restart: always
    labels:
      io.balena.features.dbus: "1"
      io.balena.features.balena-socket: "1"
    cpu_shares: 200
  trunk-recorder:
    container_name: trunk-recorder
    build:
      dockerfile: amd64.dockerfile
      context: ./host-images/trunk-recorder
    privileged: true
    depends_on:
      - "config"
    network_mode: host
    volumes:
      - "./data:/data"
    environment:
      - RECORDER_CONF=sites/SF-PK/config.json
      - SHORTNAME=SFPD
    restart: on-failure
  ngrok:
    links:
      - nginx:https
    container_name: ngrok
    build:
      dockerfile: amd64.dockerfile
      context: ./host-images/ngrok
    privileged: false
    depends_on:
      - nginx
    command: ngrok tls -region=us -authtoken=iiX4RYrrdFWgU9pdDEnR_4qRcocGF5v9E3SjGmys7L -hostname=edge.sibyl.vision nginx:443
  config:
    container_name: config
    build:
      dockerfile: amd64.dockerfile
      context: ./host-images/config
    network_mode: host
    restart: "on-failure"
    volumes:
      - "./data:/data"
  manager:
    container_name: manager
    build:
      dockerfile: amd64.dockerfile
      context: ./host-images/manager
    volumes:
      - "./data:/data"
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - HOST=0.0.0.0
      - NODE_ENV=production
      - NETDATA_HTTP=https://edge.sibyl.vision/netdata/
      - GRAPHQL_HTTP=https://edge.sibyl.vision/graphql/
      - GRAPHQL_WS=wss://edge.sibyl.vision/graphql/
    restart: always
  datarouter:
    container_name: datarouter
    build:
      dockerfile: amd64.dockerfile
      context: ./host-images/data-router
    volumes:
      - "./data:/data"
    ports:
      - "4000:4000"
      - "1883:1883"
    environment:
      - NODE_ENV=production
      - GRAPHQL_PORT=4000
      - MQTT_PORT=1883
      - VUE_APP_GRAPHQL_WS=wss://edge.sibyl.vision/graphql/subscriptions
      - VUE_APP_GRAPHQL_HTTP=https://edge.sibyl.vision/graphql/
  nginx:
    container_name: nginx
    depends_on:
      - manager
      - nodered
      - netdata
    build:
      dockerfile: amd64.dockerfile
      context: host-images/nginx
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - "./data:/data"
  nodered:
    container_name: nodered
    build:
      dockerfile: amd64.dockerfile
      context: ./host-images/node-red
    volumes:
      - "./data:/data"
    ports:
      - "1880:1880"
    environment:
      - NODE_ENV=production
    restart: always
  portainer:
    container_name: portainer
    image: portainer/portainer
    ports:
      - "9000:9000"
    privileged: true
    labels:
      io.balena.features.balena-socket: "1"
    command: "--admin-password $$2y$$05$$KPaHvzT/lom.XYVR/KzUkewmIaAypH9zM/m0.2RLQHjYsWKrtPkCC --data /data/portainer"
