/** Declaration file generated by dts-gen */

export class Client {
    constructor(...args: any[]);

    createApprovalRequest(...args: any[]): void;

    deleteUser(...args: any[]): void;

    getApplicationDetails(...args: any[]): void;

    getApplicationStatistics(...args: any[]): void;

    getApprovalRequest(...args: any[]): void;

    getPhoneInformation(...args: any[]): void;

    getUserStatus(...args: any[]): void;

    registerActivity(...args: any[]): void;

    registerUser(...args: any[]): Promise<any>;

    requestCall(...args: any[]): void;

    requestSms(...args: any[]): Promise<any>;

    startPhoneVerification(...args: any[]): void;

    verifyCallback(...args: any[]): void;

    verifyPhone(...args: any[]): void;

    verifyToken(...args: any[]): void;

}

export const enums: {
    activity: {
        BANNED: string;
        COOKIE_LOGIN: string;
        PASSWORD_RESET: string;
        UNBANNED: string;
    };
    locale: {
        ARABIC: string;
        CANTONESE: string;
        CATALAN: string;
        DANISH: string;
        DUTCH: string;
        ENGLISH: string;
        FINNISH: string;
        FRENCH: string;
        GERMAN: string;
        GREEK: string;
        HEBREW: string;
        HINDI: string;
        HUNGARIAN: string;
        INDONESIAN: string;
        ITALIAN: string;
        JAPANESE: string;
        KOREAN: string;
        MANDARIN: string;
        NORWEGIAN: string;
        POLISH: string;
        PORTUGUESE: string;
        ROMANIAN: string;
        RUSSIAN: string;
        SPANISH: string;
        SWEDISH: string;
        TAGALOG: string;
        THAI: string;
        TURKISH: string;
        VIETNAMESE: string;
    };
    resolution: {
        DEFAULT: string;
        HIGH: string;
        LOW: string;
        MEDIUM: string;
    };
    verificationVia: {
        CALL: string;
        SMS: string;
    };
};

export namespace errors {
    function AssertionFailedError(...args: any[]): void;

    function HttpError(...args: any[]): void;

    function StandardError(...args: any[]): void;

    function ValidationFailedError(...args: any[]): void;

    namespace AssertionFailedError {
        const ACCEPTED: number;

        const ALREADY_REPORTED: number;

        const BAD_GATEWAY: number;

        const BAD_REQUEST: number;

        const BANDWIDTH_LIMIT_EXCEEDED: number;

        const CONFLICT: number;

        const CONTINUE: number;

        const CREATED: number;

        const EARLY_HINTS: number;

        const EXPECTATION_FAILED: number;

        const FAILED_DEPENDENCY: number;

        const FORBIDDEN: number;

        const FOUND: number;

        const GATEWAY_TIMEOUT: number;

        const GONE: number;

        const HTTP_VERSION_NOT_SUPPORTED: number;

        const IM_A_TEAPOT: number;

        const IM_USED: number;

        const INSUFFICIENT_STORAGE: number;

        const INTERNAL_SERVER_ERROR: number;

        const LENGTH_REQUIRED: number;

        const LOCKED: number;

        const LOOP_DETECTED: number;

        const METHOD_NOT_ALLOWED: number;

        const MISDIRECTED_REQUEST: number;

        const MOVED_PERMANENTLY: number;

        const MULTIPLE_CHOICES: number;

        const MULTI_STATUS: number;

        const NETWORK_AUTHENTICATION_REQUIRED: number;

        const NON_AUTHORITATIVE_INFORMATION: number;

        const NOT_ACCEPTABLE: number;

        const NOT_EXTENDED: number;

        const NOT_FOUND: number;

        const NOT_IMPLEMENTED: number;

        const NOT_MODIFIED: number;

        const NO_CONTENT: number;

        const OK: number;

        const PARTIAL_CONTENT: number;

        const PAYLOAD_TOO_LARGE: number;

        const PAYMENT_REQUIRED: number;

        const PERMANENT_REDIRECT: number;

        const PRECONDITION_FAILED: number;

        const PRECONDITION_REQUIRED: number;

        const PROCESSING: number;

        const PROXY_AUTHENTICATION_REQUIRED: number;

        const RANGE_NOT_SATISFIABLE: number;

        const REQUEST_HEADER_FIELDS_TOO_LARGE: number;

        const REQUEST_TIMEOUT: number;

        const RESET_CONTENT: number;

        const SEE_OTHER: number;

        const SERVICE_UNAVAILABLE: number;

        const SWITCHING_PROTOCOLS: number;

        const TEMPORARY_REDIRECT: number;

        const TOO_MANY_REQUESTS: number;

        const UNAUTHORIZED: number;

        const UNAVAILABLE_FOR_LEGAL_REASONS: number;

        const UNORDERED_COLLECTION: number;

        const UNPROCESSABLE_ENTITY: number;

        const UNSUPPORTED_MEDIA_TYPE: number;

        const UPGRADE_REQUIRED: number;

        const URI_TOO_LONG: number;

        const USE_PROXY: number;

        const VARIANT_ALSO_NEGOTIATES: number;

    }

    namespace HttpError {
        const ACCEPTED: number;

        const ALREADY_REPORTED: number;

        const BAD_GATEWAY: number;

        const BAD_REQUEST: number;

        const BANDWIDTH_LIMIT_EXCEEDED: number;

        const CONFLICT: number;

        const CONTINUE: number;

        const CREATED: number;

        const EARLY_HINTS: number;

        const EXPECTATION_FAILED: number;

        const FAILED_DEPENDENCY: number;

        const FORBIDDEN: number;

        const FOUND: number;

        const GATEWAY_TIMEOUT: number;

        const GONE: number;

        const HTTP_VERSION_NOT_SUPPORTED: number;

        const IM_A_TEAPOT: number;

        const IM_USED: number;

        const INSUFFICIENT_STORAGE: number;

        const INTERNAL_SERVER_ERROR: number;

        const LENGTH_REQUIRED: number;

        const LOCKED: number;

        const LOOP_DETECTED: number;

        const METHOD_NOT_ALLOWED: number;

        const MISDIRECTED_REQUEST: number;

        const MOVED_PERMANENTLY: number;

        const MULTIPLE_CHOICES: number;

        const MULTI_STATUS: number;

        const NETWORK_AUTHENTICATION_REQUIRED: number;

        const NON_AUTHORITATIVE_INFORMATION: number;

        const NOT_ACCEPTABLE: number;

        const NOT_EXTENDED: number;

        const NOT_FOUND: number;

        const NOT_IMPLEMENTED: number;

        const NOT_MODIFIED: number;

        const NO_CONTENT: number;

        const OK: number;

        const PARTIAL_CONTENT: number;

        const PAYLOAD_TOO_LARGE: number;

        const PAYMENT_REQUIRED: number;

        const PERMANENT_REDIRECT: number;

        const PRECONDITION_FAILED: number;

        const PRECONDITION_REQUIRED: number;

        const PROCESSING: number;

        const PROXY_AUTHENTICATION_REQUIRED: number;

        const RANGE_NOT_SATISFIABLE: number;

        const REQUEST_HEADER_FIELDS_TOO_LARGE: number;

        const REQUEST_TIMEOUT: number;

        const RESET_CONTENT: number;

        const SEE_OTHER: number;

        const SERVICE_UNAVAILABLE: number;

        const SWITCHING_PROTOCOLS: number;

        const TEMPORARY_REDIRECT: number;

        const TOO_MANY_REQUESTS: number;

        const UNAUTHORIZED: number;

        const UNAVAILABLE_FOR_LEGAL_REASONS: number;

        const UNORDERED_COLLECTION: number;

        const UNPROCESSABLE_ENTITY: number;

        const UNSUPPORTED_MEDIA_TYPE: number;

        const UPGRADE_REQUIRED: number;

        const URI_TOO_LONG: number;

        const USE_PROXY: number;

        const VARIANT_ALSO_NEGOTIATES: number;

    }

    namespace StandardError {
        const ACCEPTED: number;

        const ALREADY_REPORTED: number;

        const BAD_GATEWAY: number;

        const BAD_REQUEST: number;

        const BANDWIDTH_LIMIT_EXCEEDED: number;

        const CONFLICT: number;

        const CONTINUE: number;

        const CREATED: number;

        const EARLY_HINTS: number;

        const EXPECTATION_FAILED: number;

        const FAILED_DEPENDENCY: number;

        const FORBIDDEN: number;

        const FOUND: number;

        const GATEWAY_TIMEOUT: number;

        const GONE: number;

        const HTTP_VERSION_NOT_SUPPORTED: number;

        const IM_A_TEAPOT: number;

        const IM_USED: number;

        const INSUFFICIENT_STORAGE: number;

        const INTERNAL_SERVER_ERROR: number;

        const LENGTH_REQUIRED: number;

        const LOCKED: number;

        const LOOP_DETECTED: number;

        const METHOD_NOT_ALLOWED: number;

        const MISDIRECTED_REQUEST: number;

        const MOVED_PERMANENTLY: number;

        const MULTIPLE_CHOICES: number;

        const MULTI_STATUS: number;

        const NETWORK_AUTHENTICATION_REQUIRED: number;

        const NON_AUTHORITATIVE_INFORMATION: number;

        const NOT_ACCEPTABLE: number;

        const NOT_EXTENDED: number;

        const NOT_FOUND: number;

        const NOT_IMPLEMENTED: number;

        const NOT_MODIFIED: number;

        const NO_CONTENT: number;

        const OK: number;

        const PARTIAL_CONTENT: number;

        const PAYLOAD_TOO_LARGE: number;

        const PAYMENT_REQUIRED: number;

        const PERMANENT_REDIRECT: number;

        const PRECONDITION_FAILED: number;

        const PRECONDITION_REQUIRED: number;

        const PROCESSING: number;

        const PROXY_AUTHENTICATION_REQUIRED: number;

        const RANGE_NOT_SATISFIABLE: number;

        const REQUEST_HEADER_FIELDS_TOO_LARGE: number;

        const REQUEST_TIMEOUT: number;

        const RESET_CONTENT: number;

        const SEE_OTHER: number;

        const SERVICE_UNAVAILABLE: number;

        const SWITCHING_PROTOCOLS: number;

        const TEMPORARY_REDIRECT: number;

        const TOO_MANY_REQUESTS: number;

        const UNAUTHORIZED: number;

        const UNAVAILABLE_FOR_LEGAL_REASONS: number;

        const UNORDERED_COLLECTION: number;

        const UNPROCESSABLE_ENTITY: number;

        const UNSUPPORTED_MEDIA_TYPE: number;

        const UPGRADE_REQUIRED: number;

        const URI_TOO_LONG: number;

        const USE_PROXY: number;

        const VARIANT_ALSO_NEGOTIATES: number;

    }

    namespace ValidationFailedError {
        const ACCEPTED: number;

        const ALREADY_REPORTED: number;

        const BAD_GATEWAY: number;

        const BAD_REQUEST: number;

        const BANDWIDTH_LIMIT_EXCEEDED: number;

        const CONFLICT: number;

        const CONTINUE: number;

        const CREATED: number;

        const EARLY_HINTS: number;

        const EXPECTATION_FAILED: number;

        const FAILED_DEPENDENCY: number;

        const FORBIDDEN: number;

        const FOUND: number;

        const GATEWAY_TIMEOUT: number;

        const GONE: number;

        const HTTP_VERSION_NOT_SUPPORTED: number;

        const IM_A_TEAPOT: number;

        const IM_USED: number;

        const INSUFFICIENT_STORAGE: number;

        const INTERNAL_SERVER_ERROR: number;

        const LENGTH_REQUIRED: number;

        const LOCKED: number;

        const LOOP_DETECTED: number;

        const METHOD_NOT_ALLOWED: number;

        const MISDIRECTED_REQUEST: number;

        const MOVED_PERMANENTLY: number;

        const MULTIPLE_CHOICES: number;

        const MULTI_STATUS: number;

        const NETWORK_AUTHENTICATION_REQUIRED: number;

        const NON_AUTHORITATIVE_INFORMATION: number;

        const NOT_ACCEPTABLE: number;

        const NOT_EXTENDED: number;

        const NOT_FOUND: number;

        const NOT_IMPLEMENTED: number;

        const NOT_MODIFIED: number;

        const NO_CONTENT: number;

        const OK: number;

        const PARTIAL_CONTENT: number;

        const PAYLOAD_TOO_LARGE: number;

        const PAYMENT_REQUIRED: number;

        const PERMANENT_REDIRECT: number;

        const PRECONDITION_FAILED: number;

        const PRECONDITION_REQUIRED: number;

        const PROCESSING: number;

        const PROXY_AUTHENTICATION_REQUIRED: number;

        const RANGE_NOT_SATISFIABLE: number;

        const REQUEST_HEADER_FIELDS_TOO_LARGE: number;

        const REQUEST_TIMEOUT: number;

        const RESET_CONTENT: number;

        const SEE_OTHER: number;

        const SERVICE_UNAVAILABLE: number;

        const SWITCHING_PROTOCOLS: number;

        const TEMPORARY_REDIRECT: number;

        const TOO_MANY_REQUESTS: number;

        const UNAUTHORIZED: number;

        const UNAVAILABLE_FOR_LEGAL_REASONS: number;

        const UNORDERED_COLLECTION: number;

        const UNPROCESSABLE_ENTITY: number;

        const UNSUPPORTED_MEDIA_TYPE: number;

        const UPGRADE_REQUIRED: number;

        const URI_TOO_LONG: number;

        const USE_PROXY: number;

        const VARIANT_ALSO_NEGOTIATES: number;

    }

}

